import json

print(type({'endpoints': [{'name': 'Search Code', 'url': 'https://api.github.com/search/code', 'args_in_url': False, 'method': 'GET', 'input_parameters': [{'name': 'q', 'required': True, 'type': 'string', 'description': 'The search keywords, qualifiers, and filters.'}], 'output_parameters': [{'name': 'total_count', 'is_array': False, 'type': 'integer', 'description': 'Total count of search results.'}, {'name': 'items', 'is_array': True, 'type': 'object', 'description': 'Array of search result items.'}], 'description': 'Search code across repositories.'}, {'name': 'List Secret Scanning Alerts for Organization', 'url': 'https://api.github.com/orgs/{org}/secret-scanning/alerts', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}], 'output_parameters': [{'name': 'alerts', 'is_array': True, 'type': 'object', 'description': 'Array of secret scanning alerts.'}], 'description': 'List secret scanning alerts for an organization.'}, {'name': 'List Secret Scanning Alerts for Repository', 'url': 'https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}], 'output_parameters': [{'name': 'alerts', 'is_array': True, 'type': 'object', 'description': 'Array of secret scanning alerts.'}], 'description': 'List secret scanning alerts for a repository.'}, {'name': 'Get a Secret Scanning Alert', 'url': 'https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'alert_number', 'required': True, 'type': 'integer', 'description': 'Alert number identifier.'}], 'output_parameters': [{'name': 'alert', 'is_array': False, 'type': 'object', 'description': 'Secret scanning alert details.'}], 'description': 'Get a specific secret scanning alert.'}, {'name': 'Update a Secret Scanning Alert', 'url': 'https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'alert_number', 'required': True, 'type': 'integer', 'description': 'Alert number identifier.'}, {'name': 'state', 'required': False, 'type': 'string', 'description': "State of the alert, e.g., 'open', 'closed'."}], 'output_parameters': [{'name': 'alert', 'is_array': False, 'type': 'object', 'description': 'Updated secret scanning alert details.'}], 'description': 'Update a secret scanning alert.'}, {'name': 'List Locations for a Secret Scanning Alert', 'url': 'https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'alert_number', 'required': True, 'type': 'integer', 'description': 'Alert number identifier.'}], 'output_parameters': [{'name': 'locations', 'is_array': True, 'type': 'object', 'description': 'Array of locations associated with the alert.'}], 'description': 'List locations for a secret scanning alert.'}, {'name': 'Get Secret Scanning Scan History for a Repository', 'url': 'https://api.github.com/repos/{owner}/{repo}/secret-scanning/scan-history', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}], 'output_parameters': [{'name': 'scan_history', 'is_array': True, 'type': 'object', 'description': 'Secret scanning scan history entries.'}], 'description': 'Get secret scanning scan history for a repository.'}, {'name': 'List Global Security Advisories', 'url': 'https://api.github.com/advisories', 'args_in_url': False, 'method': 'GET', 'input_parameters': [], 'output_parameters': [{'name': 'advisories', 'is_array': True, 'type': 'object', 'description': 'Array of security advisories.'}], 'description': 'List all global security advisories.'}, {'name': 'Get a Global Security Advisory', 'url': 'https://api.github.com/advisories/{ghsa_id}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'ghsa_id', 'required': True, 'type': 'string', 'description': 'GHSA ID of the security advisory.'}], 'output_parameters': [{'name': 'advisory', 'is_array': False, 'type': 'object', 'description': 'Security advisory details.'}], 'description': 'Get a specific global security advisory.'}, {'name': 'List Repository Security Advisories for an Organization', 'url': 'https://api.github.com/orgs/{org}/security-advisories', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}], 'output_parameters': [{'name': 'advisories', 'is_array': True, 'type': 'object', 'description': 'Array of repository security advisories.'}], 'description': 'List security advisories for repositories in an organization.'}, {'name': 'List Repository Security Advisories for a Repository', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}], 'output_parameters': [{'name': 'advisories', 'is_array': True, 'type': 'object', 'description': 'Array of security advisories.'}], 'description': 'List security advisories for a repository.'}, {'name': 'Create a Repository Security Advisory', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'advisory_data', 'required': True, 'type': 'object', 'description': 'Data for creating security advisory.'}], 'output_parameters': [{'name': 'advisory', 'is_array': False, 'type': 'object', 'description': 'Created security advisory details.'}], 'description': 'Create a security advisory for a repository.'}, {'name': 'Report a Security Vulnerability (Private Report)', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories/reports', 'args_in_url': False, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'report_data', 'required': True, 'type': 'object', 'description': 'Data for reporting a vulnerability.'}], 'output_parameters': [{'name': 'report', 'is_array': False, 'type': 'object', 'description': 'Report details.'}], 'description': 'Privately report a security vulnerability.'}, {'name': 'Get a Repository Security Advisory', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'ghsa_id', 'required': True, 'type': 'string', 'description': 'GHSA ID of the security advisory.'}], 'output_parameters': [{'name': 'advisory', 'is_array': False, 'type': 'object', 'description': 'Security advisory details.'}], 'description': 'Get a specific repository security advisory.'}, {'name': 'Update a Repository Security Advisory', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'ghsa_id', 'required': True, 'type': 'string', 'description': 'GHSA ID of the security advisory.'}, {'name': 'advisory_update', 'required': True, 'type': 'object', 'description': 'Data for updating security advisory.'}], 'output_parameters': [{'name': 'advisory', 'is_array': False, 'type': 'object', 'description': 'Updated security advisory details.'}], 'description': 'Update a repository security advisory.'}, {'name': 'Request a CVE for a Repository Security Advisory', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'ghsa_id', 'required': True, 'type': 'string', 'description': 'GHSA ID of the security advisory.'}, {'name': 'cve_data', 'required': True, 'type': 'object', 'description': 'CVE data to associate.'}], 'output_parameters': [{'name': 'cve', 'is_array': False, 'type': 'object', 'description': 'CVE details.'}], 'description': 'Request a CVE for a security advisory.'}, {'name': 'Create a Temporary Private Fork of a Repository', 'url': 'https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'owner', 'required': True, 'type': 'string', 'description': 'Repository owner.'}, {'name': 'repo', 'required': True, 'type': 'string', 'description': 'Repository name.'}, {'name': 'ghsa_id', 'required': True, 'type': 'string', 'description': 'GHSA ID of the security advisory.'}], 'output_parameters': [{'name': 'fork', 'is_array': False, 'type': 'object', 'description': 'Details of the created fork.'}], 'description': 'Create a temporary private fork of a repository.'}, {'name': 'List Teams in an Organization', 'url': 'https://api.github.com/orgs/{org}/teams', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}], 'output_parameters': [{'name': 'teams', 'is_array': True, 'type': 'object', 'description': 'Array of team objects.'}], 'description': 'List teams in an organization.'}, {'name': 'Create a Team in an Organization', 'url': 'https://api.github.com/orgs/{org}/teams', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}, {'name': 'team_data', 'required': True, 'type': 'object', 'description': 'Data for creating a team.'}], 'output_parameters': [{'name': 'team', 'is_array': False, 'type': 'object', 'description': 'Created team details.'}], 'description': 'Create a new team in an organization.'}, {'name': 'List Projects for a Team', 'url': 'https://api.github.com/orgs/{org}/teams/{team_slug}/projects', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}, {'name': 'team_slug', 'required': True, 'type': 'string', 'description': 'Slug of the team.'}], 'output_parameters': [{'name': 'projects', 'is_array': True, 'type': 'object', 'description': 'Array of project objects.'}], 'description': 'List projects for a team.'}, {'name': 'Check Team Permissions for a Project', 'url': 'https://api.github.com/orgs/{org}/teams/{team_slug}/projects/{project_id}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}, {'name': 'team_slug', 'required': True, 'type': 'string', 'description': 'Slug of the team.'}, {'name': 'project_id', 'required': True, 'type': 'integer', 'description': 'Project ID.'}], 'output_parameters': [{'name': 'permissions', 'is_array': False, 'type': 'object', 'description': 'Permissions of the team for the project.'}], 'description': "Check a team's permissions for a project."}, {'name': 'Add or Update Team Project Permissions', 'url': 'https://api.github.com/orgs/{org}/teams/{team_slug}/projects/{project_id}', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}, {'name': 'team_slug', 'required': True, 'type': 'string', 'description': 'Slug of the team.'}, {'name': 'project_id', 'required': True, 'type': 'integer', 'description': 'Project ID.'}, {'name': 'permission', 'required': False, 'type': 'string', 'description': 'Permission level.'}], 'output_parameters': [{'name': 'status', 'is_array': False, 'type': 'string', 'description': 'Status of the operation.'}], 'description': "Add or update a team's permissions for a project."}, {'name': 'Remove a Project from a Team', 'url': 'https://api.github.com/orgs/{org}/teams/{team_slug}/projects/{project_id}', 'args_in_url': True, 'method': 'DELETE', 'input_parameters': [{'name': 'org', 'required': True, 'type': 'string', 'description': 'Organization name.'}, {'name': 'team_slug', 'required': True, 'type': 'string', 'description': 'Slug of the team.'}, {'name': 'project_id', 'required': True, 'type': 'integer', 'description': 'Project ID.'}], 'output_parameters': [{'name': 'status', 'is_array': False, 'type': 'string', 'description': 'Status of the operation.'}], 'description': 'Remove a project from a team.'}, {'name': 'Get Team Member (Legacy)', 'url': 'https://api.github.com/teams/{team_id}/members/{username}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'team_id', 'required': True, 'type': 'integer', 'description': 'Team ID.'}, {'name': 'username', 'required': True, 'type': 'string', 'description': 'Username of the team member.'}], 'output_parameters': [{'name': 'member', 'is_array': False, 'type': 'object', 'description': 'Team member details.'}], 'description': 'Get a team member (legacy endpoint).'}, {'name': 'Add Team Member (Legacy)', 'url': 'https://api.github.com/teams/{team_id}/members/{username}', 'args_in_url': True, 'method': 'PUT', 'input_parameters': [{'name': 'team_id', 'required': True, 'type': 'integer', 'description': 'Team ID.'}, {'name': 'username', 'required': True, 'type': 'string', 'description': 'Username of the person to add.'}], 'output_parameters': [{'name': 'status', 'is_array': False, 'type': 'string', 'description': 'Operation status.'}], 'description': 'Add a member to a team (legacy endpoint).'}, {'name': 'Remove Team Member (Legacy)', 'url': 'https://api.github.com/teams/{team_id}/members/{username}', 'args_in_url': True, 'method': 'DELETE', 'input_parameters': [{'name': 'team_id', 'required': True, 'type': 'integer', 'description': 'Team ID.'}, {'name': 'username', 'required': True, 'type': 'string', 'description': 'Username of the member to remove.'}], 'output_parameters': [{'name': 'status', 'is_array': False, 'type': 'string', 'description': 'Operation status.'}], 'description': 'Remove a member from a team (legacy endpoint).'}, {'name': 'List Users', 'url': 'https://api.github.com/users', 'args_in_url': False, 'method': 'GET', 'input_parameters': [], 'output_parameters': [{'name': 'users', 'is_array': True, 'type': 'object', 'description': 'Array of user objects.'}], 'description': 'List users.'}, {'name': 'Get User Attestations', 'url': 'https://api.github.com/users/{username}/attestations/{subject_digest}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}, {'name': 'subject_digest', 'required': True, 'type': 'string', 'description': 'Subject digest of attestations.'}], 'output_parameters': [{'name': 'attestations', 'is_array': True, 'type': 'object', 'description': 'List of attestations.'}], 'description': 'List attestations for a user.'}, {'name': 'List Followers of a User', 'url': 'https://api.github.com/users/{username}/followers', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'followers', 'is_array': True, 'type': 'object', 'description': 'List of followers.'}], 'description': 'List followers of a user.'}, {'name': 'List Followed Users', 'url': 'https://api.github.com/users/{username}/following', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'following', 'is_array': True, 'type': 'object', 'description': 'List of users being followed.'}], 'description': 'List users that a user follows.'}, {'name': 'Check if User Follows Another', 'url': 'https://api.github.com/users/{username}/following/{target_user}', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}, {'name': 'target_user', 'required': True, 'type': 'string', 'description': 'Target username to check.'}], 'output_parameters': [{'name': 'follows', 'is_array': False, 'type': 'boolean', 'description': 'Whether the user follows the target user.'}], 'description': 'Check if a user follows another user.'}, {'name': 'List GPG Keys for a User', 'url': 'https://api.github.com/users/{username}/gpg_keys', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'gpg_keys', 'is_array': True, 'type': 'object', 'description': 'List of GPG keys.'}], 'description': 'List GPG keys for a user.'}, {'name': 'List Public Keys for a User', 'url': 'https://api.github.com/users/{username}/keys', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'public_keys', 'is_array': True, 'type': 'object', 'description': 'List of public keys.'}], 'description': 'List public keys for a user.'}, {'name': 'List Social Accounts for a User', 'url': 'https://api.github.com/users/{username}/social_accounts', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'social_accounts', 'is_array': True, 'type': 'object', 'description': 'List of social accounts.'}], 'description': 'List social accounts for a user.'}, {'name': 'List SSH Signing Keys for a User', 'url': 'https://api.github.com/users/{username}/ssh_signing_keys', 'args_in_url': True, 'method': 'GET', 'input_parameters': [{'name': 'username', 'required': True, 'type': 'string', 'description': 'Username.'}], 'output_parameters': [{'name': 'ssh_keys', 'is_array': True, 'type': 'object', 'description': 'List of SSH signing keys.'}], 'description': 'List SSH signing keys for a user.'}]}))
