{
    "endpoints": [
        {
            "name": "List artifacts for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/artifacts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Username or organization name of the repository owner (case-insensitive)."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without the .git extension (case-insensitive)."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default is 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default is 1."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Filter artifacts by name with this value."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of artifacts."
                },
                {
                    "name": "artifacts",
                    "is_array": true,
                    "type": "object",
                    "description": "List of artifact objects with details such as id, name, size, URL, etc."
                }
            ],
            "description": "Retrieves a list of artifacts for a specified repository."
        },
        {
            "name": "Get an artifact",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Owner of the repository (case-insensitive)."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without the .git extension (case-insensitive)."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the artifact."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the artifact."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID of the artifact."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the artifact."
                },
                {
                    "name": "size_in_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Size of the artifact in bytes."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL for the artifact."
                },
                {
                    "name": "archive_download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to download the artifact archive."
                },
                {
                    "name": "expired",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the artifact has expired."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the artifact was created, in ISO 8601 format."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the artifact expires, in ISO 8601 format."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the artifact was last updated, in ISO 8601 format."
                },
                {
                    "name": "digest",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA-256 digest of the artifact."
                },
                {
                    "name": "workflow_run",
                    "is_array": false,
                    "type": "object",
                    "description": "Details about the associated workflow run."
                }
            ],
            "description": "Retrieves a specific artifact by its ID."
        },
        {
            "name": "Delete an artifact",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Owner of the repository (case-insensitive)."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without the .git extension (case-insensitive)."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the artifact."
                }
            ],
            "output_parameters": [],
            "description": "Deletes an artifact by its ID."
        },
        {
            "name": "Download an artifact",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Owner of the repository (case-insensitive)."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without the .git extension (case-insensitive)."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the artifact."
                },
                {
                    "name": "archive_format",
                    "required": true,
                    "type": "string",
                    "description": "Format of the archive to download, typically 'zip'."
                }
            ],
            "output_parameters": [],
            "description": "Provides a redirect URL to download the artifact archive, valid for 1 minute."
        },
        {
            "name": "List workflow run artifacts",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Owner of the repository (case-insensitive)."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without the .git extension (case-insensitive)."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the workflow run."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default is 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of results to fetch. Default is 1."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Filter artifacts by name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of artifacts."
                },
                {
                    "name": "artifacts",
                    "is_array": true,
                    "type": "object",
                    "description": "List of artifacts related to the workflow run."
                }
            ],
            "description": "Lists artifacts for a specific workflow run."
        },
        {
            "name": "List organization variables",
            "url": "https://api.github.com/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json' (recommended)."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. Not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page. Max 30. Default: 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of results. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of variables with their details."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the variable."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Value of the variable."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the variable: 'all', 'private', or 'selected'."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to access selected repositories."
                }
            ],
            "description": "Lists all organization variables."
        },
        {
            "name": "Create an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json' (recommended)."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name. Not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the variable."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "Value of the variable."
                },
                {
                    "name": "visibility",
                    "required": true,
                    "type": "string",
                    "description": "Visibility: 'all', 'private', or 'selected'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "Array of repository IDs that can access the variable (only if visibility is 'selected')."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 201 for creation."
                }
            ],
            "description": "Creates an organization variable that you can reference in workflows."
        },
        {
            "name": "Get an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json' (recommended)."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name. Not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when created."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when last updated."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility setting."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to access associated repositories."
                }
            ],
            "description": "Get details of a specific organization variable."
        },
        {
            "name": "Update an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json' (recommended)."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name. Not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "new_name",
                    "required": false,
                    "type": "string",
                    "description": "New name for the variable."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "New value for the variable."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility: 'all', 'private', or 'selected'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "Array of repository IDs (if 'selected' visibility)."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204 for success."
                }
            ],
            "description": "Update a specific organization variable."
        },
        {
            "name": "Delete an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json' (recommended)."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name. Not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name to delete."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204 for success."
                }
            ],
            "description": "Deletes an organization variable."
        },
        {
            "name": "List selected repositories for an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number for pagination. Default: 1."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Max 100. Default: 30."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "full_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Full repository name."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "Repository owner details."
                },
                {
                    "name": "login",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner login."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Owner ID."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner URL."
                },
                {
                    "name": "private",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Private repository flag."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository URL."
                }
            ],
            "description": "List repositories accessible to a specific organization variable."
        },
        {
            "name": "Set selected repositories for an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "selected_repository_ids",
                    "required": true,
                    "type": "integer",
                    "description": "Array of repository IDs to set for the variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Replace all repositories associated with an organization variable."
        },
        {
            "name": "Add selected repository to an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Add a repository to an organization variable."
        },
        {
            "name": "Remove selected repository from an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Remove a repository from an organization variable."
        },
        {
            "name": "List repository variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Max 30. Default: 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repository variables."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last update timestamp."
                }
            ],
            "description": "List all variables in a repository."
        },
        {
            "name": "Create a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "Variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 201 for created."
                }
            ],
            "description": "Create a new repository variable."
        },
        {
            "name": "Get a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Created timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last updated timestamp."
                }
            ],
            "description": "Retrieve details of a specific repository variable."
        },
        {
            "name": "Update a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "new_name",
                    "required": false,
                    "type": "string",
                    "description": "New variable name."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "New value for variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Update a specific repository variable."
        },
        {
            "name": "Delete a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name to delete."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Delete a specific repository variable."
        },
        {
            "name": "List environment variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name, URL-encoded."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Max 30. Default: 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total environment variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of environment variables."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last update timestamp."
                }
            ],
            "description": "Lists all environment variables for an environment."
        },
        {
            "name": "Create an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name, URL-encoded."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "Variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 201 for created."
                }
            ],
            "description": "Creates an environment variable."
        },
        {
            "name": "Get an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name, URL-encoded."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last update timestamp."
                }
            ],
            "description": "Get details of a specific environment variable."
        },
        {
            "name": "Update an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name, URL-encoded."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "New value for variable."
                },
                {
                    "name": "new_name",
                    "required": false,
                    "type": "string",
                    "description": "New variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Update a specific environment variable."
        },
        {
            "name": "Delete an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'application/vnd.github+json'."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name, URL-encoded."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Response status: 204."
                }
            ],
            "description": "Deletes a specific environment variable."
        },
        {
            "name": "List organization secrets",
            "url": "https://api.github.com/orgs/{org}/actions/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default is 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default is 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of secrets in the organization."
                },
                {
                    "name": "secrets",
                    "is_array": true,
                    "type": "object",
                    "description": "List of secrets with their metadata."
                }
            ],
            "description": "Lists all secrets available in an organization without revealing their encrypted values."
        },
        {
            "name": "Get an organization public key",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "key_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the public key."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key used for encrypting secrets."
                }
            ],
            "description": "Gets your public key, which you need to encrypt secrets."
        },
        {
            "name": "Get an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "When the secret was created, in ISO 8601 format."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "When the secret was last updated, in ISO 8601 format."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the secret. Possible values: 'all', 'private', 'selected'."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL to list repositories that have access to the secret (if visibility is 'selected')."
                }
            ],
            "description": "Gets a single organization secret without revealing its encrypted value."
        },
        {
            "name": "Create or update an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "encrypted_value",
                    "required": true,
                    "type": "string",
                    "description": "Encrypted secret value using LibSodium."
                },
                {
                    "name": "key_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the key used to encrypt the secret."
                },
                {
                    "name": "visibility",
                    "required": true,
                    "type": "string",
                    "description": "Visibility of the secret. Possible values: 'all', 'private', 'selected'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "object",
                    "description": "Array of repository IDs that have access to the secret. Required if visibility is 'selected'."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response status code (201 for created, 204 for updated)."
                }
            ],
            "description": "Creates or updates an organization secret with an encrypted value."
        },
        {
            "name": "Delete an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response status code (204 for success)."
                }
            ],
            "description": "Deletes a secret in an organization using the secret name."
        },
        {
            "name": "List selected repositories for an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The secret name."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default is 1."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default is 30."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with their metadata."
                }
            ],
            "description": "Lists all repositories that have been selected when the 'visibility' for repository access to a secret is set to 'selected'."
        },
        {
            "name": "Set selected repositories for an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The secret name."
                },
                {
                    "name": "selected_repository_ids",
                    "required": true,
                    "type": "object",
                    "description": "Array of repository IDs that can access the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response status code (204 for success)."
                }
            ],
            "description": "Replaces all repositories for an organization secret when the 'visibility' is set to 'selected'."
        },
        {
            "name": "Add selected repository to an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The secret name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to add to the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response: 204 if added successfully, 409 if conflict."
                }
            ],
            "description": "Adds a repository to an organization secret."
        },
        {
            "name": "Remove selected repository from an organization secret",
            "url": "https://api.github.com/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The organization name is case-insensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The secret name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to remove from the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response: 204 if removed successfully, 409 if conflict."
                }
            ],
            "description": "Removes a repository from an organization secret."
        },
        {
            "name": "List self-hosted runner groups for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/self-hosted-runner-groups",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default is 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default is 1."
                },
                {
                    "name": "visible_to_repository",
                    "required": false,
                    "type": "string",
                    "description": "Only return runner groups that are allowed to be used by this repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unique identifier of the runner group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the runner group. Possible values: 'all', 'selected', 'private'."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if this is the default runner group."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for the list of runners in this group."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the group is inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group can be used by public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "If true, the group is restricted to specific workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows the group is restricted to."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if workflow restrictions are read-only."
                }
            ],
            "description": "Lists all self-hosted runner groups configured in an organization."
        },
        {
            "name": "Create a self-hosted runner group for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/self-hosted-runner-groups",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility of the runner group. Possible values: 'selected', 'all', 'private'. Default is 'all'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "List of repository IDs that can access the runner group."
                },
                {
                    "name": "runners",
                    "required": false,
                    "type": "integer",
                    "description": "List of runner IDs to add to this group."
                },
                {
                    "name": "allows_public_repositories",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether the group can be used by public repositories. Default is false."
                },
                {
                    "name": "restricted_to_workflows",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, restricts the group to specified workflows."
                },
                {
                    "name": "selected_workflows",
                    "required": false,
                    "type": "string",
                    "description": "List of workflows the group is restricted to; ignored unless restricted_to_workflows is true."
                },
                {
                    "name": "network_configuration_id",
                    "required": false,
                    "type": "string",
                    "description": "Identifier of a network configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the created runner group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if this group is default."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for repositories with access."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for runners in this group."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for hosted runners."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions are read-only."
                }
            ],
            "description": "Creates a new self-hosted runner group for an organization."
        },
        {
            "name": "Get a self-hosted runner group for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the group is default."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for repository access."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for runners."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for hosted runners."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Inherited status."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions read-only."
                }
            ],
            "description": "Gets details of a specific self-hosted runner group."
        },
        {
            "name": "Update a self-hosted runner group for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "New name of the runner group."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "allows_public_repositories",
                    "required": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "required": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "required": false,
                    "type": "string",
                    "description": "Workflows list."
                },
                {
                    "name": "network_configuration_id",
                    "required": false,
                    "type": "string",
                    "description": "Network configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility status."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Default status."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository access URL."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Runners URL."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Hosted runners URL."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Inherited status."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "Workflows list."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions read-only."
                }
            ],
            "description": "Updates a self-hosted runner group for an organization."
        },
        {
            "name": "Delete a self-hosted runner group from an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a self-hosted runner group from an organization."
        },
        {
            "name": "List GitHub-hosted runners for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page, max 100. Default 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default is 1."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of runners."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of runner objects."
                }
            ],
            "description": "Lists all GitHub-hosted runners in an organization."
        },
        {
            "name": "Get a GitHub-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner's group."
                },
                {
                    "name": "platform",
                    "is_array": false,
                    "type": "string",
                    "description": "Platform of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "last_active_on",
                    "is_array": false,
                    "type": "string",
                    "description": "Last active timestamp."
                },
                {
                    "name": "public_ip_enabled",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether public IP is enabled."
                },
                {
                    "name": "public_ips",
                    "is_array": true,
                    "type": "object",
                    "description": "List of public IPs."
                }
            ],
            "description": "Gets a specific GitHub-hosted runner for an organization."
        },
        {
            "name": "Update a GitHub-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the group to move the runner to."
                },
                {
                    "name": "maximum_runners",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of runners to scale up to."
                },
                {
                    "name": "enable_static_ip",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to enable static IP for this runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner's group."
                },
                {
                    "name": "platform",
                    "is_array": false,
                    "type": "string",
                    "description": "Platform of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "last_active_on",
                    "is_array": false,
                    "type": "string",
                    "description": "Last active timestamp."
                },
                {
                    "name": "public_ip_enabled",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether public IP is enabled."
                },
                {
                    "name": "public_ips",
                    "is_array": true,
                    "type": "object",
                    "description": "List of public IPs."
                }
            ],
            "description": "Updates a GitHub-hosted runner in an organization."
        },
        {
            "name": "Delete a GitHub-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a GitHub-hosted runner from an organization."
        },
        {
            "name": "Get GitHub Actions permissions for an organization",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. It is recommended to set this header for proper response formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization. The organization name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "enabled_repositories",
                    "is_array": false,
                    "type": "string",
                    "description": "The policy for repositories in the organization. Possible values: `all`, `none`, or `selected`."
                },
                {
                    "name": "allowed_actions",
                    "is_array": false,
                    "type": "string",
                    "description": "The policy for allowed actions and reusable workflows. Possible values: `all`, `local_only`, or `selected`."
                },
                {
                    "name": "selected_actions_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to retrieve selected actions and workflows when `allowed_actions` is set to `selected`."
                }
            ],
            "description": "Retrieves the GitHub Actions permissions policy for repositories and allowed actions and workflows in an organization."
        },
        {
            "name": "Set GitHub Actions permissions for an organization",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. It is recommended to set this header for proper response formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization. The organization name is not case sensitive."
                },
                {
                    "name": "enabled_repositories",
                    "required": true,
                    "type": "string",
                    "description": "The policy for repositories that are allowed to run GitHub Actions. Possible values: `all`, `none`, or `selected`."
                },
                {
                    "name": "allowed_actions",
                    "required": true,
                    "type": "string",
                    "description": "The policy for actions and reusable workflows allowed to run. Possible values: `all`, `local_only`, or `selected`."
                }
            ],
            "output_parameters": [],
            "description": "Sets the GitHub Actions permissions policy for repositories, actions, and workflows in an organization."
        },
        {
            "name": "List selected repositories enabled for GitHub Actions in an organization",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. It is recommended to set this header for proper response formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. Not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100). Defaults to 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results. Defaults to 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of repository objects with details like id, name, full_name, owner, description, html_url, etc."
                }
            ],
            "description": "Lists repositories that are enabled for GitHub Actions within an organization."
        },
        {
            "name": "Set selected repositories enabled for GitHub Actions in an organization",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. It is recommended to set this header."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. Not case sensitive."
                },
                {
                    "name": "selected_repository_ids",
                    "required": true,
                    "type": "object",
                    "description": "Array of repository IDs to enable for GitHub Actions."
                }
            ],
            "output_parameters": [],
            "description": "Replaces the list of repositories enabled for GitHub Actions in an organization."
        },
        {
            "name": "Enable a selected repository for GitHub Actions in an organization",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended for proper formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The repository ID."
                }
            ],
            "output_parameters": [],
            "description": "Enables a specific repository for GitHub Actions within an organization."
        },
        {
            "name": "Disable a selected repository for GitHub Actions in an organization",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended for proper formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The repository ID."
                }
            ],
            "output_parameters": [],
            "description": "Disables a specific repository for GitHub Actions within an organization."
        },
        {
            "name": "Get allowed actions and reusable workflows for an organization",
            "url": "/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended for proper formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "github_owned_allowed",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether actions owned by GitHub are allowed."
                },
                {
                    "name": "verified_allowed",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether verified actions are allowed."
                },
                {
                    "name": "patterns_allowed",
                    "is_array": true,
                    "type": "string",
                    "description": "List of string patterns matching allowed actions."
                }
            ],
            "description": "Retrieves the list of allowed actions and reusable workflows in an organization."
        },
        {
            "name": "Set allowed actions and reusable workflows for an organization",
            "url": "/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended for proper formatting."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                },
                {
                    "name": "github_owned_allowed",
                    "required": true,
                    "type": "boolean",
                    "description": "Allow GitHub owned actions."
                },
                {
                    "name": "verified_allowed",
                    "required": true,
                    "type": "boolean",
                    "description": "Allow verified actions from GitHub Marketplace."
                },
                {
                    "name": "patterns_allowed",
                    "required": false,
                    "type": "object",
                    "description": "List of string patterns for allowed actions."
                }
            ],
            "output_parameters": [],
            "description": "Configures which actions and reusable workflows are permitted in an organization."
        },
        {
            "name": "Get default workflow permissions for an organization",
            "url": "/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "default_workflow_permissions",
                    "is_array": false,
                    "type": "string",
                    "description": "Default permissions for workflows. Possible values: `read`, `write`."
                },
                {
                    "name": "can_approve_pull_request_reviews",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if pull request reviews can be approved automatically."
                }
            ],
            "description": "Retrieves the default workflow permissions and approval capabilities for an organization."
        },
        {
            "name": "Set default workflow permissions for an organization",
            "url": "/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name, case insensitive."
                },
                {
                    "name": "default_workflow_permissions",
                    "required": true,
                    "type": "string",
                    "description": "Default permissions for workflows. Possible values: `read`, `write`."
                },
                {
                    "name": "can_approve_pull_request_reviews",
                    "required": false,
                    "type": "boolean",
                    "description": "Allow GitHub Actions to approve pull requests."
                }
            ],
            "output_parameters": [],
            "description": "Configures the default permissions and approval capabilities for workflows in an organization."
        },
        {
            "name": "Get GitHub Actions permissions for a repository",
            "url": "/repos/{owner}/{repo}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name, without `.git`, case insensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "enabled",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether GitHub Actions is enabled for the repository."
                },
                {
                    "name": "allowed_actions",
                    "is_array": false,
                    "type": "string",
                    "description": "Policy for actions and workflows. Values: `all`, `local_only`, or `selected`."
                },
                {
                    "name": "selected_actions_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to retrieve selected actions if policy is `selected`."
                }
            ],
            "description": "Retrieves the permissions policy for GitHub Actions in a repository."
        },
        {
            "name": "Set GitHub Actions permissions for a repository",
            "url": "/repos/{owner}/{repo}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Set to `application/vnd.github+json`. Recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name, without `.git`, case insensitive."
                },
                {
                    "name": "enabled",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether to enable GitHub Actions on the repository."
                },
                {
                    "name": "allowed_actions",
                    "required": true,
                    "type": "string",
                    "description": "Policy for actions and workflows. Values: `all`, `local_only`, or `selected`."
                }
            ],
            "output_parameters": [],
            "description": "Configures the permissions policy for GitHub Actions in a repository."
        },
        {
            "name": "Get the customization template for an OIDC subject claim for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "include_claim_keys",
                    "is_array": true,
                    "type": "string",
                    "description": "Array of claim keys included in the customization template. Possible claim keys are strings like 'repo', 'context', etc."
                }
            ],
            "description": "Retrieves the current customization template for an OpenID Connect (OIDC) subject claim for the specified organization."
        },
        {
            "name": "Set the customization template for an OIDC subject claim for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "include_claim_keys",
                    "required": true,
                    "type": "string",
                    "description": "Array of claim keys to include in the customization template. Each claim key must be a string of alphanumeric characters and underscores, e.g., ['repo', 'context']."
                }
            ],
            "output_parameters": [],
            "description": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim for the specified organization. The 'use_default' flag is not included in this endpoint."
        },
        {
            "name": "Get the customization template for an OIDC subject claim for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "use_default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether the default template is used. If true, 'include_claim_keys' is ignored."
                },
                {
                    "name": "include_claim_keys",
                    "is_array": true,
                    "type": "string",
                    "description": "Array of claim keys included in the template. Possible claim keys are strings like 'repo', 'context', etc."
                }
            ],
            "description": "Retrieves the current customization template for an OpenID Connect (OIDC) subject claim for the specified repository."
        },
        {
            "name": "Set the customization template for an OIDC subject claim for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository. The name is not case sensitive."
                },
                {
                    "name": "use_default",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether to use the default template. If true, 'include_claim_keys' is ignored."
                },
                {
                    "name": "include_claim_keys",
                    "required": false,
                    "type": "string",
                    "description": "Array of claim keys to include in the template. Must be provided if 'use_default' is false. Claim keys should be strings of alphanumeric characters and underscores, e.g., ['repo', 'context']."
                }
            ],
            "output_parameters": [],
            "description": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim for the specified repository. If 'use_default' is true, the 'include_claim_keys' parameter is ignored."
        },
        {
            "name": "List self-hosted runners for an organization",
            "url": "/orgs/{org}/actions/runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The name of a self-hosted runner."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of results to fetch. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of runners returned."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "The list of runners."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unique identifier of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "The operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "The current status of the runner. Possible values: 'online', 'offline'."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is busy."
                },
                {
                    "name": "ephemeral",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is ephemeral."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels assigned to the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Type of label: 'read-only' or 'custom'."
                }
            ],
            "description": "Lists all self-hosted runners configured in an organization."
        },
        {
            "name": "List runner applications for an organization",
            "url": "/orgs/{org}/actions/runners/downloads",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "The operating system."
                },
                {
                    "name": "architecture",
                    "is_array": false,
                    "type": "string",
                    "description": "The architecture of the runner application."
                },
                {
                    "name": "download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Download URL for the runner application."
                },
                {
                    "name": "filename",
                    "is_array": false,
                    "type": "string",
                    "description": "Filename of the download."
                }
            ],
            "description": "Lists binaries for the runner application that you can download and run."
        },
        {
            "name": "Create configuration for a just-in-time runner for an organization",
            "url": "/orgs/{org}/actions/runners/generate-jitconfig",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the generated runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is busy."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels for the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                },
                {
                    "name": "encoded_jit_config",
                    "is_array": false,
                    "type": "string",
                    "description": "Encoded JIT configuration."
                }
            ],
            "description": "Generates a configuration that can be passed to the runner application at startup."
        },
        {
            "name": "Create a registration token for an organization",
            "url": "/orgs/{org}/actions/runners/registration-token",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "token",
                    "is_array": false,
                    "type": "string",
                    "description": "The registration token."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the token expires."
                }
            ],
            "description": "Returns a token that you can pass to the `config` script to register a self-hosted runner."
        },
        {
            "name": "Create a remove token for an organization",
            "url": "/orgs/{org}/actions/runners/remove-token",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "token",
                    "is_array": false,
                    "type": "string",
                    "description": "The remove token."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the token expires."
                }
            ],
            "description": "Returns a token that you can pass to the `config` script to remove a self-hosted runner."
        },
        {
            "name": "Get a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is busy."
                },
                {
                    "name": "ephemeral",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is ephemeral."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels assigned to the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Gets a specific self-hosted runner configured in an organization."
        },
        {
            "name": "Delete a self-hosted runner from an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                }
            ],
            "output_parameters": [],
            "description": "Forces the removal of a self-hosted runner from an organization."
        },
        {
            "name": "List labels for a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels assigned to the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Lists all labels for a self-hosted runner in an organization."
        },
        {
            "name": "Add custom labels to a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Labels to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Updated list of labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Adds custom labels to a self-hosted runner in an organization."
        },
        {
            "name": "Set custom labels for a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Labels to set. Pass an empty array to remove all labels."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Updated list of labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes all previous custom labels and sets new labels for a self-hosted runner in an organization."
        },
        {
            "name": "Remove all custom labels from a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels after removal."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes all custom labels from a self-hosted runner in an organization."
        },
        {
            "name": "Remove a custom label from a self-hosted runner for an organization",
            "url": "/orgs/{org}/actions/runners/{runner_id}/labels/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the self-hosted runner."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the custom label to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Remaining labels after removal."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes a custom label from a self-hosted runner in an organization."
        },
        {
            "name": "List self-hosted runners for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name without `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The name of a self-hosted runner."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of results to fetch. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of runners."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of runners."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Identifier of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Current status: 'online', 'offline'."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is busy."
                },
                {
                    "name": "ephemeral",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is ephemeral."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels assigned to the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Lists all self-hosted runners in a repository."
        },
        {
            "name": "List runner applications for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/downloads",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system."
                },
                {
                    "name": "architecture",
                    "is_array": false,
                    "type": "string",
                    "description": "System architecture."
                },
                {
                    "name": "download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Download URL."
                },
                {
                    "name": "filename",
                    "is_array": false,
                    "type": "string",
                    "description": "Filename."
                }
            ],
            "description": "Lists binaries for the runner application that you can download and run."
        },
        {
            "name": "Get a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "If the runner is busy."
                },
                {
                    "name": "ephemeral",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is ephemeral."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels assigned to the runner."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Gets a specific self-hosted runner configured in a repository."
        },
        {
            "name": "Delete a self-hosted runner from a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                }
            ],
            "output_parameters": [],
            "description": "Removes a self-hosted runner from a repository."
        },
        {
            "name": "List labels for a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Lists labels for a self-hosted runner in a repository."
        },
        {
            "name": "Add custom labels to a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Labels to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Updated labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Adds custom labels to a self-hosted runner in a repository."
        },
        {
            "name": "Set custom labels for a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Labels to set. Pass an empty array to remove all labels."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Updated labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes all custom labels from a self-hosted runner in a repository."
        },
        {
            "name": "Remove all custom labels from a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Remaining labels."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes all custom labels from a self-hosted runner in a repository."
        },
        {
            "name": "Remove a custom label from a self-hosted runner for a repository",
            "url": "/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the label to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Remaining labels after removal."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Label ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Label name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Label type."
                }
            ],
            "description": "Removes a custom label from a self-hosted runner in a repository."
        },
        {
            "name": "Get a job for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/jobs/{job_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "The ID of the job."
                },
                {
                    "name": "run_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                },
                {
                    "name": "run_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL of the workflow run."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID of the job."
                },
                {
                    "name": "head_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of the head commit."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL for the job."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "HTML URL of the job."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "The current status of the job. Possible values: `queued`, `in_progress`, `completed`."
                },
                {
                    "name": "conclusion",
                    "is_array": false,
                    "type": "string",
                    "description": "The conclusion of the job. Possible values: `success`, `failure`, `cancelled`, `timed_out`, `neutral`, `skipped`, `action_required`."
                },
                {
                    "name": "started_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Time when the job started. Format: ISO 8601."
                },
                {
                    "name": "completed_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Time when the job completed. Format: ISO 8601."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the job."
                },
                {
                    "name": "steps",
                    "is_array": true,
                    "type": "object",
                    "description": "List of steps executed in the job."
                },
                {
                    "name": "check_run_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL of the associated check run."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "string",
                    "description": "Labels associated with the job."
                },
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Runner ID."
                },
                {
                    "name": "runner_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Runner name."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Runner group ID."
                },
                {
                    "name": "runner_group_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Runner group name."
                },
                {
                    "name": "workflow_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the workflow."
                },
                {
                    "name": "head_branch",
                    "is_array": false,
                    "type": "string",
                    "description": "Branch name of the head commit."
                }
            ],
            "description": "Retrieves a specific job in a workflow run."
        },
        {
            "name": "Download job logs for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                }
            ],
            "output_parameters": [],
            "description": "Gets a redirect URL to download a plain text file of logs for a workflow job."
        },
        {
            "name": "List jobs for a workflow run attempt",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "attempt_number",
                    "required": true,
                    "type": "integer",
                    "description": "The attempt number of the workflow run."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page. Max 100. Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results. Default: 1."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of jobs."
                },
                {
                    "name": "jobs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of job objects similar to above."
                }
            ],
            "description": "Lists jobs for a specific workflow run attempt. You can use parameters to narrow the list of results."
        },
        {
            "name": "List jobs for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "filter",
                    "required": false,
                    "type": "string",
                    "description": "Filters jobs by `completed_at` timestamp. Possible values: `latest`, `all`. Default: `latest`."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page. Max 100. Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results. Default: 1."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of jobs."
                },
                {
                    "name": "jobs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of job objects similar to above."
                }
            ],
            "description": "Lists jobs for a workflow run. You can use parameters to narrow results."
        },
        {
            "name": "Re-run a job from a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                },
                {
                    "name": "enable_debug_logging",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to enable debug logging for the re-run. Default: false."
                }
            ],
            "output_parameters": [],
            "description": "Re-run a job and its dependent jobs in a workflow run."
        },
        {
            "name": "List workflow runs for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Returns someone\u2019s workflow runs. Use the login for the user who created the push associated with the check suite or workflow run."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs associated with a branch. Use the name of the branch of the push."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow run triggered by the event you specify. For example, push, pull_request, or issue."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs with the check run status or conclusion that you specify. Possible values: completed, action_required, cancelled, failure, neutral, skipped, stale, success, timed_out, in_progress, queued, requested, waiting, pending."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs created within the given date-time range."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, pull requests are omitted from the response. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Returns workflow runs with the check_suite_id that you specify."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Only returns workflow runs associated with the specified head_sha."
                }
            ],
            "output_parameters": [],
            "description": "Lists all workflow runs for a repository."
        },
        {
            "name": "Get a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, pull requests are omitted from the response. Default: false."
                }
            ],
            "output_parameters": [],
            "description": "Gets a specific workflow run."
        },
        {
            "name": "Delete a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a specific workflow run."
        },
        {
            "name": "Get the review history for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/approvals",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                }
            ],
            "output_parameters": [
                {
                    "name": "approvals",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of approval objects."
                }
            ],
            "description": "Gets a specific workflow run attempt's review history."
        },
        {
            "name": "Approve a workflow run for a fork pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/approve",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                }
            ],
            "output_parameters": [],
            "description": "Approves a workflow run for a pull request from a public fork of a first-time contributor."
        },
        {
            "name": "Get a workflow run attempt",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "attempt_number",
                    "required": true,
                    "type": "integer",
                    "description": "The attempt number of the workflow run."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, pull requests are omitted from the response. Default: false."
                }
            ],
            "output_parameters": [],
            "description": "Gets a specific workflow run attempt."
        },
        {
            "name": "Download workflow run attempt logs",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "attempt_number",
                    "required": true,
                    "type": "integer",
                    "description": "The attempt number of the workflow run."
                }
            ],
            "output_parameters": [],
            "description": "Gets a redirect URL to download an archive of logs for a specific workflow run attempt."
        },
        {
            "name": "Cancel a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/cancel",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                }
            ],
            "output_parameters": [],
            "description": "Cancels a workflow run by its id."
        },
        {
            "name": "Review custom deployment protection rules for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the environment."
                },
                {
                    "name": "state",
                    "required": true,
                    "type": "string",
                    "description": "Approval state: 'approved' or 'rejected'."
                },
                {
                    "name": "comment",
                    "required": true,
                    "type": "string",
                    "description": "A comment to accompany the review."
                }
            ],
            "output_parameters": [],
            "description": "Approve or reject custom deployment protection rules."
        },
        {
            "name": "Force cancel a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository, case insensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository, case insensitive."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the workflow run."
                }
            ],
            "output_parameters": [],
            "description": "Force cancels a workflow run and bypasses conditions."
        },
        {
            "name": "List workflow runs for a workflow",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "workflow_id",
                    "required": true,
                    "type": "string",
                    "description": "The ID of the workflow. You can also pass the workflow file name as a string."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Returns someone\u2019s workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"Events that trigger workflows.\" Possible values are: `push`, `pull_request`, `issue`, etc."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Possible values are: `completed`, `action_required`, `cancelled`, `failure`, `neutral`, `skipped`, `stale`, `success`, `timed_out`, `in_progress`, `queued`, `requested`, `waiting`, `pending`."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs created within the given date-time range. Use ISO 8601 format. See [Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, pull requests are omitted from the response. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Returns workflow runs with the specified check_suite_id."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Only returns workflow runs associated with the specified head_sha."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of workflow runs."
                },
                {
                    "name": "workflow_runs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of workflow run objects."
                }
            ],
            "description": "Retrieves a list of workflow runs for a specific workflow in a repository."
        },
        {
            "name": "List workflow runs for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Returns someone\u2019s workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"Events that trigger workflows.\" Possible values are: `push`, `pull_request`, `issue`, etc."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs with the check run `status` or `conclusion` that you specify. For example, a conclusion can be `success` or a status can be `in_progress`. Possible values are: `completed`, `action_required`, `cancelled`, `failure`, `neutral`, `skipped`, `stale`, `success`, `timed_out`, `in_progress`, `queued`, `requested`, `waiting`, `pending`."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs created within the given date-time range. Use ISO 8601 format. See [Understanding the search syntax](https://docs.github.com/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax#query-for-dates)."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, pull requests are omitted from the response. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Returns workflow runs with the specified check_suite_id."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Only returns workflow runs associated with the specified head_sha."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of workflow runs."
                },
                {
                    "name": "workflow_runs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of workflow run objects."
                }
            ],
            "description": "Retrieves a list of workflow runs for a repository."
        },
        {
            "name": "Get repositories accessible to the app installation",
            "url": "/installation/repositories",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories accessible to the app installation."
                }
            ],
            "description": "Retrieves repositories accessible to the current app installation."
        },
        {
            "name": "Revoke an installation access token",
            "url": "/installation/token",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Revokes the installation access token, invalidating further API requests using this token."
        },
        {
            "name": "Get billing usage report for an organization",
            "url": "/organizations/{org}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "billing_usage",
                    "is_array": false,
                    "type": "object",
                    "description": "Billing usage report details."
                }
            ],
            "description": "Retrieves billing usage report for the specified organization."
        },
        {
            "name": "Get GitHub Actions billing for an organization",
            "url": "/orgs/{org}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "actions_billing",
                    "is_array": false,
                    "type": "object",
                    "description": "GitHub Actions billing details for the organization."
                }
            ],
            "description": "Retrieves GitHub Actions billing information for the specified organization."
        },
        {
            "name": "Get GitHub Packages billing for an organization",
            "url": "/orgs/{org}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "packages_billing",
                    "is_array": false,
                    "type": "object",
                    "description": "GitHub Packages billing details for the organization."
                }
            ],
            "description": "Retrieves GitHub Packages billing information for the specified organization."
        },
        {
            "name": "Get shared storage billing for an organization",
            "url": "/orgs/{org}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "shared_storage_billing",
                    "is_array": false,
                    "type": "object",
                    "description": "Shared storage billing details for the organization."
                }
            ],
            "description": "Retrieves shared storage billing information for the specified organization."
        },
        {
            "name": "List branches in a repository",
            "url": "/repos/{owner}/{repo}/branches",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "branches",
                    "is_array": true,
                    "type": "object",
                    "description": "List of branches in the repository."
                }
            ],
            "description": "Lists all branches in the specified repository."
        },
        {
            "name": "Get a specific branch in a repository",
            "url": "/repos/{owner}/{repo}/branches/{branch}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "branch",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified branch."
                }
            ],
            "description": "Retrieves details of a specific branch in the repository."
        },
        {
            "name": "Get branch protection settings",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Branch protection settings."
                }
            ],
            "description": "Retrieves the protection settings of a specific branch."
        },
        {
            "name": "Update branch protection settings",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "protection_settings",
                    "required": true,
                    "type": "object",
                    "description": "Protection settings to apply, such as required status checks, restrictions, etc."
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated branch protection settings."
                }
            ],
            "description": "Updates the protection settings of a specific branch."
        },
        {
            "name": "Delete branch protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes protection from a specific branch."
        },
        {
            "name": "Get admin branch protection settings",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "enforce_admins",
                    "is_array": false,
                    "type": "object",
                    "description": "Admin enforcement settings."
                }
            ],
            "description": "Retrieves admin enforcement settings of a branch."
        },
        {
            "name": "Set admin enforcement on a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "enforce_admins",
                    "required": true,
                    "type": "object",
                    "description": "Enforcement settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "enforce_admins",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated admin enforcement settings."
                }
            ],
            "description": "Enables enforcement of admin restrictions on a branch."
        },
        {
            "name": "Delete admin enforcement on a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Disables admin enforcement on a branch."
        },
        {
            "name": "Get pull request review protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "pull_request_reviews",
                    "is_array": false,
                    "type": "object",
                    "description": "Pull request review protection settings."
                }
            ],
            "description": "Retrieves the pull request review protection settings for a branch."
        },
        {
            "name": "Update pull request review protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "review_settings",
                    "required": true,
                    "type": "object",
                    "description": "Settings for pull request reviews."
                }
            ],
            "output_parameters": [
                {
                    "name": "pull_request_reviews",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated pull request review protection settings."
                }
            ],
            "description": "Updates the pull request review protection settings for a branch."
        },
        {
            "name": "Delete pull request review protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes pull request review protection from a branch."
        },
        {
            "name": "Get commit signature protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "signatures",
                    "is_array": false,
                    "type": "object",
                    "description": "Signature protection settings."
                }
            ],
            "description": "Retrieves commit signature protection settings for a branch."
        },
        {
            "name": "Create commit signature protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "signatures",
                    "required": true,
                    "type": "object",
                    "description": "Signature protection settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "signatures",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated signature protection settings."
                }
            ],
            "description": "Enables commit signature protection on a branch."
        },
        {
            "name": "Delete commit signature protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Disables commit signature protection on a branch."
        },
        {
            "name": "Get status check protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_checks",
                    "is_array": false,
                    "type": "object",
                    "description": "Status check protection settings."
                }
            ],
            "description": "Retrieves status check protection settings for a branch."
        },
        {
            "name": "Update status check protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "status_checks",
                    "required": true,
                    "type": "object",
                    "description": "Status checks settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_checks",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated status check protection settings."
                }
            ],
            "description": "Updates status check protection settings for a branch."
        },
        {
            "name": "Remove status check protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes status check protection from a branch."
        },
        {
            "name": "Get all status check contexts",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "List of required status check contexts."
                }
            ],
            "description": "Lists all status check contexts that are required for the branch."
        },
        {
            "name": "Add status check contexts",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "contexts",
                    "required": true,
                    "type": "object",
                    "description": "List of contexts to require."
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of required status check contexts."
                }
            ],
            "description": "Adds status check contexts to a branch protection."
        },
        {
            "name": "Set status check contexts",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "contexts",
                    "required": true,
                    "type": "object",
                    "description": "List of contexts to set."
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of required contexts."
                }
            ],
            "description": "Sets the list of required status check contexts for a branch."
        },
        {
            "name": "Remove all status check contexts",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "Remaining required status check contexts."
                }
            ],
            "description": "Removes all required status check contexts from a branch protection."
        },
        {
            "name": "Get access restrictions of a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Access restriction settings."
                }
            ],
            "description": "Gets access restrictions for a branch."
        },
        {
            "name": "Remove access restrictions from a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes access restrictions from a branch."
        },
        {
            "name": "Get apps with access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "apps",
                    "is_array": true,
                    "type": "string",
                    "description": "List of apps with access."
                }
            ],
            "description": "Lists apps with access to a branch."
        },
        {
            "name": "Add app access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "apps",
                    "required": true,
                    "type": "object",
                    "description": "Apps to grant access."
                }
            ],
            "output_parameters": [
                {
                    "name": "apps",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of apps with access."
                }
            ],
            "description": "Adds app access restrictions to a branch."
        },
        {
            "name": "Remove app access restrictions from a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes app access restrictions from a branch."
        },
        {
            "name": "Get teams with access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "teams",
                    "is_array": true,
                    "type": "string",
                    "description": "List of teams with access."
                }
            ],
            "description": "Lists teams with access to a branch."
        },
        {
            "name": "Add team access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "teams",
                    "required": true,
                    "type": "object",
                    "description": "Teams to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "teams",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of teams with access."
                }
            ],
            "description": "Adds team access restrictions to a branch."
        },
        {
            "name": "Remove team access from a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes team access restrictions from a branch."
        },
        {
            "name": "Get users with access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "users",
                    "is_array": true,
                    "type": "string",
                    "description": "List of users with access."
                }
            ],
            "description": "Lists users with access to a branch."
        },
        {
            "name": "Add user access to a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "users",
                    "required": true,
                    "type": "object",
                    "description": "Users to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "users",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of users with access."
                }
            ],
            "description": "Adds user access restrictions to a branch."
        },
        {
            "name": "Remove user access from a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes user access restrictions from a branch."
        },
        {
            "name": "Rename a branch",
            "url": "/repos/{owner}/{repo}/branches/{branch}/rename",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Current branch name."
                },
                {
                    "name": "new_name",
                    "required": true,
                    "type": "string",
                    "description": "New branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "new_branch_name",
                    "is_array": false,
                    "type": "string",
                    "description": "The new branch name."
                }
            ],
            "description": "Renames a branch in the repository."
        },
        {
            "name": "Sync a fork branch with upstream",
            "url": "/repos/{owner}/{repo}/branches/{branch}/sync-upstream",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the sync operation."
                }
            ],
            "description": "Synchronizes a fork branch with its upstream repository."
        },
        {
            "name": "Merge two branches",
            "url": "/repos/{owner}/{repo}/merges",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "base",
                    "required": true,
                    "type": "string",
                    "description": "The branch you want to merge into."
                },
                {
                    "name": "head",
                    "required": true,
                    "type": "string",
                    "description": "The branch you want to merge from."
                }
            ],
            "output_parameters": [
                {
                    "name": "merge_commit_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of the merge commit."
                }
            ],
            "description": "Merges two branches in a repository."
        },
        {
            "name": "List campaigns for an organization",
            "url": "/orgs/{org}/campaigns",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "campaigns",
                    "is_array": true,
                    "type": "object",
                    "description": "List of campaigns."
                }
            ],
            "description": "Lists campaigns for the specified organization."
        },
        {
            "name": "Create a campaign for an organization",
            "url": "/orgs/{org}/campaigns",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "campaign_data",
                    "required": true,
                    "type": "object",
                    "description": "Details of the campaign to create."
                }
            ],
            "output_parameters": [
                {
                    "name": "campaign",
                    "is_array": false,
                    "type": "object",
                    "description": "Created campaign details."
                }
            ],
            "description": "Creates a new campaign for the specified organization."
        },
        {
            "name": "Get a specific campaign",
            "url": "/orgs/{org}/campaigns/{campaign_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "campaign_number",
                    "required": true,
                    "type": "integer",
                    "description": "Campaign identifier."
                }
            ],
            "output_parameters": [
                {
                    "name": "campaign",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified campaign."
                }
            ],
            "description": "Retrieves details of a specific campaign."
        },
        {
            "name": "Update a campaign",
            "url": "/orgs/{org}/campaigns/{campaign_number}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "campaign_number",
                    "required": true,
                    "type": "integer",
                    "description": "Campaign identifier."
                },
                {
                    "name": "campaign_update_data",
                    "required": true,
                    "type": "object",
                    "description": "Data to update the campaign."
                }
            ],
            "output_parameters": [
                {
                    "name": "campaign",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated campaign details."
                }
            ],
            "description": "Updates the specified campaign."
        },
        {
            "name": "Delete a campaign",
            "url": "/orgs/{org}/campaigns/{campaign_number}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "campaign_number",
                    "required": true,
                    "type": "integer",
                    "description": "Campaign identifier."
                }
            ],
            "output_parameters": [],
            "description": "Deletes the specified campaign."
        },
        {
            "name": "post_orgs_org_attestations_delete_request",
            "url": "https://api.github.com/orgs/{org}/attestations/delete-request",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization in which the request is to be made."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to delete a request for attestations in an organization."
        },
        {
            "name": "delete_orgs_org_attestations_digest_subject_digest",
            "url": "https://api.github.com/orgs/{org}/attestations/digest/{subject_digest}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "subject_digest",
                    "required": true,
                    "type": "string",
                    "description": "Digest of the subject for which attestations are to be deleted."
                }
            ],
            "output_parameters": [],
            "description": "Deletes attestations by subject digest in an organization."
        },
        {
            "name": "delete_orgs_org_attestations_attestation_id",
            "url": "https://api.github.com/orgs/{org}/attestations/{attestation_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "attestation_id",
                    "required": true,
                    "type": "string",
                    "description": "Identifier of the attestation to delete."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a specific attestation in an organization."
        },
        {
            "name": "get_orgs_org_attestations_subject_digest",
            "url": "https://api.github.com/orgs/{org}/attestations/{subject_digest}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "subject_digest",
                    "required": true,
                    "type": "string",
                    "description": "Digest of the subject to list attestations for."
                }
            ],
            "output_parameters": [
                {
                    "name": "attestations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of attestations for the subject."
                }
            ],
            "description": "Lists attestations for a specific subject digest in an organization."
        },
        {
            "name": "get_orgs_org_blocks",
            "url": "https://api.github.com/orgs/{org}/blocks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "blocked_users",
                    "is_array": true,
                    "type": "object",
                    "description": "List of users blocked by the organization."
                }
            ],
            "description": "Lists users blocked by an organization."
        },
        {
            "name": "get_orgs_org_blocks_username",
            "url": "https://api.github.com/orgs/{org}/blocks/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username to check if blocked."
                }
            ],
            "output_parameters": [
                {
                    "name": "blocked",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether the user is blocked."
                }
            ],
            "description": "Checks if a user is blocked by the organization."
        },
        {
            "name": "put_orgs_org_blocks_username",
            "url": "https://api.github.com/orgs/{org}/blocks/{username}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username to block."
                }
            ],
            "output_parameters": [],
            "description": "Blocks a user from an organization."
        },
        {
            "name": "delete_orgs_org_blocks_username",
            "url": "https://api.github.com/orgs/{org}/blocks/{username}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username to unblock."
                }
            ],
            "output_parameters": [],
            "description": "Unblocks a user from an organization."
        },
        {
            "name": "get_orgs_failed_invitations",
            "url": "https://api.github.com/orgs/{org}/failed_invitations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "failed_invitations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of failed invitations."
                }
            ],
            "description": "Lists failed invitations for an organization."
        },
        {
            "name": "get_orgs_hooks",
            "url": "https://api.github.com/orgs/{org}/hooks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "hooks",
                    "is_array": true,
                    "type": "object",
                    "description": "List of organization's webhooks."
                }
            ],
            "description": "Lists webhooks for an organization."
        },
        {
            "name": "post_orgs_hooks",
            "url": "https://api.github.com/orgs/{org}/hooks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_data",
                    "required": true,
                    "type": "object",
                    "description": "Payload with webhook configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "hook_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the created webhook."
                }
            ],
            "description": "Creates a webhook for an organization."
        },
        {
            "name": "get_orgs_hooks_hook_id",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook."
                }
            ],
            "output_parameters": [
                {
                    "name": "hook",
                    "is_array": false,
                    "type": "object",
                    "description": "Webhook details."
                }
            ],
            "description": "Retrieves a specific webhook of an organization."
        },
        {
            "name": "patch_orgs_hooks_hook_id",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook."
                },
                {
                    "name": "hook_data",
                    "required": true,
                    "type": "object",
                    "description": "Payload with updated webhook configuration."
                }
            ],
            "output_parameters": [],
            "description": "Updates a specific webhook of an organization."
        },
        {
            "name": "delete_orgs_hooks_hook_id",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook to delete."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a specific webhook from an organization."
        },
        {
            "name": "get_orgs_hooks_hook_id_config",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/config",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook."
                }
            ],
            "output_parameters": [
                {
                    "name": "config",
                    "is_array": false,
                    "type": "object",
                    "description": "Webhook configuration details."
                }
            ],
            "description": "Retrieves configuration for a specific webhook."
        },
        {
            "name": "patch_orgs_hooks_hook_id_config",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/config",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook."
                },
                {
                    "name": "config_data",
                    "required": true,
                    "type": "object",
                    "description": "Payload with updated webhook configuration."
                }
            ],
            "output_parameters": [],
            "description": "Updates configuration for a specific webhook."
        },
        {
            "name": "get_orgs_hooks_hook_id_deliveries",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/deliveries",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the webhook."
                }
            ],
            "output_parameters": [
                {
                    "name": "deliveries",
                    "is_array": true,
                    "type": "object",
                    "description": "List of webhook deliveries."
                }
            ],
            "description": "Lists deliveries for a webhook."
        },
        {
            "name": "get_orgs_hooks_hook_id_deliveries_delivery_id",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "Webhook ID."
                },
                {
                    "name": "delivery_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the delivery."
                }
            ],
            "output_parameters": [
                {
                    "name": "delivery",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the delivery."
                }
            ],
            "description": "Retrieves a specific delivery of a webhook."
        },
        {
            "name": "post_orgs_hooks_hook_id_deliveries_delivery_id_attempts",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "Webhook ID."
                },
                {
                    "name": "delivery_id",
                    "required": true,
                    "type": "string",
                    "description": "Delivery ID."
                }
            ],
            "output_parameters": [],
            "description": "Redelivers a webhook delivery."
        },
        {
            "name": "post_orgs_hooks_hook_id_pings",
            "url": "https://api.github.com/orgs/{org}/hooks/{hook_id}/pings",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hook_id",
                    "required": true,
                    "type": "string",
                    "description": "Hook ID."
                }
            ],
            "output_parameters": [],
            "description": "Ping a webhook."
        },
        {
            "name": "get_orgs_insights_api_route_stats_actor_type_actor_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the actor."
                }
            ],
            "output_parameters": [
                {
                    "name": "stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Route statistics."
                }
            ],
            "description": "Retrieves route stats by actor type and ID within an organization."
        },
        {
            "name": "get_orgs_insights_api_subject_stats",
            "url": "https://api.github.com/orgs/{org}/insights/api/subject-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "subject_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Subject statistics."
                }
            ],
            "description": "Retrieves subject stats within an organization."
        },
        {
            "name": "get_orgs_insights_api_summary_stats",
            "url": "https://api.github.com/orgs/{org}/insights/api/summary-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "summary_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Summary statistics."
                }
            ],
            "description": "Retrieves summary stats at organization level."
        },
        {
            "name": "get_orgs_insights_api_summary_stats_users_user_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/summary-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "User-specific summary statistics."
                }
            ],
            "description": "Gets user-specific summary statistics within an organization."
        },
        {
            "name": "get_orgs_insights_api_summary_stats_actor_type_actor_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "Actor ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "actor_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Actor-specific summary statistics."
                }
            ],
            "description": "Retrieves summary stats by actor within an organization."
        },
        {
            "name": "get_orgs_insights_api_time_stats",
            "url": "https://api.github.com/orgs/{org}/insights/api/time-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Time-based statistics."
                }
            ],
            "description": "Retrieves time-based statistics for an organization."
        },
        {
            "name": "get_orgs_insights_api_time_stats_user_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/time-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "User-specific time stats."
                }
            ],
            "description": "Retrieves time stats per user within an organization."
        },
        {
            "name": "get_orgs_insights_api_time_stats_actor_type_actor_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "Actor ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "actor_time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Actor-specific time stats."
                }
            ],
            "description": "Retrieves time stats by actor within an organization."
        },
        {
            "name": "get_orgs_api_user_stats_user_id",
            "url": "https://api.github.com/orgs/{org}/insights/api/user-stats/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Statistics for a user."
                }
            ],
            "description": "Retrieves user statistics in an organization."
        },
        {
            "name": "get_orgs_installations",
            "url": "https://api.github.com/orgs/{org}/installations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "installations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of installations for the organization."
                }
            ],
            "description": "Lists app installations for an organization."
        },
        {
            "name": "get_orgs_invitations",
            "url": "https://api.github.com/orgs/{org}/invitations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "invitations",
                    "is_array": true,
                    "type": "object",
                    "description": "Pending invitations."
                }
            ],
            "description": "Lists pending invitations for an organization."
        },
        {
            "name": "post_orgs_invitations",
            "url": "https://api.github.com/orgs/{org}/invitations",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "invitation_data",
                    "required": true,
                    "type": "object",
                    "description": "Payload for invitation."
                }
            ],
            "output_parameters": [
                {
                    "name": "invitation_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the invitation."
                }
            ],
            "description": "Creates a new invitation for an organization."
        },
        {
            "name": "delete_orgs_invitations_invitation_id",
            "url": "https://api.github.com/orgs/{org}/invitations/{invitation_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "invitation_id",
                    "required": true,
                    "type": "string",
                    "description": "Invitation ID to cancel."
                }
            ],
            "output_parameters": [],
            "description": "Cancels an organization invitation."
        },
        {
            "name": "GET /apps/{app_slug}",
            "url": "/apps/{app_slug}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "app_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slug identifier for the app."
                }
            ],
            "output_parameters": [
                {
                    "name": "app_slug",
                    "is_array": false,
                    "type": "string",
                    "description": "The slug identifier for the app."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The display name of the app."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "A brief description of the app."
                },
                {
                    "name": "client_id",
                    "is_array": false,
                    "type": "string",
                    "description": "The client ID of the app."
                },
                {
                    "name": "client_secret",
                    "is_array": false,
                    "type": "string",
                    "description": "The client secret of the app."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the app was created."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the app was last updated."
                }
            ],
            "description": "Retrieves details of a specific app by its slug."
        },
        {
            "name": "GET /user/installations",
            "url": "/user/installations",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of installations accessible to the user."
                },
                {
                    "name": "installations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of installation objects accessible to the user."
                }
            ],
            "description": "Lists installations accessible to the authenticated user."
        },
        {
            "name": "GET /user/installations/{installation_id}/repositories",
            "url": "/user/installations/{installation_id}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "installation_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the installation."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of repositories accessible."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories accessible in the installation."
                }
            ],
            "description": "Lists repositories accessible to the specified installation."
        },
        {
            "name": "GET /user/marketplace_purchases",
            "url": "/user/marketplace_purchases",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "total_purchase_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of marketplace purchases."
                },
                {
                    "name": "purchases",
                    "is_array": true,
                    "type": "object",
                    "description": "List of marketplace purchase objects."
                }
            ],
            "description": "Lists the authenticated user's active marketplace purchases."
        },
        {
            "name": "GET /user/marketplace_purchases/stubbed",
            "url": "/user/marketplace_purchases/stubbed",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "purchases",
                    "is_array": true,
                    "type": "object",
                    "description": "List of stubbed marketplace purchase objects."
                }
            ],
            "description": "Lists stubbed data for the authenticated user's marketplace purchases."
        },
        {
            "name": "GET /organizations/{org}/settings/billing/usage",
            "url": "/organizations/{org}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total billing usage in bytes."
                },
                {
                    "name": "report",
                    "is_array": true,
                    "type": "object",
                    "description": "Billing report details."
                }
            ],
            "description": "Gets the billing usage report for the organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/actions",
            "url": "/orgs/{org}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_minutes_used",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total minutes used in billing."
                },
                {
                    "name": "billing_period",
                    "is_array": false,
                    "type": "string",
                    "description": "Billing period in ISO 8601 format."
                }
            ],
            "description": "Retrieves GitHub Actions billing for the organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/packages",
            "url": "/orgs/{org}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total billing bytes used for packages."
                },
                {
                    "name": "packages",
                    "is_array": true,
                    "type": "object",
                    "description": "List of package billing details."
                }
            ],
            "description": "Gets the GitHub Packages billing for the organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/shared-storage",
            "url": "/orgs/{org}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "shared_storage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Shared storage in bytes."
                },
                {
                    "name": "usage_period",
                    "is_array": false,
                    "type": "string",
                    "description": "Usage period in ISO 8601 format."
                }
            ],
            "description": "Retrieves shared storage billing for the organization."
        },
        {
            "name": "GET /users/{username}/settings/billing/actions",
            "url": "/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_minutes_used",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total minutes used in billing."
                },
                {
                    "name": "billing_period",
                    "is_array": false,
                    "type": "string",
                    "description": "Billing period in ISO 8601 format."
                }
            ],
            "description": "Gets GitHub Actions billing for a user."
        },
        {
            "name": "GET /users/{username}/settings/billing/packages",
            "url": "/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total bytes used for package billing."
                },
                {
                    "name": "packages",
                    "is_array": true,
                    "type": "object",
                    "description": "List of package billing details."
                }
            ],
            "description": "Retrieves package billing details for a user."
        },
        {
            "name": "GET /users/{username}/settings/billing/shared-storage",
            "url": "/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username."
                }
            ],
            "output_parameters": [
                {
                    "name": "shared_storage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Shared storage in bytes."
                },
                {
                    "name": "usage_period",
                    "is_array": false,
                    "type": "string",
                    "description": "Usage period in ISO 8601 format."
                }
            ],
            "description": "Gets shared storage billing information for a user."
        },
        {
            "name": "GET /users/{username}/settings/billing/usage",
            "url": "/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total billing usage in bytes."
                },
                {
                    "name": "report",
                    "is_array": true,
                    "type": "object",
                    "description": "Billing report details."
                }
            ],
            "description": "Retrieves billing usage report for a user."
        },
        {
            "name": "GET /repos/{owner}/{repo}/branches",
            "url": "/repos/{owner}/{repo}/branches",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "branches",
                    "is_array": true,
                    "type": "object",
                    "description": "List of branch objects."
                }
            ],
            "description": "Lists branches in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/branches/{branch}",
            "url": "/repos/{owner}/{repo}/branches/{branch}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "commit",
                    "is_array": false,
                    "type": "object",
                    "description": "Latest commit object on the branch."
                },
                {
                    "name": "protected",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the branch is protected."
                }
            ],
            "description": "Gets information about a specific branch."
        },
        {
            "name": "GET /repos/{owner}/{repo}/branches/{branch}/protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Protection settings for the branch."
                }
            ],
            "description": "Gets the branch protection settings."
        },
        {
            "name": "PUT /repos/{owner}/{repo}/branches/{branch}/protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "protection_parameters",
                    "required": true,
                    "type": "object",
                    "description": "Protection settings to apply."
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated protection settings."
                }
            ],
            "description": "Enables branch protection with specified settings."
        },
        {
            "name": "DELETE /repos/{owner}/{repo}/branches/{branch}/protection",
            "url": "/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Removes branch protection from the specified branch."
        },
        {
            "name": "GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor (e.g., user, organization)."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the actor."
                }
            ],
            "output_parameters": [
                {
                    "name": "data",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of route statistics data."
                }
            ],
            "description": "Retrieve route statistics for a specific actor within an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/subject-stats",
            "url": "/orgs/{org}/insights/api/subject-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of subject statistics."
                }
            ],
            "description": "Get summary statistics for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats",
            "url": "/orgs/{org}/insights/api/summary-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "summary",
                    "is_array": true,
                    "type": "object",
                    "description": "Summary statistics data."
                }
            ],
            "description": "Retrieve overall summary statistics for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats/users/{user_id}",
            "url": "/orgs/{org}/insights/api/summary-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "integer",
                    "description": "User identifier."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "User-specific summary statistics."
                }
            ],
            "description": "Get summary statistics for a user within an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the actor."
                }
            ],
            "output_parameters": [
                {
                    "name": "actor_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Statistics for the specified actor."
                }
            ],
            "description": "Retrieve summary statistics for a specific actor."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats",
            "url": "/orgs/{org}/insights/api/time-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Time-related statistics."
                }
            ],
            "description": "Get time-based statistics for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats/users/{user_id}",
            "url": "/orgs/{org}/insights/api/time-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "integer",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Time-based statistics for a user."
                }
            ],
            "description": "Retrieve time statistics for a specific user."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "integer",
                    "description": "Actor ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "actor_time_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Time statistics for the actor."
                }
            ],
            "description": "Get time-based statistics for a specific actor."
        },
        {
            "name": "GET /orgs/{org}/insights/api/user-stats/{user_id}",
            "url": "/orgs/{org}/insights/api/user-stats/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "integer",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "user_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Statistics related to a user."
                }
            ],
            "description": "Retrieve activity statistics for a user in an organization."
        },
        {
            "name": "PATCH /orgs/{org}/dependabot/repository-access",
            "url": "/orgs/{org}/dependabot/repository-access",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "access_list",
                    "required": true,
                    "type": "object",
                    "description": "Dependabot repository access list."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Update Dependabot's repository access list for an organization."
        },
        {
            "name": "PUT /orgs/{org}/dependabot/repository-access/default-level",
            "url": "/orgs/{org}/dependabot/repository-access/default-level",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "default_level",
                    "required": true,
                    "type": "string",
                    "description": "Default access level (e.g., 'read', 'write')."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set the default repository access level for Dependabot in an organization."
        },
        {
            "name": "PATCH /orgs/{org}",
            "url": "/orgs/{org}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Organization update data."
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_org",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated organization data."
                }
            ],
            "description": "Update an organization's information."
        },
        {
            "name": "DELETE /orgs/{org}",
            "url": "/orgs/{org}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Delete an organization."
        },
        {
            "name": "POST /orgs/{org}/actions/hosted-runners",
            "url": "/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_configuration",
                    "required": true,
                    "type": "object",
                    "description": "Configuration details for the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Created hosted runner."
                }
            ],
            "description": "Create a GitHub-hosted runner for an organization."
        },
        {
            "name": "PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Update data for the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated hosted runner."
                }
            ],
            "description": "Update a GitHub-hosted runner for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Delete a GitHub-hosted runner from an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/oidc/customization/sub",
            "url": "/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "OIDC customization data."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set the customization template for an OIDC subject claim for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions settings for GitHub Actions."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set GitHub Actions permissions for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repository permissions settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Enable repositories for GitHub Actions within an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions for the repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Enable a specific repository for GitHub Actions in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Disable a repository for GitHub Actions in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/selected-actions",
            "url": "/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions for allowed actions."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set allowed actions and reusable workflows for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/workflow",
            "url": "/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "string",
                    "description": "Default workflow permissions setting."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set default workflow permissions for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations",
            "url": "/orgs/{org}/code-security/configurations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "configurations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of code security configurations."
                }
            ],
            "description": "Get code security configurations for an organization."
        },
        {
            "name": "POST /orgs/{org}/code-security/configurations",
            "url": "/orgs/{org}/code-security/configurations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_data",
                    "required": true,
                    "type": "object",
                    "description": "Data for new code security configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Create a new code security configuration for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/defaults",
            "url": "/orgs/{org}/code-security/configurations/defaults",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "defaults",
                    "is_array": true,
                    "type": "object",
                    "description": "Default code security configurations."
                }
            ],
            "description": "Get default code security configurations for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/code-security/configurations/detach",
            "url": "/orgs/{org}/code-security/configurations/detach",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_ids",
                    "required": true,
                    "type": "object",
                    "description": "IDs of configurations to detach."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Detach code security configurations from repositories."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "configuration",
                    "is_array": false,
                    "type": "object",
                    "description": "Code security configuration details."
                }
            ],
            "description": "Get specific code security configuration details."
        },
        {
            "name": "PATCH /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "update_data",
                    "required": true,
                    "type": "object",
                    "description": "Data to update configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Update a specific code security configuration."
        },
        {
            "name": "DELETE /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Delete a specific code security configuration."
        },
        {
            "name": "POST /orgs/{org}/code-security/configurations/{configuration_id}/attach",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/attach",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repositories to attach the configuration to."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Attach a code security configuration to repositories."
        },
        {
            "name": "PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/defaults",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "defaults",
                    "required": true,
                    "type": "object",
                    "description": "Default configuration settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Set a code security configuration as default for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Repositories associated with the configuration."
                }
            ],
            "description": "Get repositories associated with a code security configuration."
        },
        {
            "name": "POST /orgs/{org}/copilot/billing/selected_teams",
            "url": "/orgs/{org}/copilot/billing/selected_teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "teams",
                    "required": true,
                    "type": "object",
                    "description": "Array of team IDs to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Add teams to the Copilot subscription for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/copilot/billing/selected_teams",
            "url": "/orgs/{org}/copilot/billing/selected_teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "teams",
                    "required": true,
                    "type": "object",
                    "description": "Array of team IDs to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Remove teams from the Copilot subscription for an organization."
        },
        {
            "name": "POST /orgs/{org}/copilot/billing/selected_users",
            "url": "/orgs/{org}/copilot/billing/selected_users",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "users",
                    "required": true,
                    "type": "object",
                    "description": "Array of user IDs to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Add users to the Copilot subscription for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/copilot/billing/selected_users",
            "url": "/orgs/{org}/copilot/billing/selected_users",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "users",
                    "required": true,
                    "type": "object",
                    "description": "Array of user IDs to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Remove users from the Copilot subscription for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/billing",
            "url": "/orgs/{org}/copilot/billing",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "copilot_billing_info",
                    "is_array": true,
                    "type": "object",
                    "description": "Information about Copilot billing."
                }
            ],
            "description": "Get Copilot seat information and settings for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/billing/seats",
            "url": "/orgs/{org}/copilot/billing/seats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "seats",
                    "is_array": true,
                    "type": "object",
                    "description": "List of Copilot seat assignments."
                }
            ],
            "description": "List all Copilot seat assignments for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/metrics",
            "url": "/orgs/{org}/copilot/metrics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "metrics",
                    "is_array": true,
                    "type": "object",
                    "description": "Copilot metrics data."
                }
            ],
            "description": "Get Copilot metrics for an organization."
        },
        {
            "name": "GET /orgs/{org}/members/{username}/copilot",
            "url": "/orgs/{org}/members/{username}/copilot",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the member."
                }
            ],
            "output_parameters": [
                {
                    "name": "seat_info",
                    "is_array": false,
                    "type": "object",
                    "description": "Copilot seat assignment details for the user."
                }
            ],
            "description": "Get Copilot seat assignment details for a user in an organization."
        },
        {
            "name": "GET /orgs/{org}/team/{team_slug}/copilot/metrics",
            "url": "/orgs/{org}/team/{team_slug}/copilot/metrics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "Team slug."
                }
            ],
            "output_parameters": [
                {
                    "name": "team_metrics",
                    "is_array": true,
                    "type": "object",
                    "description": "Copilot metrics for a team."
                }
            ],
            "description": "Get Copilot metrics for a team."
        },
        {
            "name": "POST /orgs/{org}/issue-types",
            "url": "/orgs/{org}/issue-types",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "issue_type",
                    "required": true,
                    "type": "object",
                    "description": "Details of the issue type to create."
                }
            ],
            "output_parameters": [
                {
                    "name": "issue_type_response",
                    "is_array": false,
                    "type": "object",
                    "description": "Created issue type details."
                }
            ],
            "description": "Create an issue type for an organization."
        },
        {
            "name": "PUT /orgs/{org}/issue-types/{issue_type_id}",
            "url": "/orgs/{org}/issue-types/{issue_type_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "issue_type_id",
                    "required": true,
                    "type": "string",
                    "description": "Issue type ID."
                },
                {
                    "name": "update_data",
                    "required": true,
                    "type": "object",
                    "description": "Data to update the issue type."
                }
            ],
            "output_parameters": [
                {
                    "name": "issue_type_updated",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated issue type details."
                }
            ],
            "description": "Update an issue type for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/issue-types/{issue_type_id}",
            "url": "/orgs/{org}/issue-types/{issue_type_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "issue_type_id",
                    "required": true,
                    "type": "string",
                    "description": "Issue type ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Delete an issue type from an organization."
        },
        {
            "name": "GET /orgs/{org}/issue-types",
            "url": "/orgs/{org}/issue-types",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "issue_types",
                    "is_array": true,
                    "type": "object",
                    "description": "List of issue types."
                }
            ],
            "description": "List all issue types for an organization."
        },
        {
            "name": "POST /orgs/{org}/invitations",
            "url": "/orgs/{org}/invitations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "invitation_data",
                    "required": true,
                    "type": "object",
                    "description": "Invitation details."
                }
            ],
            "output_parameters": [
                {
                    "name": "invitation",
                    "is_array": false,
                    "type": "object",
                    "description": "Invitation details."
                }
            ],
            "description": "Create an invitation for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/invitations/{invitation_id}",
            "url": "/orgs/{org}/invitations/{invitation_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "invitation_id",
                    "required": true,
                    "type": "string",
                    "description": "Invitation ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Cancel an organization invitation."
        },
        {
            "name": "DELETE /orgs/{org}/members/{username}",
            "url": "/orgs/{org}/members/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the member."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Remove a member from an organization."
        },
        {
            "name": "PUT /orgs/{org}/memberships/{username}",
            "url": "/orgs/{org}/memberships/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the member."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Membership data."
                }
            ],
            "output_parameters": [
                {
                    "name": "membership",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated membership information."
                }
            ],
            "description": "Set or update a user's membership in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/members/{username}",
            "url": "/orgs/{org}/members/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the member."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Operation status."
                }
            ],
            "description": "Remove a user from an organization."
        },
        {
            "name": "Remove all organization roles for a team",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#remove-all-organization-roles-for-a-team",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified name of the team."
                }
            ],
            "output_parameters": [],
            "description": "Deletes all organization roles for a specified team in the organization."
        },
        {
            "name": "Assign an organization role to a team",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#assign-an-organization-role-to-a-team",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified name of the team."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the role to assign."
                }
            ],
            "output_parameters": [],
            "description": "Assigns a specific role to a team within an organization."
        },
        {
            "name": "Remove an organization role from a team",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#remove-an-organization-role-from-a-team",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified name of the team."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the role to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes a specific organization role from a team."
        },
        {
            "name": "Remove all organization roles for a user",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#remove-all-organization-roles-for-a-user",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user."
                }
            ],
            "output_parameters": [],
            "description": "Removes all organization roles associated with a specific user."
        },
        {
            "name": "Assign an organization role to a user",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#assign-an-organization-role-to-a-user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the role to assign."
                }
            ],
            "output_parameters": [],
            "description": "Assigns a specific role to a user in the organization."
        },
        {
            "name": "Remove an organization role from a user",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#remove-an-organization-role-from-a-user",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "Unique identifier of the role to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes a specific organization role from a user."
        },
        {
            "name": "Convert an organization member to outside collaborator",
            "url": "https://docs.github.com/en/rest/orgs/outside-collaborators#convert-an-organization-member-to-outside-collaborator",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the organization member to convert."
                }
            ],
            "output_parameters": [],
            "description": "Converts an organization member to an outside collaborator."
        },
        {
            "name": "Remove an outside collaborator from an organization",
            "url": "https://docs.github.com/en/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the outside collaborator to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes an outside collaborator from an organization."
        },
        {
            "name": "Set public membership for the authenticated user",
            "url": "https://docs.github.com/en/rest/orgs/members#set-public-organization-membership-for-the-authenticated-user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user."
                }
            ],
            "output_parameters": [],
            "description": "Sets the public membership for the authenticated user in the specified organization."
        },
        {
            "name": "Remove public membership for the authenticated user",
            "url": "https://docs.github.com/en/rest/orgs/members#remove-public-organization-membership-for-the-authenticated-user",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user."
                }
            ],
            "output_parameters": [],
            "description": "Removes the public membership for the authenticated user in the specified organization."
        },
        {
            "name": "Create a new team in an organization",
            "url": "https://docs.github.com/en/rest/teams/teams#create-a-team",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the team."
                },
                {
                    "name": "privacy",
                    "required": false,
                    "type": "string",
                    "description": "The level of privacy for the team. Allowed values: 'secret', 'closed'."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new team in the specified organization."
        },
        {
            "name": "Add a user to a team (legacy method)",
            "url": "https://docs.github.com/en/rest/teams/members#add-team-member-legacy",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "team_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the team."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user to add."
                }
            ],
            "output_parameters": [],
            "description": "Adds a user to a team (legacy method)."
        },
        {
            "name": "Remove a user from a team (legacy method)",
            "url": "https://docs.github.com/en/rest/teams/members#remove-team-member-legacy",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "team_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the team."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes a user from a team (legacy method)."
        },
        {
            "name": "Update an organization membership for the authenticated user",
            "url": "https://docs.github.com/en/rest/orgs/members#update-an-organization-membership-for-the-authenticated-user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "state",
                    "required": true,
                    "type": "string",
                    "description": "The membership state. Allowed values: 'active', 'pending'."
                }
            ],
            "output_parameters": [],
            "description": "Updates the membership for the user in an organization."
        },
        {
            "name": "List failed organization invitations",
            "url": "https://docs.github.com/en/rest/orgs/members#list-failed-organization-invitations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all failed organization invitations."
        },
        {
            "name": "List pending organization invitations",
            "url": "https://docs.github.com/en/rest/orgs/members#list-pending-organization-invitations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all pending organization invitations."
        },
        {
            "name": "List teams with organization invitations",
            "url": "https://docs.github.com/en/rest/orgs/members#list-organization-invitation-teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "invitation_id",
                    "required": true,
                    "type": "string",
                    "description": "The invitation ID."
                }
            ],
            "output_parameters": [],
            "description": "Lists the teams associated with a particular organization invitation."
        },
        {
            "name": "List organization members",
            "url": "https://docs.github.com/en/rest/orgs/members#list-organization-members",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all members of an organization."
        },
        {
            "name": "Check if a user is a member of an organization",
            "url": "https://docs.github.com/en/rest/orgs/members#check-organization-membership-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to check."
                }
            ],
            "output_parameters": [],
            "description": "Checks if a user is a member of an organization."
        },
        {
            "name": "Get organization membership for a user",
            "url": "https://docs.github.com/en/rest/orgs/members#get-organization-membership-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to get membership details for."
                }
            ],
            "output_parameters": [],
            "description": "Gets the membership details for a user in an organization."
        },
        {
            "name": "List teams that are assigned to an organization role",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#list-teams-that-are-assigned-to-an-organization-role",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the role."
                }
            ],
            "output_parameters": [],
            "description": "Lists the teams assigned to a specific organization role."
        },
        {
            "name": "List users assigned to an organization role",
            "url": "https://docs.github.com/en/rest/orgs/organization-roles#list-users-that-are-assigned-to-an-organization-role",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "role_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the role."
                }
            ],
            "output_parameters": [],
            "description": "Lists users assigned to a specific organization role."
        },
        {
            "name": "List outside collaborators for an organization",
            "url": "https://docs.github.com/en/rest/orgs/outside-collaborators#list-outside-collaborators-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists outside collaborators for an organization."
        },
        {
            "name": "List public organization members",
            "url": "https://docs.github.com/en/rest/orgs/members#list-public-organization-members",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists public members of an organization."
        },
        {
            "name": "Check if a user is a public member of an organization",
            "url": "https://docs.github.com/en/rest/orgs/members#check-public-organization-membership-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to check."
                }
            ],
            "output_parameters": [],
            "description": "Checks if a user is a public member of an organization."
        },
        {
            "name": "List organization teams",
            "url": "https://docs.github.com/en/rest/orgs/teams#list-teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all teams in an organization."
        },
        {
            "name": "List team projects",
            "url": "https://docs.github.com/en/rest/teams/teams#list-team-projects",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified team name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all projects associated with a team."
        },
        {
            "name": "Check team permissions for a project",
            "url": "https://docs.github.com/en/rest/teams/teams#check-team-permissions-for-a-project",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified team name."
                },
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The project ID."
                }
            ],
            "output_parameters": [],
            "description": "Checks a team's permissions for a project."
        },
        {
            "name": "List users in a team",
            "url": "https://docs.github.com/en/rest/teams/members#list-team-members",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified team name."
                }
            ],
            "output_parameters": [],
            "description": "Lists users in a team."
        },
        {
            "name": "List team repositories",
            "url": "https://docs.github.com/en/rest/teams/repos#list-team-repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slugified team name."
                }
            ],
            "output_parameters": [],
            "description": "Lists repositories assigned to a team."
        },
        {
            "name": "Create a new organization project",
            "url": "https://docs.github.com/en/rest/projects/projects#create-an-organization-project",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the project."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project in an organization."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The name of the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column."
        },
        {
            "name": "Create a new project card in a column",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "content_id",
                    "required": false,
                    "type": "integer",
                    "description": "The ID of the issue or pull request to associate with the card."
                },
                {
                    "name": "content_type",
                    "required": false,
                    "type": "string",
                    "description": "The type of content. Allowed values: 'Issue', 'PullRequest'."
                },
                {
                    "name": "note",
                    "required": false,
                    "type": "string",
                    "description": "A note to attach to the card."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a column."
        },
        {
            "name": "Move a project card to another position",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the card."
                },
                {
                    "name": "position",
                    "required": true,
                    "type": "string",
                    "description": "The position to move the card to. Allowed values: 'top', 'bottom', 'after:<card_id>'."
                },
                {
                    "name": "column_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the column to move the card to (if moving between columns)."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card to another position."
        },
        {
            "name": "Update a project column",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the column."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the column."
                },
                {
                    "name": "configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration options for the column."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project column."
        },
        {
            "name": "Delete Reaction on Team Discussion Comment",
            "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slug of the team, must be a string."
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "The number of the discussion, must be an integer."
                },
                {
                    "name": "comment_number",
                    "required": true,
                    "type": "integer",
                    "description": "The number of the comment, must be an integer."
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the reaction to delete, must be an integer."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a reaction on a team discussion comment."
        },
        {
            "name": "Delete Reaction on Team Discussion",
            "url": "/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "The slug of the team, must be a string."
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "The number of the discussion, must be an integer."
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the reaction to delete, must be an integer."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a reaction on a team discussion."
        },
        {
            "name": "Create Organization Variable",
            "url": "/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "The value of the variable."
                },
                {
                    "name": "is_secret",
                    "required": true,
                    "type": "boolean",
                    "description": "Indicates if the variable is secret. Must be a boolean."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new organization-level variable."
        },
        {
            "name": "Update Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable to update."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "The new value of the variable."
                },
                {
                    "name": "is_secret",
                    "required": true,
                    "type": "boolean",
                    "description": "Indicates if the variable is secret. Must be a boolean."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing organization variable."
        },
        {
            "name": "Delete Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable to delete."
                }
            ],
            "output_parameters": [],
            "description": "Deletes an organization variable."
        },
        {
            "name": "Set Selected Repositories for Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization variable."
                },
                {
                    "name": "repository_ids",
                    "required": true,
                    "type": "object",
                    "description": "A list of repository IDs to associate with the variable."
                }
            ],
            "output_parameters": [],
            "description": "Sets the repositories for a given organization variable."
        },
        {
            "name": "Add Selected Repository to Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization variable."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add."
                }
            ],
            "output_parameters": [],
            "description": "Associates a specific repository with an organization variable."
        },
        {
            "name": "Remove Selected Repository from Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization variable."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes an associated repository from an organization variable."
        },
        {
            "name": "List Organization Variables",
            "url": "/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                }
            ],
            "output_parameters": [
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "A list of organization variables."
                }
            ],
            "description": "Lists all organization variables."
        },
        {
            "name": "Get Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "variable",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified variable."
                }
            ],
            "description": "Retrieves a specific organization variable."
        },
        {
            "name": "List Selected Repositories for Organization Variable",
            "url": "/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name, must be a string."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the organization variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories associated with the variable."
                }
            ],
            "description": "Lists repositories associated with an organization variable."
        },
        {
            "name": "Get all autolinks of a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/autolinks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "autolinks",
                    "is_array": true,
                    "type": "object",
                    "description": "List of autolinks associated with the repository."
                }
            ],
            "description": "Retrieves all autolinks for the specified repository."
        },
        {
            "name": "Get a single autolink of a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/autolinks/{autolink_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "autolink_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the autolink to retrieve."
                }
            ],
            "output_parameters": [
                {
                    "name": "autolink",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified autolink."
                }
            ],
            "description": "Retrieves a specific autolink by ID for the given repository."
        },
        {
            "name": "Check if Dependabot security updates are enabled for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/automated-security-fixes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "enabled",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether automated security fixes (Dependabot security updates) are enabled."
                }
            ],
            "description": "Checks if Dependabot security updates are enabled for the specified repository."
        },
        {
            "name": "Get branch protection details",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Protection settings for the branch."
                }
            ],
            "description": "Retrieves the protection settings for a specific branch."
        },
        {
            "name": "Get admin branch protection",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "enforce_admins",
                    "is_array": false,
                    "type": "object",
                    "description": "Admin enforcement settings for branch protection."
                }
            ],
            "description": "Retrieves whether admin enforcement is enabled on branch protection."
        },
        {
            "name": "Get pull request review protection",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "required_pull_request_reviews",
                    "is_array": false,
                    "type": "object",
                    "description": "Pull request review protection settings for the branch."
                }
            ],
            "description": "Retrieves pull request review protection settings for a specific branch."
        },
        {
            "name": "Get commit signature protection",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "required_signatures",
                    "is_array": false,
                    "type": "object",
                    "description": "Signature requirement settings for the branch."
                }
            ],
            "description": "Retrieves commit signature protection settings for a specific branch."
        },
        {
            "name": "Get status checks protection",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "required_status_checks",
                    "is_array": false,
                    "type": "object",
                    "description": "Status check protection settings for the branch."
                }
            ],
            "description": "Retrieves required status checks for a branch."
        },
        {
            "name": "Get all status check contexts",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "List of context names for status checks."
                }
            ],
            "description": "Lists all status check contexts for a branch."
        },
        {
            "name": "Get access restrictions",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Access restriction settings for the branch."
                }
            ],
            "description": "Retrieves branch access restrictions."
        },
        {
            "name": "Get apps with access to protected branch",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "apps",
                    "is_array": true,
                    "type": "string",
                    "description": "List of app slugs with access."
                }
            ],
            "description": "Lists apps with access to the protected branch."
        },
        {
            "name": "Get teams with access to protected branch",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "teams",
                    "is_array": true,
                    "type": "string",
                    "description": "List of team slugs with access."
                }
            ],
            "description": "Lists teams with access to the protected branch."
        },
        {
            "name": "Get users with access to protected branch",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "users",
                    "is_array": true,
                    "type": "string",
                    "description": "List of usernames with access."
                }
            ],
            "description": "Lists users with access to the protected branch."
        },
        {
            "name": "GET /repos/{owner}/{repo}/import/large_files",
            "url": "https://api.github.com/repos/{owner}/{repo}/import/large_files",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "description": "Retrieves information about large files in the repository import process."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pulls/{pull_number}",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "is_array": false,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "description": "Fetches details of a specific pull request."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "description": "Lists all releases for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases/assets/{asset_id}",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases/assets/{asset_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "asset_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the asset."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "asset_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Asset ID."
                }
            ],
            "description": "Retrieves a specific release asset."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases/latest",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases/latest",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "description": "Fetches the latest release."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases/tags/{tag}",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases/tags/{tag}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "tag",
                    "required": true,
                    "type": "string",
                    "description": "Tag name of the release."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "tag",
                    "is_array": false,
                    "type": "string",
                    "description": "Tag name."
                }
            ],
            "description": "Retrieves a release by tag name."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases/{release_id}",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases/{release_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "release_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the release."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "release_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Release ID."
                }
            ],
            "description": "Fetches details of a specific release."
        },
        {
            "name": "GET /repos/{owner}/{repo}/releases/{release_id}/assets",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases/{release_id}/assets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "release_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the release."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "release_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Release ID."
                }
            ],
            "description": "Lists assets for a specific release."
        },
        {
            "name": "GET /repos/{owner}/{repo}/tarball/{ref}",
            "url": "https://api.github.com/repos/{owner}/{repo}/tarball/{ref}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ref",
                    "required": true,
                    "type": "string",
                    "description": "Git reference (SHA, branch, or tag)."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "ref",
                    "is_array": false,
                    "type": "string",
                    "description": "Git reference."
                }
            ],
            "description": "Downloads a tarball archive of the repository at the specified ref."
        },
        {
            "name": "GET /repos/{owner}/{repo}/zipball/{ref}",
            "url": "https://api.github.com/repos/{owner}/{repo}/zipball/{ref}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ref",
                    "required": true,
                    "type": "string",
                    "description": "Git reference (SHA, branch, or tag)."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "ref",
                    "is_array": false,
                    "type": "string",
                    "description": "Git reference."
                }
            ],
            "description": "Downloads a zip archive of the repository at the specified ref."
        },
        {
            "name": "POST /repos/{template_owner}/{template_repo}/generate",
            "url": "https://api.github.com/repos/{template_owner}/{template_repo}/generate",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "template_owner",
                    "required": true,
                    "type": "string",
                    "description": "Owner of the template repository."
                },
                {
                    "name": "template_repo",
                    "required": true,
                    "type": "string",
                    "description": "Template repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the generated repository."
                },
                {
                    "name": "description",
                    "required": false,
                    "type": "string",
                    "description": "Description of the new repository."
                },
                {
                    "name": "private",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, creates a private repository."
                },
                {
                    "name": "owner",
                    "required": false,
                    "type": "string",
                    "description": "Organization login if creating an organization repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "description": "Creates a new repository from a template."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/permissions#enable-a-selected-repository-for-github-actions-in-an-organization",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name in which the repository permissions are being set."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Enables a selected repository for GitHub Actions within an organization. Requires appropriate permissions at the organization level."
        },
        {
            "name": "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/permissions#disable-a-selected-repository-for-github-actions-in-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Disables a selected repository for GitHub Actions within an organization. Requires appropriate permissions at the organization level."
        },
        {
            "name": "PUT /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#add-repository-access-to-a-self-hosted-runner-group-in-an-organization",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the runner group."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add to the runner group."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to a self-hosted runner group within an organization, granting access to runners in that group."
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#remove-repository-access-to-a-self-hosted-runner-group-in-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the runner group."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove from the runner group."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository's access to a self-hosted runner group within an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add to the secret."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to an organization secret, granting it access to the secret."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove from the secret."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository's access from an organization secret."
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#add-selected-repository-to-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add to the variable."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to an organization variable, granting it access to the variable."
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#remove-selected-repository-from-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove from the variable."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository's access from an organization variable."
        },
        {
            "name": "PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/codespaces/organization-secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add to the secret."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to a codespaces organization secret."
        },
        {
            "name": "DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove from the secret."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository from a codespaces organization secret."
        },
        {
            "name": "PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/dependabot/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to add to the secret."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to a Dependabot organization secret."
        },
        {
            "name": "DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository to remove from the secret."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository from a Dependabot organization secret."
        },
        {
            "name": "GET /orgs/{org}/repos",
            "url": "https://docs.github.com/en/rest/repos/repos#list-organization-repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [],
            "description": "Lists repositories for an organization."
        },
        {
            "name": "GET /repos/{owner}/{repo}",
            "url": "https://docs.github.com/en/rest/repos/repos#get-a-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Returns a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators",
            "url": "https://docs.github.com/en/rest/collaborators/collaborators#list-repository-collaborators",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists repository collaborators."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators/{username}",
            "url": "https://docs.github.com/en/rest/collaborators/collaborators#check-if-a-user-is-a-repository-collaborator",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the collaborator to check."
                }
            ],
            "output_parameters": [],
            "description": "Checks if a user is a collaborator on a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators/{username}/permission",
            "url": "https://docs.github.com/en/rest/collaborators/collaborators#get-repository-permissions-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to check permissions for."
                }
            ],
            "output_parameters": [],
            "description": "Gets a user's permissions level for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments",
            "url": "https://docs.github.com/en/rest/commits/comments#list-commit-comments-for-a-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists commit comments for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments/{comment_id}",
            "url": "https://docs.github.com/en/rest/commits/comments#get-a-commit-comment",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the comment."
                }
            ],
            "output_parameters": [],
            "description": "Gets a single commit comment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",
            "url": "https://docs.github.com/en/rest/reactions/reactions#list-reactions-for-a-commit-comment",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the comment."
                }
            ],
            "output_parameters": [],
            "description": "Lists reactions for a commit comment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/commits/{commit_sha}/comments",
            "url": "https://docs.github.com/en/rest/commits/comments#list-commit-comments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "commit_sha",
                    "required": true,
                    "type": "string",
                    "description": "SHA of the commit."
                }
            ],
            "output_parameters": [],
            "description": "Lists comments on a commit."
        },
        {
            "name": "GET /repos/{owner}/{repo}/contributors",
            "url": "https://docs.github.com/en/rest/repos/repos#list-repository-contributors",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists contributors to a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/events",
            "url": "https://docs.github.com/en/rest/activity/events#list-repository-events",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists events for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/forks",
            "url": "https://docs.github.com/en/rest/repos/forks#list-forks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists forks of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/languages",
            "url": "https://docs.github.com/en/rest/repos/repos#list-repository-languages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists languages used in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/license",
            "url": "https://docs.github.com/en/rest/licenses/licenses#get-the-license-for-a-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the license of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/private-vulnerability-reporting",
            "url": "https://docs.github.com/en/rest/repos/repos#check-if-private-vulnerability-reporting-is-enabled-for-a-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Checks if private vulnerability reporting is enabled for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/properties/values",
            "url": "https://docs.github.com/en/rest/repos/custom-properties#get-all-custom-property-values-for-a-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets all custom property values for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rules/branches/{branch}",
            "url": "https://docs.github.com/en/rest/repos/rules#get-rules-for-a-branch",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [],
            "description": "Gets rules for a specific branch in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rulesets",
            "url": "https://docs.github.com/en/rest/repos/rules#get-all-repository-rulesets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists all rulesets for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rulesets/{ruleset_id}",
            "url": "https://docs.github.com/en/rest/repos/rules#get-a-repository-ruleset",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "ruleset_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the ruleset."
                }
            ],
            "output_parameters": [],
            "description": "Gets a specific ruleset for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stargazers",
            "url": "https://docs.github.com/en/rest/activity/starring#list-stargazers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists stargazers for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/code_frequency",
            "url": "https://docs.github.com/en/rest/metrics/statistics#get-the-weekly-commit-activity",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the weekly code frequency statistics for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/commit_activity",
            "url": "https://docs.github.com/en/rest/metrics/statistics#get-the-last-year-of-commit-activity",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the commit activity statistics for the last year."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/contributors",
            "url": "https://docs.github.com/en/rest/metrics/statistics#get-all-contributor-commit-activity",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists contributor commit activity statistics for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/participation",
            "url": "https://docs.github.com/en/rest/metrics/statistics#get-the-weekly-commit-count",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the weekly commit count for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/punch_card",
            "url": "https://docs.github.com/en/rest/metrics/statistics#get-the-hourly-commit-count-for-each-day",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the hourly commit count for each day in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/subscribers",
            "url": "https://docs.github.com/en/rest/activity/watching#list-watchers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists watchers of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/tags",
            "url": "https://docs.github.com/en/rest/repos/repos#list-repository-tags",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists tags of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/topics",
            "url": "https://docs.github.com/en/rest/repos/repos#get-all-repository-topics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets all topics of a repository."
        },
        {
            "name": "GET /repositories",
            "url": "https://docs.github.com/en/rest/repos/repos#list-public-repositories",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Lists public repositories."
        },
        {
            "name": "GET /search/labels",
            "url": "https://docs.github.com/en/rest/search/search#search-labels",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Searches labels."
        },
        {
            "name": "PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/codespaces/secrets#add-a-selected-repository-to-a-user-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to a user's codespaces secret."
        },
        {
            "name": "DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository from a user's codespaces secret."
        },
        {
            "name": "GET /user/installations/{installation_id}/repositories",
            "url": "https://docs.github.com/en/rest/apps/installations#list-repositories-accessible-to-the-user-access-token",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "installation_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the installation."
                }
            ],
            "output_parameters": [],
            "description": "Lists repositories accessible to the user installation."
        },
        {
            "name": "GET /user/repos",
            "url": "https://docs.github.com/en/rest/repos/repos#list-repositories-for-the-authenticated-user",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Lists repositories for the authenticated user."
        },
        {
            "name": "GET /user/starred/{owner}/{repo}",
            "url": "https://docs.github.com/en/rest/activity/starring#check-if-a-repository-is-starred-by-the-authenticated-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Checks if a repository is starred by the authenticated user."
        },
        {
            "name": "PUT /user/starred/{owner}/{repo}",
            "url": "https://docs.github.com/en/rest/activity/starring#star-a-repository-for-the-authenticated-user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Stars a repository for the authenticated user."
        },
        {
            "name": "DELETE /user/starred/{owner}/{repo}",
            "url": "https://docs.github.com/en/rest/activity/starring#unstar-a-repository-for-the-authenticated-user",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Unstars a repository for the authenticated user."
        },
        {
            "name": "GET /users/{username}/repos",
            "url": "https://docs.github.com/en/rest/repos/repos#list-repositories-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "GitHub username."
                }
            ],
            "output_parameters": [],
            "description": "Lists public repositories for a specified user."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages",
            "url": "https://docs.github.com/en/rest/pages/pages#create-a-github-pages-site",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Creates a GitHub Pages site for a repository."
        },
        {
            "name": "PUT /repos/{owner}/{repo}/pages",
            "url": "https://docs.github.com/en/rest/pages/pages#update-information-about-a-github-pages-site",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Updates information about a GitHub Pages site."
        },
        {
            "name": "DELETE /repos/{owner}/{repo}/pages",
            "url": "https://docs.github.com/en/rest/pages/pages#delete-a-github-pages-site",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a GitHub Pages site from a repository."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/builds",
            "url": "https://docs.github.com/en/rest/pages/pages#request-a-github-pages-build",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Requests a build for GitHub Pages."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/deployments",
            "url": "https://docs.github.com/en/rest/pages/pages#create-a-github-pages-deployment",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Creates a deployment for GitHub Pages."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel",
            "url": "https://docs.github.com/en/rest/pages/pages#cancel-a-github-pages-deployment",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pages_deployment_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the pages deployment."
                }
            ],
            "output_parameters": [],
            "description": "Cancels a GitHub Pages deployment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/health",
            "url": "https://docs.github.com/en/rest/pages/pages#get-a-dns-health-check-for-github-pages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Checks the DNS health of GitHub Pages for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages",
            "url": "https://docs.github.com/en/rest/pages/pages#get-a-github-pages-site",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets information about a GitHub Pages site."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds",
            "url": "https://docs.github.com/en/rest/pages/pages#list-github-pages-builds",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Lists builds of a GitHub Pages site."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds/latest",
            "url": "https://docs.github.com/en/rest/pages/pages#get-latest-pages-build",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Gets the latest build of a GitHub Pages site."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds/{build_id}",
            "url": "https://docs.github.com/en/rest/pages/pages#get-github-pages-build",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "build_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the build."
                }
            ],
            "output_parameters": [],
            "description": "Gets information about a specific GitHub Pages build."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}",
            "url": "https://docs.github.com/en/rest/pages/pages#get-the-status-of-a-github-pages-deployment",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pages_deployment_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the pages deployment."
                }
            ],
            "output_parameters": [],
            "description": "Retrieves the status of a GitHub Pages deployment."
        },
        {
            "name": "PATCH /projects/columns/cards/{card_id}",
            "url": "https://docs.github.com/en/rest/projects/cards#update-an-existing-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project card."
                }
            ],
            "output_parameters": [],
            "description": "Updates an existing project card. Requires write permission."
        },
        {
            "name": "DELETE /projects/columns/cards/{card_id}",
            "url": "https://docs.github.com/en/rest/projects/cards#delete-a-project-card",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project card."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project card. Requires write permission."
        },
        {
            "name": "POST /projects/columns/cards/{card_id}/moves",
            "url": "https://docs.github.com/en/rest/projects/cards#move-a-project-card",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project card."
                },
                {
                    "name": "position",
                    "required": false,
                    "type": "string",
                    "description": "The position to move the card to. Can be 'top', 'bottom', or 'after:<card_id>'."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project card. Requires write permission."
        },
        {
            "name": "PATCH /projects/columns/{column_id}",
            "url": "https://docs.github.com/en/rest/projects/columns#update-an-existing-project-column",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project column."
                }
            ],
            "output_parameters": [],
            "description": "Updates a project column. Requires write permission."
        },
        {
            "name": "DELETE /projects/columns/{column_id}",
            "url": "https://docs.github.com/en/rest/projects/columns#delete-a-project-column",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project column."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project column. Requires write permission."
        },
        {
            "name": "POST /projects/columns/{column_id}/cards",
            "url": "https://docs.github.com/en/rest/projects/cards#create-a-project-card",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project column."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project card in a specified column. Requires write permission."
        },
        {
            "name": "POST /projects/columns/{column_id}/moves",
            "url": "https://docs.github.com/en/rest/projects/columns#move-a-project-column",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project column."
                },
                {
                    "name": "position",
                    "required": false,
                    "type": "string",
                    "description": "The position to move the column to. Can be 'first', 'last', or 'after:<column_id>'."
                }
            ],
            "output_parameters": [],
            "description": "Moves a project column. Requires write permission."
        },
        {
            "name": "PATCH /projects/{project_id}",
            "url": "https://docs.github.com/en/rest/projects/projects#update-a-project",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                }
            ],
            "output_parameters": [],
            "description": "Updates a project. Requires write permission."
        },
        {
            "name": "DELETE /projects/{project_id}",
            "url": "https://docs.github.com/en/rest/projects/projects#delete-a-project",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a project. Requires write permission."
        },
        {
            "name": "GET /projects/{project_id}/collaborators",
            "url": "https://docs.github.com/en/rest/projects/collaborators#list-project-collaborators",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                }
            ],
            "output_parameters": [],
            "description": "Lists project collaborators. Requires read permission."
        },
        {
            "name": "PUT /projects/{project_id}/collaborators/{username}",
            "url": "https://docs.github.com/en/rest/projects/collaborators#add-project-collaborator",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the collaborator to add."
                }
            ],
            "output_parameters": [],
            "description": "Adds a collaborator to a project. Requires write permission."
        },
        {
            "name": "DELETE /projects/{project_id}/collaborators/{username}",
            "url": "https://docs.github.com/en/rest/projects/collaborators#remove-user-as-a-collaborator",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the collaborator to remove."
                }
            ],
            "output_parameters": [],
            "description": "Removes a collaborator from a project. Requires write permission."
        },
        {
            "name": "GET /projects/{project_id}/collaborators/{username}/permission",
            "url": "https://docs.github.com/en/rest/projects/collaborators#get-project-permission-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to check permission for."
                }
            ],
            "output_parameters": [],
            "description": "Gets a user's permission level for a project."
        },
        {
            "name": "POST /projects/{project_id}/columns",
            "url": "https://docs.github.com/en/rest/projects/columns#create-a-project-column",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the project."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new column in a project. Requires write permission."
        },
        {
            "name": "POST /repos/{owner}/{repo}/projects",
            "url": "https://docs.github.com/en/rest/projects/projects#create-a-repository-project",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [],
            "description": "Creates a new project in a repository. Requires write permission."
        },
        {
            "name": "List labels for an issue",
            "url": "https://api.github.com/repos/{owner}/{repo}/issues/{issue_number}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "issue_number",
                    "required": true,
                    "type": "integer",
                    "description": "Issue number in the repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of label objects associated with the issue."
                }
            ],
            "description": "Retrieve labels for a specific issue in a repository."
        },
        {
            "name": "List timeline events for an issue",
            "url": "https://api.github.com/repos/{owner}/{repo}/issues/{issue_number}/timeline",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "issue_number",
                    "required": true,
                    "type": "integer",
                    "description": "Issue number in the repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "timeline_events",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of timeline event objects related to the issue."
                }
            ],
            "description": "List timeline events for a specific issue."
        },
        {
            "name": "List labels for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of label objects for the repository."
                }
            ],
            "description": "Retrieve all labels for a repository."
        },
        {
            "name": "Get a label",
            "url": "https://api.github.com/repos/{owner}/{repo}/labels/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the label."
                }
            ],
            "output_parameters": [
                {
                    "name": "label",
                    "is_array": false,
                    "type": "object",
                    "description": "Object representing the label details."
                }
            ],
            "description": "Get a specific label by name."
        },
        {
            "name": "List milestones",
            "url": "https://api.github.com/repos/{owner}/{repo}/milestones",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "milestones",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of milestone objects."
                }
            ],
            "description": "List milestones for a repository."
        },
        {
            "name": "Get a milestone",
            "url": "https://api.github.com/repos/{owner}/{repo}/milestones/{milestone_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "milestone_number",
                    "required": true,
                    "type": "integer",
                    "description": "Milestone number."
                }
            ],
            "output_parameters": [
                {
                    "name": "milestone",
                    "is_array": false,
                    "type": "object",
                    "description": "Object representing the milestone details."
                }
            ],
            "description": "Retrieve a specific milestone."
        },
        {
            "name": "List labels for issues in a milestone",
            "url": "https://api.github.com/repos/{owner}/{repo}/milestones/{milestone_number}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "milestone_number",
                    "required": true,
                    "type": "integer",
                    "description": "Milestone number."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of label objects associated with the milestone."
                }
            ],
            "description": "List labels assigned to issues in a specific milestone."
        },
        {
            "name": "List pull requests",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "pull_requests",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of pull request objects."
                }
            ],
            "description": "List pull requests in a repository."
        },
        {
            "name": "List review comments in a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/comments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "comments",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of review comment objects."
                }
            ],
            "description": "List review comments in a repository."
        },
        {
            "name": "Get a review comment for a pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/comments/{comment_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the review comment."
                }
            ],
            "output_parameters": [
                {
                    "name": "comment",
                    "is_array": false,
                    "type": "object",
                    "description": "Object representing the review comment."
                }
            ],
            "description": "Get a specific review comment for a pull request."
        },
        {
            "name": "List reactions for a pull request review comment",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the review comment."
                }
            ],
            "output_parameters": [
                {
                    "name": "reactions",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of reaction objects."
                }
            ],
            "description": "List reactions for a pull request review comment."
        },
        {
            "name": "Get a pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "pull_request",
                    "is_array": false,
                    "type": "object",
                    "description": "Object representing the pull request."
                }
            ],
            "description": "Get a specific pull request."
        },
        {
            "name": "List review comments on a pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/comments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "comments",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of review comment objects."
                }
            ],
            "description": "List review comments on a specific pull request."
        },
        {
            "name": "List commits on a pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/commits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "commits",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of commit objects."
                }
            ],
            "description": "List commits on a pull request."
        },
        {
            "name": "List files on a pull request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/files",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "files",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of file objects involved in the pull request."
                }
            ],
            "description": "List files changed in a pull request."
        },
        {
            "name": "Check if a pull request has been merged",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/merge",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number."
                }
            ],
            "output_parameters": [
                {
                    "name": "merged",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether the pull request has been merged."
                }
            ],
            "description": "Check if a pull request has been merged."
        },
        {
            "name": "GET /orgs/{org}/actions/cache/usage",
            "url": "https://api.github.com/orgs/{org}/actions/cache/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total cache usage in bytes."
                },
                {
                    "name": "usage_by_repository",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with cache usage."
                }
            ],
            "description": "Retrieves cache usage for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/cache/usage-by-repository",
            "url": "https://api.github.com/orgs/{org}/actions/cache/usage-by-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with cache usage details."
                }
            ],
            "description": "Lists repositories with cache usage in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of hosted runners."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of hosted runners."
                }
            ],
            "description": "Lists GitHub-hosted runners available for an organization."
        },
        {
            "name": "POST /orgs/{org}/actions/hosted-runners",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message indicating the result."
                }
            ],
            "description": "Creates a new GitHub-hosted runner for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/images/github-owned",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/images/github-owned",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "List of images owned by GitHub."
                }
            ],
            "description": "Lists images owned by GitHub for hosted runners."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/images/partner",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/images/partner",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "List of partner images for hosted runners."
                }
            ],
            "description": "Lists partner images available for GitHub-hosted runners."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/limits",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "limits",
                    "is_array": false,
                    "type": "object",
                    "description": "Limits on GitHub-hosted runners for the organization."
                }
            ],
            "description": "Retrieves limits on GitHub-hosted runners for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/machine-sizes",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/machine-sizes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "machine_sizes",
                    "is_array": true,
                    "type": "object",
                    "description": "List of machine sizes available for GitHub-hosted runners."
                }
            ],
            "description": "Lists machine sizes for GitHub-hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/platforms",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/platforms",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "platforms",
                    "is_array": true,
                    "type": "string",
                    "description": "Supported platforms for hosted runners."
                }
            ],
            "description": "Lists platforms available for GitHub-hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified hosted runner."
                }
            ],
            "description": "Gets details of a specific GitHub-hosted runner."
        },
        {
            "name": "PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Details to update for the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message."
                }
            ],
            "description": "Updates a specific GitHub-hosted runner."
        },
        {
            "name": "DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "https://api.github.com/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message indicating deletion."
                }
            ],
            "description": "Deletes a specific GitHub-hosted runner."
        },
        {
            "name": "GET /orgs/{org}/actions/oidc/customization/sub",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "customization",
                    "is_array": false,
                    "type": "object",
                    "description": "OIDC customization template details."
                }
            ],
            "description": "Gets the customization template for an OIDC subject claim."
        },
        {
            "name": "PUT /orgs/{org}/actions/oidc/customization/sub",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Details of the customization template to set."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message."
                }
            ],
            "description": "Sets the customization template for an OIDC subject claim."
        },
        {
            "name": "GET /orgs/{org}/actions/permissions",
            "url": "https://api.github.com/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                }
            ],
            "output_parameters": [
                {
                    "name": "permissions",
                    "is_array": true,
                    "type": "object",
                    "description": "Permissions settings for GitHub Actions in the organization."
                }
            ],
            "description": "Gets the GitHub Actions permissions for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions",
            "url": "https://api.github.com/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name or login."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions settings to update."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message."
                }
            ],
            "description": "Sets permissions for GitHub Actions in an organization."
        },
        {
            "name": "PUT /repos/{owner}/{repo}/interaction-limits",
            "url": "/repos/{owner}/{repo}/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Payload body containing interaction limits."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Response message indicating the success or failure of the operation."
                }
            ],
            "description": "Sets interaction restrictions for a specific repository."
        },
        {
            "name": "DELETE /repos/{owner}/{repo}/interaction-limits",
            "url": "/repos/{owner}/{repo}/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner's username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Response message indicating the success or failure of the operation."
                }
            ],
            "description": "Removes interaction restrictions from a specific repository."
        },
        {
            "name": "GET /user/interaction-limits",
            "url": "/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "limits",
                    "is_array": true,
                    "type": "object",
                    "description": "List of interaction limits for the authenticated user."
                }
            ],
            "description": "Retrieves the current interaction limits for the authenticated user."
        },
        {
            "name": "PUT /user/interaction-limits",
            "url": "/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Payload body containing interaction limits to set for the user."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Response message indicating the success or failure of the operation."
                }
            ],
            "description": "Sets interaction restrictions for the authenticated user."
        },
        {
            "name": "DELETE /user/interaction-limits",
            "url": "/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "Response message indicating the success or failure of the operation."
                }
            ],
            "description": "Removes interaction restrictions from the authenticated user."
        }
    ],
    "general_info": [
        {
            "var_name": "owner",
            "type": "str",
            "default_val": "",
            "explanation": "Repository owner name, case-insensitive. Used in various endpoints to identify the repository owner, whether a user or organization."
        },
        {
            "var_name": "repo",
            "type": "str",
            "default_val": "",
            "explanation": "Repository name, without the '.git' extension, case-insensitive. Used in multiple endpoints to specify the target repository."
        },
        {
            "var_name": "artifact_id",
            "type": "int",
            "default_val": "",
            "explanation": "Unique identifier for the artifact. Relevant for artifact management endpoints."
        },
        {
            "var_name": "per_page",
            "type": "int",
            "default_val": "30",
            "explanation": "Number of results per page, default is 30, maximum is 100. Used for paginated list responses."
        },
        {
            "var_name": "page",
            "type": "int",
            "default_val": "1",
            "explanation": "Page number to retrieve, default is 1. Used with pagination endpoints."
        },
        {
            "var_name": "name",
            "type": "str",
            "default_val": "",
            "explanation": "Optional filter to specify artifact name or other resource names, used in search or get endpoints."
        },
        {
            "var_name": "run_id",
            "type": "int",
            "default_val": "",
            "explanation": "ID of the workflow run to list or manage artifacts for. Used in workflow artifact endpoints."
        },
        {
            "var_name": "archive_format",
            "type": "str",
            "default_val": "",
            "explanation": "Format for archive download, commonly 'zip'. Specifies the desired archive format for download endpoints."
        },
        {
            "var_name": "accept",
            "type": "str",
            "default_val": "application/vnd.github+json",
            "explanation": "Set to 'application/vnd.github+json' (recommended) for all requests to specify response format."
        },
        {
            "var_name": "org",
            "type": "str",
            "default_val": "None",
            "explanation": "Organization name or slug, required for organization-specific endpoints. Used to identify the organization context."
        },
        {
            "var_name": "environment_name",
            "type": "str",
            "default_val": "None",
            "explanation": "Name of the environment, URL-encoded, for environment-specific endpoints such as secrets."
        },
        {
            "var_name": "secret_name",
            "type": "str",
            "default_val": "None",
            "explanation": "Secret name used in URL path or request body, for managing secrets."
        },
        {
            "var_name": "encrypted_value",
            "type": "str",
            "default_val": "None",
            "explanation": "Encrypted secret value for creation or update. Used in secret management endpoints."
        },
        {
            "var_name": "key_id",
            "type": "str",
            "default_val": "None",
            "explanation": "ID of the key used for encryption. Relevant when creating or updating secrets."
        },
        {
            "var_name": "visibility",
            "type": "str",
            "default_val": "all",
            "explanation": "Visibility of the secret, can be 'all', 'private', or 'selected'. Used when setting secret visibility."
        },
        {
            "var_name": "selected_repository_ids",
            "type": "int",
            "default_val": "[]",
            "explanation": "Array of repository IDs when visibility is 'selected'. Used for secret access control."
        },
        {
            "var_name": "repository_id",
            "type": "int",
            "default_val": "None",
            "explanation": "Repository ID for adding or removing repositories, used in repository-specific secret endpoints."
        },
        {
            "var_name": "ref",
            "type": "str",
            "default_val": "None",
            "explanation": "Git reference (branch or tag) for dispatching workflows or filtering workflow runs."
        },
        {
            "var_name": "inputs",
            "type": "str",
            "default_val": "{}",
            "explanation": "Inputs for workflow dispatch, formatted as a JSON object."
        },
        {
            "var_name": "workflow_id",
            "type": "str",
            "default_val": "None",
            "explanation": "ID or filename of the workflow, used to identify workflows for dispatch or retrieval."
        },
        {
            "var_name": "actor",
            "type": "str",
            "default_val": "None",
            "explanation": "Filter by user login who created the push or other actions."
        },
        {
            "var_name": "branch",
            "type": "str",
            "default_val": "None",
            "explanation": "Branch name used to filter workflow runs or other branch-specific data."
        },
        {
            "var_name": "event",
            "type": "str",
            "default_val": "None",
            "explanation": "Event that triggered the workflow, such as 'push' or 'pull_request'."
        },
        {
            "var_name": "status",
            "type": "str",
            "default_val": "None",
            "explanation": "Filter workflow runs by status or conclusion, e.g., 'completed', 'success'."
        },
        {
            "var_name": "created",
            "type": "str",
            "default_val": "None",
            "explanation": "Date range for creation time in ISO 8601 format, used to filter results."
        },
        {
            "var_name": "exclude_pull_requests",
            "type": "str",
            "default_val": "false",
            "explanation": "Exclude pull request runs if set to 'true'."
        },
        {
            "var_name": "check_suite_id",
            "type": "int",
            "default_val": "None",
            "explanation": "ID of the check suite to filter runs."
        },
        {
            "var_name": "head_sha",
            "type": "str",
            "default_val": "None",
            "explanation": "Filter by specific commit SHA."
        },
        {
            "var_name": "authentication_token",
            "type": "str",
            "default_val": "None",
            "explanation": "API token or authentication credential for accessing the API."
        },
        {
            "var_name": "organization",
            "type": "str",
            "default_val": "None",
            "explanation": "The organization identifier used in the API calls."
        },
        {
            "var_name": "repository",
            "type": "str",
            "default_val": "None",
            "explanation": "The repository identifier involved in the API calls."
        },
        {
            "var_name": "org",
            "type": "str",
            "default_val": "None",
            "explanation": "Organization name in scope of the request."
        },
        {
            "var_name": "attestation_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier of a specific attestation."
        },
        {
            "var_name": "subject_digest",
            "type": "str",
            "default_val": "None",
            "explanation": "Digest string representing the subject."
        },
        {
            "var_name": "username",
            "type": "str",
            "default_val": "None",
            "explanation": "GitHub username."
        },
        {
            "var_name": "hook_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier for webhook."
        },
        {
            "var_name": "delivery_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier for webhook delivery."
        },
        {
            "var_name": "actor_type",
            "type": "str",
            "default_val": "None",
            "explanation": "Type of actor in stats, e.g., user, organization."
        },
        {
            "var_name": "actor_id",
            "type": "str",
            "default_val": "None",
            "explanation": "ID of the actor."
        },
        {
            "var_name": "user_id",
            "type": "str",
            "default_val": "None",
            "explanation": "User ID for specific statistics."
        },
        {
            "var_name": "repository_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier of a repository."
        },
        {
            "var_name": "invitation_id",
            "type": "str",
            "default_val": "None",
            "explanation": "ID of an invitation to cancel."
        },
        {
            "var_name": "org",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name, required for most endpoints."
        },
        {
            "var_name": "actor_type",
            "type": "str",
            "default_val": "",
            "explanation": "Type of actor, e.g., 'user' or 'organization'."
        },
        {
            "var_name": "actor_id",
            "type": "int",
            "default_val": "",
            "explanation": "Identifier for the actor, used in statistics endpoints."
        },
        {
            "var_name": "user_id",
            "type": "int",
            "default_val": "",
            "explanation": "User identifier for user-specific endpoints."
        },
        {
            "var_name": "username",
            "type": "str",
            "default_val": "",
            "explanation": "Username of the individual user."
        },
        {
            "var_name": "team_slug",
            "type": "str",
            "default_val": "",
            "explanation": "Slug of the team, used in team-specific endpoints."
        },
        {
            "var_name": "issue_type",
            "type": "str",
            "default_val": "",
            "explanation": "Type of issue, used in issue-type management."
        },
        {
            "var_name": "issue_type_id",
            "type": "str",
            "default_val": "",
            "explanation": "Identifier for a specific issue type."
        },
        {
            "var_name": "configuration_id",
            "type": "str",
            "default_val": "",
            "explanation": "Identifier for a code security configuration."
        },
        {
            "var_name": "custom_property_name",
            "type": "str",
            "default_val": "",
            "explanation": "Name of a custom property for organization."
        },
        {
            "var_name": "body",
            "type": "str",
            "default_val": "",
            "explanation": "Request body data, should be provided as a JSON object."
        }
    ]
}