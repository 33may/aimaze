{
    "endpoints": [
        {
            "name": "List artifacts for a repository",
            "url": "/repos/{owner}/{repo}/actions/artifacts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100), default 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch, default 1."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The name field of an artifact."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of artifacts."
                },
                {
                    "name": "artifacts",
                    "is_array": true,
                    "type": "object",
                    "description": "List of artifacts."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Artifact ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Artifact name."
                },
                {
                    "name": "size_in_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Size in bytes."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL for this artifact."
                },
                {
                    "name": "archive_download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Download URL for the archive."
                },
                {
                    "name": "expired",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the artifact has expired."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Expiration timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last updated timestamp."
                },
                {
                    "name": "digest",
                    "is_array": false,
                    "type": "string",
                    "description": "Digest hash."
                },
                {
                    "name": "workflow_run",
                    "is_array": false,
                    "type": "object",
                    "description": "Workflow run associated with the artifact."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "head_repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Head repository ID."
                },
                {
                    "name": "head_branch",
                    "is_array": false,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "head_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of the head commit."
                }
            ],
            "description": "Lists all artifacts for a repository."
        },
        {
            "name": "Get an artifact",
            "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Artifact ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Artifact ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Artifact name."
                },
                {
                    "name": "size_in_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Size in bytes."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL for this artifact."
                },
                {
                    "name": "archive_download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Download URL for the archive."
                },
                {
                    "name": "expired",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the artifact has expired."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Expiration timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last updated timestamp."
                },
                {
                    "name": "digest",
                    "is_array": false,
                    "type": "string",
                    "description": "Digest hash."
                },
                {
                    "name": "workflow_run",
                    "is_array": false,
                    "type": "object",
                    "description": "Workflow run associated with the artifact."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "head_repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Head repository ID."
                },
                {
                    "name": "head_branch",
                    "is_array": false,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "head_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of the head commit."
                }
            ],
            "description": "Gets a specific artifact."
        },
        {
            "name": "Delete an artifact",
            "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Artifact ID."
                }
            ],
            "output_parameters": [],
            "description": "Deletes an artifact."
        },
        {
            "name": "Download an artifact (Get redirect URL)",
            "url": "/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "artifact_id",
                    "required": true,
                    "type": "integer",
                    "description": "Artifact ID."
                },
                {
                    "name": "archive_format",
                    "required": true,
                    "type": "string",
                    "description": "Archive format, e.g., 'zip'."
                }
            ],
            "output_parameters": [
                {
                    "name": "redirect_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to redirect for downloading."
                }
            ],
            "description": "Gets a redirect URL to download an archive."
        },
        {
            "name": "List workflow run artifacts",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page, max 100."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Artifact name filter."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of artifacts."
                },
                {
                    "name": "artifacts",
                    "is_array": true,
                    "type": "object",
                    "description": "List of artifacts."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Artifact ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Artifact name."
                },
                {
                    "name": "size_in_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Size in bytes."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL."
                },
                {
                    "name": "archive_download_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Archive download URL."
                },
                {
                    "name": "expired",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Expired status."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Expiration timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Update timestamp."
                },
                {
                    "name": "digest",
                    "is_array": false,
                    "type": "string",
                    "description": "Digest hash."
                },
                {
                    "name": "workflow_run",
                    "is_array": false,
                    "type": "object",
                    "description": "Associated workflow run."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "head_repository_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Head repository ID."
                },
                {
                    "name": "head_branch",
                    "is_array": false,
                    "type": "string",
                    "description": "Branch name."
                },
                {
                    "name": "head_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of head commit."
                }
            ],
            "description": "Lists artifacts for a workflow run."
        },
        {
            "name": "List organization variables",
            "url": "https://api.github.com/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 30). Default: 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of organization variables."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the variable."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories with access."
                }
            ],
            "description": "Lists all organization variables."
        },
        {
            "name": "Create an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "The value of the variable."
                },
                {
                    "name": "visibility",
                    "required": true,
                    "type": "string",
                    "description": "The type of repositories that can access the variable. Can be 'all', 'private', or 'selected'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "Array of repository IDs that can access the variable if 'visibility' is 'selected'."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "Response status code, e.g., 201 for created."
                }
            ],
            "description": "Creates an organization variable."
        },
        {
            "name": "Get an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the variable."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the variable."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories with access."
                }
            ],
            "description": "Retrieves a specific organization variable."
        },
        {
            "name": "Update an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The variable name to update."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Contains 'name', 'value', 'visibility', and/or 'selected_repository_ids'."
                },
                {
                    "name": "name_field",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable name."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable value."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility type, e.g., 'all', 'private', or 'selected'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "Array of repository IDs if 'visibility' is 'selected'."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 for success."
                }
            ],
            "description": "Updates an organization variable."
        },
        {
            "name": "Delete an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The variable name to delete."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 indicates success."
                }
            ],
            "description": "Deletes an organization variable."
        },
        {
            "name": "List selected repositories for an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the variable."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number for pagination. Default 1."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page, max 100. Default 30."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "full_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Full repository name."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "Repository owner info."
                },
                {
                    "name": "login",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner login."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Owner ID."
                },
                {
                    "name": "avatar_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner avatar URL."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner HTML URL."
                }
            ],
            "description": "Lists all repositories that can access an organization variable."
        },
        {
            "name": "Set selected repositories for an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The variable name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Contains 'selected_repository_ids'."
                },
                {
                    "name": "selected_repository_ids",
                    "required": true,
                    "type": "integer",
                    "description": "Array of repository IDs to set."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 indicates success."
                }
            ],
            "description": "Replaces all repositories with specified list for a variable."
        },
        {
            "name": "Add selected repository to an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to add."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Contains 'repository_id'."
                },
                {
                    "name": "repository_id_field",
                    "required": false,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 for success."
                }
            ],
            "description": "Adds a repository to an organization variable."
        },
        {
            "name": "Remove selected repository from an organization variable",
            "url": "https://api.github.com/orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 indicates success."
                }
            ],
            "description": "Removes a repository from an organization variable."
        },
        {
            "name": "List repository variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Max 30 results per page. Default: 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of variables."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                }
            ],
            "description": "Lists all repository variables."
        },
        {
            "name": "Create a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "Variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "201 for created."
                }
            ],
            "description": "Creates a repository variable."
        },
        {
            "name": "Get a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                }
            ],
            "description": "Retrieves a specific repository variable."
        },
        {
            "name": "Update a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Contains 'name' and 'value'."
                },
                {
                    "name": "name_field",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable name."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 for success."
                }
            ],
            "description": "Updates a repository variable."
        },
        {
            "name": "Delete a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 indicates success."
                }
            ],
            "description": "Deletes a repository variable."
        },
        {
            "name": "List environment variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Max 30 results per page, default 10."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number, default 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of environment variables."
                },
                {
                    "name": "variables",
                    "is_array": true,
                    "type": "object",
                    "description": "List of environment variables."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                }
            ],
            "description": "Lists all environment variables."
        },
        {
            "name": "Create an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "required": true,
                    "type": "string",
                    "description": "Variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "201 for created."
                }
            ],
            "description": "Creates an environment variable."
        },
        {
            "name": "Get an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "value",
                    "is_array": false,
                    "type": "string",
                    "description": "Variable value."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                }
            ],
            "description": "Retrieves a specific environment variable."
        },
        {
            "name": "Update an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "Contains 'name' and 'value'."
                },
                {
                    "name": "name_field",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable name."
                },
                {
                    "name": "value",
                    "required": false,
                    "type": "string",
                    "description": "Updated variable value."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 for success."
                }
            ],
            "description": "Updates an environment variable."
        },
        {
            "name": "Delete an environment variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": true,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 indicates success."
                }
            ],
            "description": "Deletes an environment variable."
        },
        {
            "name": "List organization secrets",
            "url": "/orgs/{org}/actions/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of secrets."
                },
                {
                    "name": "secrets",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of secret objects."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last updated timestamp."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the secret."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories with access for 'selected' visibility."
                }
            ],
            "description": "Lists all secrets available in an organization without revealing their encrypted values."
        },
        {
            "name": "Get an organization public key",
            "url": "/orgs/{org}/actions/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "key_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the public key."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key used for encryption."
                }
            ],
            "description": "Gets your public key, which you need to encrypt secrets."
        },
        {
            "name": "Get an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the secret."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories with access for 'selected' visibility."
                }
            ],
            "description": "Gets a single organization secret without revealing its encrypted value."
        },
        {
            "name": "Create or update an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "encrypted_value",
                    "required": true,
                    "type": "string",
                    "description": "Value for your secret, encrypted with LibSodium."
                },
                {
                    "name": "key_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the key used to encrypt the secret."
                },
                {
                    "name": "visibility",
                    "required": true,
                    "type": "string",
                    "description": "Access level: `all`, `private`, or `selected`."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "integer",
                    "description": "Array of repository IDs for `selected` visibility."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "202 for creation, 204 for update."
                }
            ],
            "description": "Creates or updates an organization secret with an encrypted value."
        },
        {
            "name": "Delete an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 success, no content."
                }
            ],
            "description": "Deletes a secret in an organization."
        },
        {
            "name": "List selected repositories for an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number for pagination. Default: 1."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Max 100. Default: 30."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total count of repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of repository objects."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository node ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "full_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository full name."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "Owner object."
                },
                {
                    "name": "login",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner login."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Owner ID."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner node ID."
                },
                {
                    "name": "avatar_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner avatar URL."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner URL."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner profile URL."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Owner type."
                },
                {
                    "name": "site_admin",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether owner is site admin."
                },
                {
                    "name": "private",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Repository privacy status."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository URL."
                }
            ],
            "description": "Lists all repositories that have been selected when `visibility` is `selected`."
        },
        {
            "name": "Add selected repository to an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 when repository was added, 409 for conflict."
                }
            ],
            "description": "Adds a repository to an organization secret."
        },
        {
            "name": "Remove selected repository from an organization secret",
            "url": "/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 when repository was removed, 409 for conflict."
                }
            ],
            "description": "Removes a repository from an organization secret."
        },
        {
            "name": "List repository secrets",
            "url": "/repos/{owner}/{repo}/actions/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Max 100. Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total secrets count."
                },
                {
                    "name": "secrets",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of secret objects."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Creation timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Last update timestamp."
                }
            ],
            "description": "Lists all secrets available in a repository without revealing their encrypted values."
        },
        {
            "name": "Get a repository public key",
            "url": "/repos/{owner}/{repo}/actions/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "key_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the public key."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key for encryption."
                }
            ],
            "description": "Gets your public key, which you need to encrypt secrets."
        },
        {
            "name": "Get a repository secret",
            "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Created at timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Updated at timestamp."
                }
            ],
            "description": "Gets a single repository secret without revealing its encrypted value."
        },
        {
            "name": "Create or update a repository secret",
            "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "encrypted_value",
                    "required": true,
                    "type": "string",
                    "description": "Value for the secret, encrypted with LibSodium."
                },
                {
                    "name": "key_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the key used to encrypt the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "201 for creation, 204 for update."
                }
            ],
            "description": "Creates or updates a repository secret with an encrypted value."
        },
        {
            "name": "Delete a repository secret",
            "url": "/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 success, no content."
                }
            ],
            "description": "Deletes a secret in a repository."
        },
        {
            "name": "List environment secrets",
            "url": "/repositories/{repository_id}/environments/{environment_name}/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name (URL encoded)."
                },
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of secrets."
                },
                {
                    "name": "secrets",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of environment secret objects."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the secret."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of creation."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp of last update."
                }
            ],
            "description": "Lists all secrets in an environment."
        },
        {
            "name": "Get an environment public key",
            "url": "/repositories/{repository_id}/environments/{environment_name}/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "key_id",
                    "is_array": false,
                    "type": "string",
                    "description": "ID of the public key."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key for encryption."
                }
            ],
            "description": "Gets the public key for an environment."
        },
        {
            "name": "Get an environment secret",
            "url": "/repositories/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                }
            ],
            "output_parameters": [
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Created at timestamp."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Updated at timestamp."
                }
            ],
            "description": "Gets a single environment secret without revealing its encrypted value."
        },
        {
            "name": "Create or update an environment secret",
            "url": "/repositories/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "encrypted_value",
                    "required": true,
                    "type": "string",
                    "description": "Encrypted secret value."
                },
                {
                    "name": "key_id",
                    "required": true,
                    "type": "string",
                    "description": "ID of the key used to encrypt the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "201 for created, 204 for updated."
                }
            ],
            "description": "Creates or updates an environment secret."
        },
        {
            "name": "Delete an environment secret",
            "url": "/repositories/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to `application/vnd.github+json` is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "environment_name",
                    "required": true,
                    "type": "string",
                    "description": "Environment name."
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "204 success, no content."
                }
            ],
            "description": "Deletes an environment secret."
        },
        {
            "name": "List self-hosted runner groups for an organization",
            "url": "/orgs/{org}/actions/runner-groups",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "The number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "The page number of the results to fetch. Default: 1."
                },
                {
                    "name": "visible_to_repository",
                    "required": false,
                    "type": "string",
                    "description": "Only return runner groups that are allowed to be used by this repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total count of runner groups."
                },
                {
                    "name": "runner_groups",
                    "is_array": true,
                    "type": "object",
                    "description": "List of runner group objects."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the runner group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group is the default."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list runners in this group."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group is inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group is restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows associated with the group."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether workflow restrictions are read-only."
                }
            ],
            "description": "Lists all self-hosted runner groups configured in an organization."
        },
        {
            "name": "Create a self-hosted runner group for an organization",
            "url": "/orgs/{org}/actions/runner-groups",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility of the runner group. One of: `selected`, `all`, `private`. Default: `all`."
                },
                {
                    "name": "selected_repository_ids",
                    "required": false,
                    "type": "object",
                    "description": "List of repository IDs that can access the runner group."
                },
                {
                    "name": "runners",
                    "required": false,
                    "type": "object",
                    "description": "List of runner IDs to add to the group."
                },
                {
                    "name": "allows_public_repositories",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether the group can be used by public repositories. Default: false."
                },
                {
                    "name": "restricted_to_workflows",
                    "required": false,
                    "type": "boolean",
                    "description": "Restrict to specific workflows. Default: false."
                },
                {
                    "name": "selected_workflows",
                    "required": false,
                    "type": "object",
                    "description": "List of workflows."
                },
                {
                    "name": "network_configuration_id",
                    "required": false,
                    "type": "string",
                    "description": "Identifier of network configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the created group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the group is default."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list runners."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list hosted runners."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions read-only."
                }
            ],
            "description": "Creates a new self-hosted runner group for an organization."
        },
        {
            "name": "Get a self-hosted runner group for an organization",
            "url": "/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether default."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list runners."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list hosted runners."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions read-only."
                }
            ],
            "description": "Gets a specific self-hosted runner group."
        },
        {
            "name": "Update a self-hosted runner group for an organization",
            "url": "/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "New name of the runner group."
                },
                {
                    "name": "visibility",
                    "required": false,
                    "type": "string",
                    "description": "Visibility of the runner group. One of: `selected`, `all`, `private`."
                },
                {
                    "name": "allows_public_repositories",
                    "required": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "required": false,
                    "type": "boolean",
                    "description": "Restrict to workflows."
                },
                {
                    "name": "selected_workflows",
                    "required": false,
                    "type": "object",
                    "description": "List of workflows."
                },
                {
                    "name": "network_configuration_id",
                    "required": false,
                    "type": "string",
                    "description": "Network configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the updated group."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the group."
                },
                {
                    "name": "visibility",
                    "is_array": false,
                    "type": "string",
                    "description": "Visibility of the group."
                },
                {
                    "name": "default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether default."
                },
                {
                    "name": "selected_repositories_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list repositories."
                },
                {
                    "name": "runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list runners."
                },
                {
                    "name": "hosted_runners_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to list hosted runners."
                },
                {
                    "name": "network_configuration_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Network configuration ID."
                },
                {
                    "name": "inherited",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether inherited."
                },
                {
                    "name": "allows_public_repositories",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Allows public repositories."
                },
                {
                    "name": "restricted_to_workflows",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Restricted to workflows."
                },
                {
                    "name": "selected_workflows",
                    "is_array": true,
                    "type": "string",
                    "description": "List of workflows."
                },
                {
                    "name": "workflow_restrictions_read_only",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Workflow restrictions read-only."
                }
            ],
            "description": "Updates a self-hosted runner group."
        },
        {
            "name": "Delete a self-hosted runner group from an organization",
            "url": "/orgs/{org}/actions/runner-groups/{runner_group_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group to delete."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a self-hosted runner group."
        },
        {
            "name": "List GitHub-hosted runners for an organization",
            "url": "/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total count of runners."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of runner objects."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "platform",
                    "is_array": false,
                    "type": "string",
                    "description": "Platform of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "last_active_on",
                    "is_array": false,
                    "type": "string",
                    "description": "Last active date/time."
                }
            ],
            "description": "Lists GitHub-hosted runners for an organization."
        },
        {
            "name": "Get a GitHub-hosted runner for an organization",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "platform",
                    "is_array": false,
                    "type": "string",
                    "description": "Platform of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "last_active_on",
                    "is_array": false,
                    "type": "string",
                    "description": "Last active date/time."
                }
            ],
            "description": "Gets a GitHub-hosted runner configured in an organization."
        },
        {
            "name": "Update a GitHub-hosted runner for an organization",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "required": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "maximum_runners",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum runners."
                },
                {
                    "name": "enable_static_ip",
                    "required": false,
                    "type": "boolean",
                    "description": "Enable static IP."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "platform",
                    "is_array": false,
                    "type": "string",
                    "description": "Platform of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the runner."
                },
                {
                    "name": "last_active_on",
                    "is_array": false,
                    "type": "string",
                    "description": "Last active date/time."
                }
            ],
            "description": "Updates a GitHub-hosted runner for an organization."
        },
        {
            "name": "Delete a GitHub-hosted runner for an organization",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [],
            "description": "Deletes a GitHub-hosted runner for an organization."
        },
        {
            "name": "Get GitHub Actions permissions for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "enabled_repositories",
                    "is_array": false,
                    "type": "string",
                    "description": "The repositories policy: 'all', 'none', or 'selected'."
                },
                {
                    "name": "allowed_actions",
                    "is_array": false,
                    "type": "string",
                    "description": "The actions policy: 'all', 'local_only', or 'selected'."
                },
                {
                    "name": "selected_actions_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the selected actions and workflows."
                }
            ],
            "description": "Gets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organization."
        },
        {
            "name": "Set GitHub Actions permissions for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "enabled_repositories",
                    "required": true,
                    "type": "string",
                    "description": "Policy that controls repositories: 'all', 'none', or 'selected'."
                },
                {
                    "name": "allowed_actions",
                    "required": true,
                    "type": "string",
                    "description": "Policy for actions: 'all', 'local_only', or 'selected'."
                }
            ],
            "output_parameters": [],
            "description": "Sets the GitHub Actions permissions policy for repositories and allowed actions and reusable workflows in an organization."
        },
        {
            "name": "List selected repositories enabled for GitHub Actions in an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page. Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number. Default: 1."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of repositories."
                },
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with details."
                }
            ],
            "description": "Lists the selected repositories that are enabled for GitHub Actions in an organization."
        },
        {
            "name": "Set selected repositories enabled for GitHub Actions in an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "selected_repository_ids",
                    "required": true,
                    "type": "object",
                    "description": "Array of repository IDs to enable."
                }
            ],
            "output_parameters": [],
            "description": "Replaces the list of selected repositories that are enabled for GitHub Actions in an organization."
        },
        {
            "name": "Enable a selected repository for GitHub Actions in an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Adds a repository to the list of selected repositories that are enabled for GitHub Actions."
        },
        {
            "name": "Disable a selected repository for GitHub Actions in an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Removes a repository from the list of enabled repositories for GitHub Actions."
        },
        {
            "name": "Get allowed actions and reusable workflows for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "github_owned_allowed",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether GitHub-owned actions are allowed."
                },
                {
                    "name": "verified_allowed",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether actions from GitHub Marketplace verified creators are allowed."
                },
                {
                    "name": "patterns_allowed",
                    "is_array": true,
                    "type": "string",
                    "description": "List of allowed patterns."
                }
            ],
            "description": "Gets the selected actions and reusable workflows that are allowed in an organization."
        },
        {
            "name": "Set allowed actions and reusable workflows for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "github_owned_allowed",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether GitHub-owned actions are allowed."
                },
                {
                    "name": "verified_allowed",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether actions from GitHub Marketplace verified creators are allowed."
                },
                {
                    "name": "patterns_allowed",
                    "required": true,
                    "type": "object",
                    "description": "List of patterns allowed."
                }
            ],
            "output_parameters": [],
            "description": "Sets the actions and reusable workflows that are allowed in an organization."
        },
        {
            "name": "Get default workflow permissions for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "default_workflow_permissions",
                    "is_array": false,
                    "type": "string",
                    "description": "Default permissions: 'read' or 'write'."
                },
                {
                    "name": "can_approve_pull_request_reviews",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether GitHub Actions can approve pull requests."
                }
            ],
            "description": "Gets the default workflow permissions granted to the GITHUB_TOKEN in an organization."
        },
        {
            "name": "Set default workflow permissions for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "default_workflow_permissions",
                    "required": true,
                    "type": "string",
                    "description": "Permissions: 'read' or 'write'."
                },
                {
                    "name": "can_approve_pull_request_reviews",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether GitHub Actions can approve pull requests."
                }
            ],
            "output_parameters": [],
            "description": "Sets the default workflow permissions in an organization."
        },
        {
            "name": "Get GitHub Actions permissions for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "enabled",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether Actions are enabled."
                },
                {
                    "name": "allowed_actions",
                    "is_array": false,
                    "type": "string",
                    "description": "Allowed actions policy: 'all', 'selected'."
                },
                {
                    "name": "selected_actions_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to selected actions."
                }
            ],
            "description": "Gets the GitHub Actions permissions policy for a repository."
        },
        {
            "name": "Set GitHub Actions permissions for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "enabled",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether Actions are enabled."
                },
                {
                    "name": "allowed_actions",
                    "required": true,
                    "type": "string",
                    "description": "Allowed actions policy: 'all', 'local_only', 'selected'."
                }
            ],
            "output_parameters": [],
            "description": "Sets the GitHub Actions permissions policy for a repository."
        },
        {
            "name": "Get the level of access for workflows outside of the repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/permissions/access",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "access_level",
                    "is_array": false,
                    "type": "string",
                    "description": "Access level: 'none', 'user', 'organization'."
                }
            ],
            "description": "Gets the level of access for workflows outside of a repository."
        },
        {
            "name": "Set the level of access for workflows outside of the repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/permissions/access",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "accept",
                    "required": false,
                    "type": "string",
                    "description": "Setting to 'application/vnd.github+json' is recommended."
                },
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "access_level",
                    "required": true,
                    "type": "string",
                    "description": "Access level: 'none', 'user', 'organization'."
                }
            ],
            "output_parameters": [],
            "description": "Sets the level of access for workflows outside of a repository."
        },
        {
            "name": "Get the customization template for an OIDC subject claim for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "include_claim_keys",
                    "is_array": true,
                    "type": "string",
                    "description": "Array of claim keys included in the template."
                }
            ],
            "description": "Gets the customization template for an OpenID Connect (OIDC) subject claim."
        },
        {
            "name": "Set the customization template for an OIDC subject claim for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name. The name is not case sensitive."
                },
                {
                    "name": "include_claim_keys",
                    "required": true,
                    "type": "string",
                    "description": "Array of unique strings, each claim key can only contain alphanumeric characters and underscores."
                }
            ],
            "output_parameters": [],
            "description": "Creates or updates the customization template for an OpenID Connect (OIDC) subject claim."
        },
        {
            "name": "Get the customization template for an OIDC subject claim for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
                }
            ],
            "output_parameters": [
                {
                    "name": "use_default",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether default template is used."
                },
                {
                    "name": "include_claim_keys",
                    "is_array": true,
                    "type": "string",
                    "description": "Array of claim keys included in the template."
                }
            ],
            "description": "Gets the customization template for an OpenID Connect (OIDC) subject claim for a repository."
        },
        {
            "name": "Set the customization template for an OIDC subject claim for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository. The name is not case sensitive."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository without the `.git` extension. The name is not case sensitive."
                },
                {
                    "name": "use_default",
                    "required": true,
                    "type": "boolean",
                    "description": "Whether to use the default template or not. If `true`, the `include_claim_keys` field is ignored."
                },
                {
                    "name": "include_claim_keys",
                    "required": false,
                    "type": "string",
                    "description": "Array of unique strings, each claim key can only contain alphanumeric characters and underscores."
                }
            ],
            "output_parameters": [],
            "description": "Sets the customization template and `opt-in` or `opt-out` flag for an OpenID Connect (OIDC) subject claim for a repository."
        },
        {
            "name": "List self-hosted runners for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name (not case sensitive)."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of runners."
                },
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of runner objects."
                }
            ],
            "description": "Lists all self-hosted runners configured in an organization."
        },
        {
            "name": "List runner applications for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/downloads",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name (not case sensitive)."
                }
            ],
            "output_parameters": [
                {
                    "name": "downloader_versions",
                    "is_array": true,
                    "type": "object",
                    "description": "List of downloadable runner application binaries."
                }
            ],
            "description": "Lists binaries for the runner application that you can download and run."
        },
        {
            "name": "Create configuration for a just-in-time runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/generate-jitconfig",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name (not case sensitive)."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the new runner."
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Array of strings with labels."
                },
                {
                    "name": "work_folder",
                    "required": false,
                    "type": "string",
                    "description": "Working directory relative to runner install directory."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the generated runner."
                },
                {
                    "name": "encoded_jit_config",
                    "is_array": false,
                    "type": "string",
                    "description": "Encoded JIT configuration."
                }
            ],
            "description": "Generates a configuration for a JIT runner in an organization."
        },
        {
            "name": "Create a registration token for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/registration-token",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "token",
                    "is_array": false,
                    "type": "string",
                    "description": "Registration token."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Expiration time of the token."
                }
            ],
            "description": "Returns a token to register a self-hosted runner to an organization."
        },
        {
            "name": "Create a remove token for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/remove-token",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "token",
                    "is_array": false,
                    "type": "string",
                    "description": "Removal token."
                },
                {
                    "name": "expires_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Expiration time of the token."
                }
            ],
            "description": "Returns a token to remove a self-hosted runner from an organization."
        },
        {
            "name": "Get a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Runner ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Runner name."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Runner status."
                },
                {
                    "name": "busy",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the runner is busy."
                },
                {
                    "name": "ephemeral",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Is ephemeral runner."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels associated with the runner."
                }
            ],
            "description": "Gets a specific self-hosted runner in an organization."
        },
        {
            "name": "Delete a self-hosted runner from an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Identifier of the runner to delete."
                }
            ],
            "output_parameters": [],
            "description": "Removes a self-hosted runner from an organization."
        },
        {
            "name": "List labels for a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "List of labels."
                }
            ],
            "description": "Lists labels for a self-hosted runner."
        },
        {
            "name": "Add custom labels to a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Labels to add."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels after addition."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Updated list of labels."
                }
            ],
            "description": "Adds labels to a self-hosted runner in an organization."
        },
        {
            "name": "Set custom labels for a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "New set of labels to assign."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total labels after setting."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Final list of labels."
                }
            ],
            "description": "Sets labels for a self-hosted runner in an organization, replacing existing labels."
        },
        {
            "name": "Remove all custom labels from a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}/labels",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Remaining labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                }
            ],
            "description": "Removes all custom labels from a self-hosted runner in an organization."
        },
        {
            "name": "Remove a custom label from a self-hosted runner for an organization",
            "url": "https://api.github.com/orgs/{org}/actions/runners/{runner_id}/labels/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the label to remove."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Remaining labels count."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Remaining labels."
                }
            ],
            "description": "Removes a specific label from a self-hosted runner in an organization."
        },
        {
            "name": "Get a job for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/jobs/{job_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "The ID of the job."
                },
                {
                    "name": "run_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "The ID of the associated workflow run."
                },
                {
                    "name": "run_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL of the workflow run."
                },
                {
                    "name": "node_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Node ID."
                },
                {
                    "name": "head_sha",
                    "is_array": false,
                    "type": "string",
                    "description": "SHA of the head commit."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "API URL of the job."
                },
                {
                    "name": "html_url",
                    "is_array": false,
                    "type": "string",
                    "description": "HTML URL of the job in GitHub."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the job."
                },
                {
                    "name": "conclusion",
                    "is_array": false,
                    "type": "string",
                    "description": "Conclusion of the job."
                },
                {
                    "name": "started_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the job started."
                },
                {
                    "name": "completed_at",
                    "is_array": false,
                    "type": "string",
                    "description": "Timestamp when the job completed."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the job."
                },
                {
                    "name": "steps",
                    "is_array": true,
                    "type": "object",
                    "description": "List of steps in the job."
                },
                {
                    "name": "check_run_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL for the associated check run."
                },
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "string",
                    "description": "Labels assigned to the job."
                },
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "runner_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "runner_group_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner group."
                },
                {
                    "name": "runner_group_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner group."
                },
                {
                    "name": "workflow_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the workflow."
                },
                {
                    "name": "head_branch",
                    "is_array": false,
                    "type": "string",
                    "description": "Head branch of the workflow."
                }
            ],
            "description": "Retrieve details of a specific workflow job."
        },
        {
            "name": "Download job logs for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/jobs/{job_id}/logs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The repository name."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                }
            ],
            "output_parameters": [
                {
                    "name": "redirect_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to download logs."
                }
            ],
            "description": "Download logs for a specific workflow job."
        },
        {
            "name": "List jobs for a workflow run attempt",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "attempt_number",
                    "required": true,
                    "type": "integer",
                    "description": "Attempt number of the workflow run."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100)."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total count of jobs."
                },
                {
                    "name": "jobs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of jobs."
                }
            ],
            "description": "List jobs for a specific workflow run attempt."
        },
        {
            "name": "List jobs for a workflow run",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/runs/{run_id}/jobs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "Workflow run ID."
                },
                {
                    "name": "filter",
                    "required": false,
                    "type": "string",
                    "description": "Filter jobs by 'latest' or 'all'. Default is 'latest'."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100)."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of jobs."
                },
                {
                    "name": "jobs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of jobs."
                }
            ],
            "description": "List all jobs for a specific workflow run."
        },
        {
            "name": "Re-run a job from a workflow run",
            "url": "/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "job_id",
                    "required": true,
                    "type": "integer",
                    "description": "The unique identifier of the job."
                },
                {
                    "name": "enable_debug_logging",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to enable debug logging for the re-run. Default: false"
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status code indicating success or failure."
                }
            ],
            "description": "Re-run a specific job in a workflow run."
        },
        {
            "name": "List workflow runs for a repository",
            "url": "/repos/{owner}/{repo}/actions/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs created by this user."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs associated with this branch."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs triggered by this event."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs with the specified status."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Date range for creation, in ISO 8601 format."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to exclude pull request runs. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Filter by check suite ID."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Filter by commit SHA."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of workflow runs."
                },
                {
                    "name": "workflow_runs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of workflow run objects."
                }
            ],
            "description": "Lists all workflow runs for a repository with optional filters."
        },
        {
            "name": "Get a workflow run",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to exclude pull requests from the response. Default: false."
                }
            ],
            "output_parameters": [
                {
                    "name": "id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the workflow run."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the workflow."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the workflow run."
                },
                {
                    "name": "conclusion",
                    "is_array": false,
                    "type": "string",
                    "description": "Conclusion of the workflow run."
                },
                {
                    "name": "created_at",
                    "is_array": false,
                    "type": "string",
                    "description": "When the run was created."
                },
                {
                    "name": "updated_at",
                    "is_array": false,
                    "type": "string",
                    "description": "When the run was last updated."
                }
            ],
            "description": "Get details of a specific workflow run."
        },
        {
            "name": "Delete a workflow run",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status code."
                }
            ],
            "description": "Deletes a workflow run."
        },
        {
            "name": "Get the review history for a workflow run",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/approvals",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                }
            ],
            "output_parameters": [
                {
                    "name": "approvals",
                    "is_array": true,
                    "type": "object",
                    "description": "List of approval objects."
                }
            ],
            "description": "Get the review history for a specific workflow run."
        },
        {
            "name": "Approve a workflow run for a fork pull request",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/approve",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status code."
                }
            ],
            "description": "Approve a workflow run for a fork pull request."
        },
        {
            "name": "Re-run a workflow",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                },
                {
                    "name": "enable_debug_logging",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to enable debug logging for the re-run. Default: false."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status code."
                }
            ],
            "description": "Re-run a workflow run."
        },
        {
            "name": "Re-run failed jobs from a workflow run",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                },
                {
                    "name": "enable_debug_logging",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether to enable debug logging for the re-run. Default: false."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status code."
                }
            ],
            "description": "Re-run all failed jobs in a workflow run."
        },
        {
            "name": "Get workflow run usage",
            "url": "/repos/{owner}/{repo}/actions/runs/{run_id}/timing",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "run_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the workflow run."
                }
            ],
            "output_parameters": [
                {
                    "name": "billable",
                    "is_array": false,
                    "type": "object",
                    "description": "Billable minutes and total run time details."
                },
                {
                    "name": "run_duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total duration of the run in milliseconds."
                }
            ],
            "description": "Get the usage details of a workflow run."
        },
        {
            "name": "List workflow runs for a workflow",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "workflow_id",
                    "required": true,
                    "type": "string",
                    "description": "The ID of the workflow or its file name."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs for this user."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs associated with this branch."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs triggered by this event."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs with this status."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results to fetch. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs created within the given date-time range."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "Omit pull requests from the results. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Returns workflow runs with this check_suite_id."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Returns workflow runs associated with this head_sha."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of workflow runs."
                },
                {
                    "name": "workflow_runs",
                    "is_array": true,
                    "type": "object",
                    "description": "List of workflow run objects."
                }
            ],
            "description": "List all workflow runs for a specific workflow."
        },
        {
            "name": "List workflow runs for a workflow (alternative documentation reference)",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "The account owner of the repository."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "The name of the repository."
                },
                {
                    "name": "workflow_id",
                    "required": true,
                    "type": "string",
                    "description": "The ID of the workflow or its file name."
                },
                {
                    "name": "actor",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs for this user."
                },
                {
                    "name": "branch",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs associated with this branch."
                },
                {
                    "name": "event",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow run triggered by this event."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "Return workflow runs with this status."
                },
                {
                    "name": "per_page",
                    "required": false,
                    "type": "integer",
                    "description": "Number of results per page (max 100). Default: 30."
                },
                {
                    "name": "page",
                    "required": false,
                    "type": "integer",
                    "description": "Page number of the results. Default: 1."
                },
                {
                    "name": "created",
                    "required": false,
                    "type": "string",
                    "description": "Filter workflow runs created within this date-time range."
                },
                {
                    "name": "exclude_pull_requests",
                    "required": false,
                    "type": "boolean",
                    "description": "Exclude pull requests from results. Default: false."
                },
                {
                    "name": "check_suite_id",
                    "required": false,
                    "type": "integer",
                    "description": "Filter by check_suite_id."
                },
                {
                    "name": "head_sha",
                    "required": false,
                    "type": "string",
                    "description": "Filter by associated head_sha."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total count of workflow runs."
                },
                {
                    "name": "workflow_runs",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of workflow run objects."
                }
            ],
            "description": "Alternative reference for listing workflow runs."
        },
        {
            "name": "Get GitHub App installation tokens",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/cache/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total cache usage in bytes for the organization."
                },
                {
                    "name": "total_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of cache usage entries."
                }
            ],
            "description": "Retrieve cache usage information for a specific organization."
        },
        {
            "name": "List repositories with GitHub Actions cache usage for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/cache/usage-by-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with cache usage details."
                },
                {
                    "name": "repository_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "cache_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Cache usage in bytes for the repository."
                },
                {
                    "name": "cache_count",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of cache entries for the repository."
                }
            ],
            "description": "Lists repositories with their GitHub Actions cache usage for a specified organization."
        },
        {
            "name": "List GitHub-hosted runners for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of GitHub-hosted runners."
                },
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unique identifier for the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Current status of the runner."
                }
            ],
            "description": "Returns a list of GitHub-hosted runners for the specified organization."
        },
        {
            "name": "Create a GitHub-hosted runner for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name for the new runner."
                },
                {
                    "name": "os",
                    "required": true,
                    "type": "string",
                    "description": "Operating system for the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "Identifier for the created runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Current status of the runner."
                }
            ],
            "description": "Creates a new GitHub-hosted runner for the specified organization."
        },
        {
            "name": "List images of GitHub-owned hosted runners",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/images/github-owned",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "string",
                    "description": "List of GitHub-owned runner images."
                }
            ],
            "description": "Lists available images of GitHub-owned hosted runners for the organization."
        },
        {
            "name": "List partner images of hosted runners",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/images/partner",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "string",
                    "description": "List of partner runner images."
                }
            ],
            "description": "Lists available partner images of hosted runners for the organization."
        },
        {
            "name": "Get limits on GitHub-hosted runners for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "limits",
                    "is_array": false,
                    "type": "object",
                    "description": "Limits information."
                }
            ],
            "description": "Retrieves limits on GitHub-hosted runners for the specified organization."
        },
        {
            "name": "Get machine sizes for GitHub-hosted runners in an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/machine-sizes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "machine_sizes",
                    "is_array": true,
                    "type": "object",
                    "description": "List of machine size specifications."
                }
            ],
            "description": "Lists the available machine sizes for GitHub-hosted runners in an organization."
        },
        {
            "name": "Get available platforms for GitHub-hosted runners",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/platforms",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "platforms",
                    "is_array": true,
                    "type": "string",
                    "description": "Supported platforms for GitHub-hosted runners."
                }
            ],
            "description": "Lists the platforms available for GitHub-hosted runners in the specified organization."
        },
        {
            "name": "Get details of a specific GitHub-hosted runner for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the runner."
                },
                {
                    "name": "os",
                    "is_array": false,
                    "type": "string",
                    "description": "Operating system of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Current status of the runner."
                }
            ],
            "description": "Retrieves details of a specific GitHub-hosted runner for an organization."
        },
        {
            "name": "Update a GitHub-hosted runner for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "New name of the runner."
                },
                {
                    "name": "status",
                    "required": false,
                    "type": "string",
                    "description": "New status of the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the runner."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Updated name of the runner."
                },
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Updated status of the runner."
                }
            ],
            "description": "Updates details of a specific GitHub-hosted runner for an organization."
        },
        {
            "name": "Delete a GitHub-hosted runner from an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the hosted runner."
                }
            ],
            "output_parameters": [],
            "description": "Removes a specific GitHub-hosted runner from the organization."
        },
        {
            "name": "Get OIDC customizations for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "customization",
                    "is_array": false,
                    "type": "object",
                    "description": "OIDC customization details."
                }
            ],
            "description": "Retrieves the OIDC customization template for the specified organization."
        },
        {
            "name": "Set OIDC customizations for an organization",
            "url": "/rest/authentication-endpoints-available-for-github-app-installation-access-tokens#/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "template",
                    "required": true,
                    "type": "object",
                    "description": "OIDC customization template data."
                }
            ],
            "output_parameters": [
                {
                    "name": "customization",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated OIDC customization details."
                }
            ],
            "description": "Sets the OIDC customization template for the specified organization."
        },
        {
            "name": "list-private-registries-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                }
            ],
            "output_parameters": [
                {
                    "name": "registries",
                    "is_array": true,
                    "type": "object",
                    "description": "List of private registries"
                }
            ],
            "description": ""
        },
        {
            "name": "create-a-private-registry-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                },
                {
                    "name": "registry_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the private registry"
                }
            ],
            "output_parameters": [
                {
                    "name": "registry",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the created private registry"
                }
            ],
            "description": ""
        },
        {
            "name": "get-private-registries-public-key-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                }
            ],
            "output_parameters": [
                {
                    "name": "public_key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key used for encrypting secrets"
                }
            ],
            "description": ""
        },
        {
            "name": "get-a-private-registry-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret"
                }
            ],
            "output_parameters": [
                {
                    "name": "registry",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the private registry"
                }
            ],
            "description": ""
        },
        {
            "name": "update-a-private-registry-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret"
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update in the registry"
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_registry",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated registry details"
                }
            ],
            "description": ""
        },
        {
            "name": "delete-a-private-registry-for-an-organization",
            "url": "https://api.github.com/orgs/{org}/private-registries/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "list-organization-projects",
            "url": "https://api.github.com/orgs/{org}/projects",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "projects",
                    "is_array": true,
                    "type": "object",
                    "description": "List of projects"
                }
            ],
            "description": ""
        },
        {
            "name": "create-an-organization-project",
            "url": "https://api.github.com/orgs/{org}/projects",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "project_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the project"
                }
            ],
            "output_parameters": [
                {
                    "name": "project",
                    "is_array": false,
                    "type": "object",
                    "description": "Created project details"
                }
            ],
            "description": ""
        },
        {
            "name": "get-a-project-card",
            "url": "https://api.github.com/projects/columns/cards/{card_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project card"
                }
            ],
            "output_parameters": [
                {
                    "name": "card",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the project card"
                }
            ],
            "description": ""
        },
        {
            "name": "update-an-existing-project-card",
            "url": "https://api.github.com/projects/columns/cards/{card_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project card"
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update in the card"
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_card",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated project card details"
                }
            ],
            "description": ""
        },
        {
            "name": "delete-a-project-card",
            "url": "https://api.github.com/projects/columns/cards/{card_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project card"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "move-a-project-card",
            "url": "https://api.github.com/projects/columns/cards/{card_id}/moves",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the card to move"
                },
                {
                    "name": "move_to",
                    "required": true,
                    "type": "object",
                    "description": "Destination location details"
                }
            ],
            "output_parameters": [
                {
                    "name": "moved_card",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the moved card"
                }
            ],
            "description": ""
        },
        {
            "name": "get-a-project-column",
            "url": "https://api.github.com/projects/columns/{column_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                }
            ],
            "output_parameters": [
                {
                    "name": "column",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the project column"
                }
            ],
            "description": ""
        },
        {
            "name": "update-an-existing-project-column",
            "url": "https://api.github.com/projects/columns/{column_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update in the column"
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_column",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated project column details"
                }
            ],
            "description": ""
        },
        {
            "name": "delete-a-project-column",
            "url": "https://api.github.com/projects/columns/{column_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "list-project-cards",
            "url": "https://api.github.com/projects/columns/{column_id}/cards",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                }
            ],
            "output_parameters": [
                {
                    "name": "cards",
                    "is_array": true,
                    "type": "object",
                    "description": "List of project cards"
                }
            ],
            "description": ""
        },
        {
            "name": "create-a-project-card",
            "url": "https://api.github.com/projects/columns/{column_id}/cards",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                },
                {
                    "name": "card_details",
                    "required": true,
                    "type": "object",
                    "description": "Details of the new card"
                }
            ],
            "output_parameters": [
                {
                    "name": "card",
                    "is_array": false,
                    "type": "object",
                    "description": "Created project card"
                }
            ],
            "description": ""
        },
        {
            "name": "move-a-project-column",
            "url": "https://api.github.com/projects/columns/{column_id}/moves",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the column"
                },
                {
                    "name": "move_to",
                    "required": true,
                    "type": "object",
                    "description": "Destination location details"
                }
            ],
            "output_parameters": [
                {
                    "name": "moved_column",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the moved column"
                }
            ],
            "description": ""
        },
        {
            "name": "get-a-project",
            "url": "https://api.github.com/projects/{project_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                }
            ],
            "output_parameters": [
                {
                    "name": "project",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the project"
                }
            ],
            "description": ""
        },
        {
            "name": "update-a-project",
            "url": "https://api.github.com/projects/{project_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update in the project"
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_project",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated project details"
                }
            ],
            "description": ""
        },
        {
            "name": "delete-a-project",
            "url": "https://api.github.com/projects/{project_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "list-project-collaborators",
            "url": "https://api.github.com/projects/{project_id}/collaborators",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborators",
                    "is_array": true,
                    "type": "object",
                    "description": "List of project collaborators"
                }
            ],
            "description": ""
        },
        {
            "name": "add-project-collaborator",
            "url": "https://api.github.com/projects/{project_id}/collaborators/{username}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator"
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message"
                }
            ],
            "description": ""
        },
        {
            "name": "remove-user-as-a-collaborator",
            "url": "https://api.github.com/projects/{project_id}/collaborators/{username}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the project"
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator"
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message"
                }
            ],
            "description": ""
        },
        {
            "name": "get-all-requested-reviewers-for-a-pull-request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number"
                }
            ],
            "output_parameters": [
                {
                    "name": "reviewers",
                    "is_array": true,
                    "type": "string",
                    "description": "List of reviewer usernames"
                }
            ],
            "description": ""
        },
        {
            "name": "request-reviewers-for-a-pull-request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number"
                },
                {
                    "name": "reviewers",
                    "required": true,
                    "type": "object",
                    "description": "List of reviewers to add"
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message"
                }
            ],
            "description": ""
        },
        {
            "name": "remove-requested-reviewers-from-a-pull-request",
            "url": "https://api.github.com/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "pull_number",
                    "required": true,
                    "type": "integer",
                    "description": "Pull request number"
                },
                {
                    "name": "reviewers",
                    "required": true,
                    "type": "object",
                    "description": "List of reviewers to remove"
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message"
                }
            ],
            "description": ""
        },
        {
            "name": "Actions - Get GitHub Actions Cache Usage for an Organization",
            "url": "/en/rest/actions/cache#get-github-actions-cache-usage-for-an-organization",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Name of the organization."
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total cache usage in bytes."
                },
                {
                    "name": "repository_usage",
                    "is_array": true,
                    "type": "object",
                    "description": "Usage per repository."
                }
            ],
            "description": "Retrieves cache usage information for an organization."
        },
        {
            "name": "Actions - List repositories with cache usage in an organization",
            "url": "/en/rest/actions/cache#list-repositories-with-github-actions-cache-usage-for-an-organization",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with cache usage."
                }
            ],
            "description": "Lists repositories in an organization with cache usage details."
        },
        {
            "name": "Actions - List GitHub-hosted runners for an organization",
            "url": "/en/rest/actions/hosted-runners#list-github-hosted-runners-for-an-organization",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of GitHub-hosted runners."
                }
            ],
            "description": "Retrieves list of hosted runners for an organization."
        },
        {
            "name": "Actions - Create a GitHub-hosted runner for an organization",
            "url": "/en/rest/actions/hosted-runners#create-a-github-hosted-runner-for-an-organization",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_details",
                    "required": true,
                    "type": "object",
                    "description": "Details of the runner to create."
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the created runner."
                }
            ],
            "description": "Creates a new GitHub-hosted runner for the specified organization."
        },
        {
            "name": "Actions - Get custom OIDC subject claim template for an organization",
            "url": "/en/rest/actions/oidc#get-the-customization-template-for-an-oidc-subject-claim-for-an-organization",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "template",
                    "is_array": false,
                    "type": "string",
                    "description": "The OIDC subject claim template."
                }
            ],
            "description": "Retrieves the custom OIDC subject claim template for an organization."
        },
        {
            "name": "Permissions required for GitHub Apps - GitHub Docs",
            "url": "https://docs.github.com/en/rest/authentication/permissions-required-for-github-apps-#0",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "Permissions for GitHub Apps",
                    "is_array": true,
                    "type": "object",
                    "description": "Permissions details for GitHub Apps."
                }
            ],
            "description": "Documentation explaining permissions required for GitHub Apps."
        },
        {
            "name": "GET /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "Actor identifier."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Insight data with route statistics."
                }
            ],
            "description": "Retrieve route statistics insights for an organization actor."
        },
        {
            "name": "GET /orgs/{org}/insights/api/subject-stats",
            "url": "/orgs/{org}/insights/api/subject-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Subject statistics insights."
                }
            ],
            "description": "Retrieve subject statistics insights for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats",
            "url": "/orgs/{org}/insights/api/summary-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Summary statistics insights."
                }
            ],
            "description": "Retrieve summary statistics insights for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats/users/{user_id}",
            "url": "/orgs/{org}/insights/api/summary-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User identifier."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "User-specific summary statistics."
                }
            ],
            "description": "Retrieve user-specific summary statistics insights for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "Actor identifier."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Summary stats for an actor."
                }
            ],
            "description": "Retrieve summary statistics for an organization actor."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats",
            "url": "/orgs/{org}/insights/api/time-stats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Time-based statistics data."
                }
            ],
            "description": "Retrieve time statistics insights for an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats/users/{user_id}",
            "url": "/orgs/{org}/insights/api/time-stats/users/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Time-based statistics for user."
                }
            ],
            "description": "Retrieve time statistics for a specific user in an organization."
        },
        {
            "name": "GET /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}",
            "url": "/orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "actor_type",
                    "required": true,
                    "type": "string",
                    "description": "Type of actor."
                },
                {
                    "name": "actor_id",
                    "required": true,
                    "type": "string",
                    "description": "Actor ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "Time stats for an actor."
                }
            ],
            "description": "Retrieve time statistics for an organization actor."
        },
        {
            "name": "GET /orgs/{org}/insights/api/user-stats/{user_id}",
            "url": "/orgs/{org}/insights/api/user-stats/{user_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "User ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "User-specific statistics."
                }
            ],
            "description": "Retrieve user statistics for an organization."
        },
        {
            "name": "PATCH /orgs/{org}/dependabot/repository-access",
            "url": "/orgs/{org}/dependabot/repository-access",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repositories access details."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Update result."
                }
            ],
            "description": "Update repository access for Dependabot within an organization."
        },
        {
            "name": "PUT /orgs/{org}/dependabot/repository-access/default-level",
            "url": "/orgs/{org}/dependabot/repository-access/default-level",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "default_level",
                    "required": true,
                    "type": "string",
                    "description": "Default access level for Dependabot."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Set default access level result."
                }
            ],
            "description": "Set default repository access level for Dependabot."
        },
        {
            "name": "PATCH /orgs/{org}",
            "url": "/orgs/{org}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated organization data."
                }
            ],
            "description": "Update an organization."
        },
        {
            "name": "DELETE /orgs/{org}",
            "url": "/orgs/{org}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Deletion confirmation."
                }
            ],
            "description": "Delete an organization."
        },
        {
            "name": "POST /orgs/{org}/actions/hosted-runners",
            "url": "/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner_configuration",
                    "required": false,
                    "type": "object",
                    "description": "Configuration for hosted runners."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "object",
                    "description": "List of hosted runners."
                }
            ],
            "description": "Create a GitHub-hosted runner for an organization."
        },
        {
            "name": "PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "string",
                    "description": "Hosted runner ID."
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update for the runner."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated runner data."
                }
            ],
            "description": "Update a GitHub-hosted runner for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "string",
                    "description": "Hosted runner ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Deletion confirmation."
                }
            ],
            "description": "Delete a GitHub-hosted runner for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/oidc/customization/sub",
            "url": "/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "custom_template",
                    "required": true,
                    "type": "object",
                    "description": "Customization template."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Setup result."
                }
            ],
            "description": "Set the customization template for an OIDC subject claim."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Permissions update result."
                }
            ],
            "description": "Set GitHub Actions permissions for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repositories enabled for GitHub Actions."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Repositories permissions update result."
                }
            ],
            "description": "Enable repositories for GitHub Actions within an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions for the repository."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Repository permission update result."
                }
            ],
            "description": "Enable a specific repository for GitHub Actions in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Repository permission removal result."
                }
            ],
            "description": "Disable a repository for GitHub Actions in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/selected-actions",
            "url": "/orgs/{org}/actions/permissions/selected-actions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "allowed_actions",
                    "required": true,
                    "type": "object",
                    "description": "Allowed actions and workflows."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Selected actions permissions update result."
                }
            ],
            "description": "Set allowed actions and reusable workflows for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/workflow",
            "url": "/orgs/{org}/actions/permissions/workflow",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Default workflow permissions."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Workflow permissions update result."
                }
            ],
            "description": "Set default workflow permissions for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations",
            "url": "/orgs/{org}/code-security/configurations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "configurations",
                    "is_array": true,
                    "type": "object",
                    "description": "Code security configurations."
                }
            ],
            "description": "Retrieve code security configurations for an organization."
        },
        {
            "name": "POST /orgs/{org}/code-security/configurations",
            "url": "/orgs/{org}/code-security/configurations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration",
                    "required": true,
                    "type": "object",
                    "description": "Code security configuration to create."
                }
            ],
            "output_parameters": [
                {
                    "name": "configuration",
                    "is_array": false,
                    "type": "object",
                    "description": "Created code security configuration."
                }
            ],
            "description": "Create a new code security configuration for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/defaults",
            "url": "/orgs/{org}/code-security/configurations/defaults",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "defaults",
                    "is_array": true,
                    "type": "object",
                    "description": "Default code security configurations."
                }
            ],
            "description": "Retrieve default code security configurations."
        },
        {
            "name": "DELETE /orgs/{org}/code-security/configurations/detach",
            "url": "/orgs/{org}/code-security/configurations/detach",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_ids",
                    "required": true,
                    "type": "object",
                    "description": "IDs of configurations to detach."
                }
            ],
            "output_parameters": [
                {
                    "name": "detachment_result",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of detach operation."
                }
            ],
            "description": "Detach code security configurations from repositories."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "configuration",
                    "is_array": false,
                    "type": "object",
                    "description": "Code security configuration details."
                }
            ],
            "description": "Get a specific code security configuration."
        },
        {
            "name": "PATCH /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "update_fields",
                    "required": true,
                    "type": "object",
                    "description": "Fields to update in the configuration."
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_configuration",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated configuration details."
                }
            ],
            "description": "Update a specific code security configuration."
        },
        {
            "name": "DELETE /orgs/{org}/code-security/configurations/{configuration_id}",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "deletion_result",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of deletion."
                }
            ],
            "description": "Delete a specific code security configuration."
        },
        {
            "name": "POST /orgs/{org}/code-security/configurations/{configuration_id}/attach",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/attach",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repositories to attach."
                }
            ],
            "output_parameters": [
                {
                    "name": "attachment_result",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of attaching configuration."
                }
            ],
            "description": "Attach a code security configuration to repositories."
        },
        {
            "name": "PUT /orgs/{org}/code-security/configurations/{configuration_id}/defaults",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/defaults",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                },
                {
                    "name": "defaults",
                    "required": true,
                    "type": "object",
                    "description": "Default settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "defaults_set",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of setting defaults."
                }
            ],
            "description": "Set a code security configuration as default for an organization."
        },
        {
            "name": "GET /orgs/{org}/code-security/configurations/{configuration_id}/repositories",
            "url": "/orgs/{org}/code-security/configurations/{configuration_id}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "configuration_id",
                    "required": true,
                    "type": "string",
                    "description": "Configuration ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Repositories associated with the security configuration."
                }
            ],
            "description": "Get repositories associated with a code security configuration."
        },
        {
            "name": "POST /orgs/{org}/copilot/billing/selected_teams",
            "url": "/orgs/{org}/copilot/billing/selected_teams",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "teams",
                    "required": true,
                    "type": "object",
                    "description": "Teams to add to Co-Pilot billing."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of adding teams to billing."
                }
            ],
            "description": "Add teams to Copilot billing for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/copilot/billing/selected_teams",
            "url": "/orgs/{org}/copilot/billing/selected_teams",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "teams",
                    "required": true,
                    "type": "object",
                    "description": "Teams to remove from Co-Pilot billing."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of removing teams from billing."
                }
            ],
            "description": "Remove teams from Co-Pilot billing for an organization."
        },
        {
            "name": "POST /orgs/{org}/copilot/billing/selected_users",
            "url": "/orgs/{org}/copilot/billing/selected_users",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "users",
                    "required": true,
                    "type": "object",
                    "description": "Users to add to Copilot billing."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of adding users to billing."
                }
            ],
            "description": "Add users to Copilot billing for an organization."
        },
        {
            "name": "DELETE /orgs/{org}/copilot/billing/selected_users",
            "url": "/orgs/{org}/copilot/billing/selected_users",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "users",
                    "required": true,
                    "type": "object",
                    "description": "Users to remove from Copilot billing."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Result of removing users from billing."
                }
            ],
            "description": "Remove users from Copilot billing for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/billing",
            "url": "/orgs/{org}/copilot/billing",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "billing_info",
                    "is_array": false,
                    "type": "object",
                    "description": "Copilot billing information."
                }
            ],
            "description": "Get Co-Pilot seat information and settings for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/billing/seats",
            "url": "/orgs/{org}/copilot/billing/seats",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "seats",
                    "is_array": true,
                    "type": "object",
                    "description": "List of Copilot seat assignments."
                }
            ],
            "description": "List all Copilot seat assignments for an organization."
        },
        {
            "name": "GET /orgs/{org}/copilot/metrics",
            "url": "/orgs/{org}/copilot/metrics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "metrics",
                    "is_array": true,
                    "type": "object",
                    "description": "Copilot metrics data."
                }
            ],
            "description": "Get Copilot metrics for an organization."
        },
        {
            "name": "GET /orgs/{org}/installations",
            "url": "/orgs/{org}/installations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "installations",
                    "is_array": true,
                    "type": "object",
                    "description": "List of app installations."
                }
            ],
            "description": "List app installations for an organization."
        },
        {
            "name": "GET /orgs/{org}/interaction-limits",
            "url": "/orgs/{org}/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "limits",
                    "is_array": true,
                    "type": "object",
                    "description": "Interaction limits for the organization."
                }
            ],
            "description": "Get interaction restrictions for an organization."
        },
        {
            "name": "GET /orgs/{org}/members/{username}/copilot",
            "url": "/orgs/{org}/members/{username}/copilot",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username."
                }
            ],
            "output_parameters": [
                {
                    "name": "assignment_details",
                    "is_array": false,
                    "type": "object",
                    "description": "Copilot seat assignment details."
                }
            ],
            "description": "Get copilot seat assignment details for a user in an organization."
        },
        {
            "name": "GET /orgs/{org}/security-managers",
            "url": "/orgs/{org}/security-managers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "security_managers",
                    "is_array": true,
                    "type": "object",
                    "description": "List of security manager teams."
                }
            ],
            "description": "List security manager teams for an organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/actions",
            "url": "/orgs/{org}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "billing_data",
                    "is_array": true,
                    "type": "object",
                    "description": "Billing data for GitHub Actions."
                }
            ],
            "description": "Get GitHub Actions billing for an organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/packages",
            "url": "/orgs/{org}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "billing_data",
                    "is_array": true,
                    "type": "object",
                    "description": "Billing data for packages."
                }
            ],
            "description": "Get GitHub Packages billing for an organization."
        },
        {
            "name": "GET /orgs/{org}/settings/billing/shared-storage",
            "url": "/orgs/{org}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "storage_billing",
                    "is_array": true,
                    "type": "object",
                    "description": "Shared storage billing data."
                }
            ],
            "description": "Get shared storage billing for an organization."
        },
        {
            "name": "GET /orgs/{org}/team/{team_slug}/copilot/metrics",
            "url": "/orgs/{org}/team/{team_slug}/copilot/metrics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "Team slug."
                }
            ],
            "output_parameters": [
                {
                    "name": "metrics",
                    "is_array": true,
                    "type": "object",
                    "description": "Copilot metrics for the team."
                }
            ],
            "description": "Get Copilot metrics for a team within an organization."
        },
        {
            "name": "POST /orgs/{org}/personal-access-tokens",
            "url": "https://docs.github.com/en/rest/orgs/personal-access-tokens#update-the-access-to-organization-resources-via-fine-grained-personal-access-tokens",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/personal-access-tokens/{pat_id}",
            "url": "https://docs.github.com/en/rest/orgs/personal-access-tokens#update-the-access-a-fine-grained-personal-access-token-has-to-organization-resources",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "pat_id",
                    "required": true,
                    "type": "integer",
                    "description": "Personal Access Token ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/personal-access-tokens",
            "url": "https://docs.github.com/en/rest/orgs/personal-access-tokens#list-fine-grained-personal-access-tokens-with-access-to-organization-resources",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories",
            "url": "https://docs.github.com/en/rest/orgs/personal-access-tokens#list-repositories-a-fine-grained-personal-access-token-has-access-to",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "pat_id",
                    "required": true,
                    "type": "integer",
                    "description": "Personal Access Token ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",
            "url": "https://docs.github.com/en/rest/teams/teams#add-or-update-team-project-permissions",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "Team slug"
                },
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}",
            "url": "https://docs.github.com/en/rest/teams/teams#remove-a-project-from-a-team",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "team_slug",
                    "required": true,
                    "type": "string",
                    "description": "Team slug"
                },
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/{project_id}/collaborators",
            "url": "https://docs.github.com/en/rest/projects/collaborators#list-project-collaborators",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "PUT /projects/{project_id}/collaborators/{username}",
            "url": "https://docs.github.com/en/rest/projects/collaborators#add-project-collaborator",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /projects/{project_id}/collaborators/{username}",
            "url": "https://docs.github.com/en/rest/projects/collaborators#remove-user-as-a-collaborator",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/{project_id}/collaborators/{username}/permission",
            "url": "https://docs.github.com/en/rest/projects/collaborators#get-project-permission-for-a-user",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "POST /orgs/{org}/projects",
            "url": "https://docs.github.com/en/rest/projects/projects#create-an-organization-project",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "PATCH /projects/{project_id}",
            "url": "https://docs.github.com/en/rest/projects/projects#update-a-project",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /projects/{project_id}",
            "url": "https://docs.github.com/en/rest/projects/projects#delete-a-project",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "POST /projects/{project_id}/columns",
            "url": "https://docs.github.com/en/rest/projects/columns#create-a-project-column",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/projects",
            "url": "https://docs.github.com/en/rest/projects/projects#list-organization-projects",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /projects/columns/cards/{card_id}",
            "url": "https://docs.github.com/en/rest/projects/cards#get-a-project-card",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "card_id",
                    "required": true,
                    "type": "integer",
                    "description": "Card ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/columns/{column_id}",
            "url": "https://docs.github.com/en/rest/projects/columns#get-a-project-column",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "Column ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/columns/{column_id}/cards",
            "url": "https://docs.github.com/en/rest/projects/cards#list-project-cards",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "column_id",
                    "required": true,
                    "type": "integer",
                    "description": "Column ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/{project_id}",
            "url": "https://docs.github.com/en/rest/projects/projects#get-a-project",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /projects/{project_id}/columns",
            "url": "https://docs.github.com/en/rest/projects/columns#list-project-columns",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "project_id",
                    "required": true,
                    "type": "integer",
                    "description": "Project ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "POST /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#create-or-update-an-organization-secret",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#delete-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#set-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/secrets",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-organization-secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/public-key",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/generate-jitconfig",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/registration-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/remove-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Label name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runner-groups-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#get-a-self-hosted-runner-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-github-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-repository-access-to-a-self-hosted-runner-group-in-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/downloads",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-comment-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "comment_number",
                    "required": true,
                    "type": "integer",
                    "description": "Comment number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#create-an-organization-variable",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PATCH /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#update-an-organization-variable",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#delete-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#set-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#add-selected-repository-to-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#remove-selected-repository-from-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#list-organization-variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#get-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#list-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#create-or-update-an-organization-secret",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#delete-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#set-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/secrets",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-organization-secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/public-key",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/generate-jitconfig",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/registration-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/remove-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Label name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runner-groups-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#get-a-self-hosted-runner-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-github-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-repository-access-to-a-self-hosted-runner-group-in-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/downloads",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-comment-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "comment_number",
                    "required": true,
                    "type": "integer",
                    "description": "Comment number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#create-an-organization-variable",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PATCH /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#update-an-organization-variable",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#delete-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#set-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#add-selected-repository-to-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#remove-selected-repository-from-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#list-organization-variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#get-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#list-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#create-or-update-an-organization-secret",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#delete-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#set-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/secrets",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-organization-secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/public-key",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/generate-jitconfig",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-configuration-for-a-just-in-time-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/registration-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-registration-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/remove-token",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#create-a-remove-token-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#delete-a-self-hosted-runner-from-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#add-custom-labels-to-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#set-custom-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "labels",
                    "required": true,
                    "type": "object",
                    "description": "Object containing labels"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#remove-a-custom-label-from-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Label name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runner-groups-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#get-a-self-hosted-runner-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-github-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-repository-access-to-a-self-hosted-runner-group-in-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runner-groups#list-self-hosted-runners-in-a-group-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-self-hosted-runners-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/downloads",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-runner-applications-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#get-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/runners/{runner_id}/labels",
            "url": "https://docs.github.com/en/rest/actions/self-hosted-runners#list-labels-for-a-self-hosted-runner-for-an-organization",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-comment-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "comment_number",
                    "required": true,
                    "type": "integer",
                    "description": "Comment number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner_group_id}/discussions/{discussion_number}/reactions/{reaction_id}",
            "url": "https://docs.github.com/en/rest/reactions/reactions#delete-team-discussion-reaction",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "runner_group_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID"
                },
                {
                    "name": "discussion_number",
                    "required": true,
                    "type": "integer",
                    "description": "Discussion number"
                },
                {
                    "name": "reaction_id",
                    "required": true,
                    "type": "integer",
                    "description": "Reaction ID"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#create-an-organization-variable",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PATCH /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#update-an-organization-variable",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#delete-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#set-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#add-selected-repository-to-an-organization-variable",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/variables#remove-selected-repository-from-an-organization-variable",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/variables",
            "url": "https://docs.github.com/en/rest/actions/variables#list-organization-variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}",
            "url": "https://docs.github.com/en/rest/actions/variables#get-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/variables/{name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/variables#list-selected-repositories-for-an-organization-variable",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "POST /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#create-or-update-an-organization-secret",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#delete-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#set-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Object containing list of repositories"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#add-selected-repository-to-an-organization-secret",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}",
            "url": "https://docs.github.com/en/rest/actions/secrets#remove-selected-repository-from-an-organization-secret",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID"
                }
            ],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used."
        },
        {
            "name": "GET /orgs/{org}/actions/secrets",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-organization-secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/public-key",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}",
            "url": "https://docs.github.com/en/rest/actions/secrets#get-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/secrets/{secret_name}/repositories",
            "url": "https://docs.github.com/en/rest/actions/secrets#list-selected-repositories-for-an-organization-secret",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name"
                }
            ],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Check if Dependabot security updates are enabled for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/automated-security-fixes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Indicates if automated security fixes are enabled"
                }
            ],
            "description": "Checks if Dependabot security updates are enabled for a specific repository."
        },
        {
            "name": "Get branch protection settings",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "protection",
                    "is_array": false,
                    "type": "object",
                    "description": "Protection settings for the branch"
                }
            ],
            "description": "Retrieves the branch protection settings for a specific branch."
        },
        {
            "name": "Check if admins are enforced on branch protection",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "enforce_admins",
                    "is_array": false,
                    "type": "object",
                    "description": "Admin enforcement settings"
                }
            ],
            "description": "Checks if admin enforcement is enabled on branch protection."
        },
        {
            "name": "Get pull request review requirements",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "required_pull_request_reviews",
                    "is_array": false,
                    "type": "object",
                    "description": "Pull request review requirements"
                }
            ],
            "description": "Retrieves the required pull request review settings for a branch."
        },
        {
            "name": "Get commit signature verification requirement",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "required_signatures",
                    "is_array": false,
                    "type": "object",
                    "description": "Signature verification requirements"
                }
            ],
            "description": "Checks if commit signature verification is required on a branch."
        },
        {
            "name": "Get status checks requirements",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "required_status_checks",
                    "is_array": false,
                    "type": "object",
                    "description": "Status check requirements"
                }
            ],
            "description": "Retrieves the status check requirements for a branch."
        },
        {
            "name": "Get all status check contexts",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "contexts",
                    "is_array": true,
                    "type": "string",
                    "description": "List of status check contexts"
                }
            ],
            "description": "Lists all status check contexts that are part of the required status checks for a branch."
        },
        {
            "name": "Get access restrictions",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Access restrictions for the branch"
                }
            ],
            "description": "Retrieves the access restrictions for a branch."
        },
        {
            "name": "Get apps with branch access restrictions",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "apps",
                    "is_array": true,
                    "type": "string",
                    "description": "List of apps with access restrictions"
                }
            ],
            "description": "Lists all apps with access restrictions on a branch."
        },
        {
            "name": "Get teams with branch access restrictions",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "teams",
                    "is_array": true,
                    "type": "string",
                    "description": "List of teams with access restrictions"
                }
            ],
            "description": "Lists all teams with access restrictions on a branch."
        },
        {
            "name": "Get users with branch access restrictions",
            "url": "https://api.github.com/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner"
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name"
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name"
                }
            ],
            "output_parameters": [
                {
                    "name": "users",
                    "is_array": true,
                    "type": "string",
                    "description": "List of users with access restrictions"
                }
            ],
            "description": "Lists all users with access restrictions on a branch."
        },
        {
            "name": "GET /repos/{owner}/{repo}/issues/{issue\\_number}/sub\\_issues",
            "url": "/repos/{owner}/{repo}/issues/{issue\\_number}/sub\\_issues",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "issue\\_number",
                    "required": true,
                    "type": "integer",
                    "description": "Issue number."
                }
            ],
            "output_parameters": [
                {
                    "name": "sub_issues",
                    "is_array": true,
                    "type": "object",
                    "description": "List of sub-issues related to the issue."
                }
            ],
            "description": "Retrieve list of sub-issues for a specific issue."
        },
        {
            "name": "GET /repos/{owner}/{repo}/issues/{issue\\_number}/timeline",
            "url": "/repos/{owner}/{repo}/issues/{issue\\_number}/timeline",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "issue\\_number",
                    "required": true,
                    "type": "integer",
                    "description": "Issue number."
                }
            ],
            "output_parameters": [
                {
                    "name": "timeline_events",
                    "is_array": true,
                    "type": "object",
                    "description": "List of timeline events for the issue."
                }
            ],
            "description": "List timeline events for a specific issue."
        },
        {
            "name": "GET /repos/{owner}/{repo}/labels",
            "url": "/repos/{owner}/{repo}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "List of labels for the repository."
                }
            ],
            "description": "List labels for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/labels/{name}",
            "url": "/repos/{owner}/{repo}/labels/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the label."
                }
            ],
            "output_parameters": [
                {
                    "name": "label",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the label."
                }
            ],
            "description": "Get a specific label for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/milestones",
            "url": "/repos/{owner}/{repo}/milestones",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "milestones",
                    "is_array": true,
                    "type": "object",
                    "description": "List of milestones."
                }
            ],
            "description": "List milestones for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/milestones/{milestone\\_number}",
            "url": "/repos/{owner}/{repo}/milestones/{milestone\\_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "milestone\\_number",
                    "required": true,
                    "type": "integer",
                    "description": "Milestone number."
                }
            ],
            "output_parameters": [
                {
                    "name": "milestone",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the milestone."
                }
            ],
            "description": "Get a specific milestone for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/milestones/{milestone\\_number}/labels",
            "url": "/repos/{owner}/{repo}/milestones/{milestone\\_number}/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "milestone\\_number",
                    "required": true,
                    "type": "integer",
                    "description": "Milestone number."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "Labels associated with the milestone."
                }
            ],
            "description": "List labels for a specific milestone."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the permission change."
                }
            ],
            "description": "Enable a repository for GitHub Actions in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/permissions/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/permissions/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the permission removal."
                }
            ],
            "description": "Disable a repository for GitHub Actions in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/runner-groups/{runner\\_group\\_id}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/runner-groups/{runner\\_group\\_id}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner\\_group\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add repository access to a self-hosted runner group in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/runner-groups/{runner\\_group\\_id}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/runner-groups/{runner\\_group\\_id}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "runner\\_group\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Runner group ID."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove repository access from a self-hosted runner group in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add repository to an organization secret."
        },
        {
            "name": "DELETE /orgs/{org}/actions/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove repository from an organization secret."
        },
        {
            "name": "PUT /orgs/{org}/actions/variables/{name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/variables/{name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add organization variable to a repository."
        },
        {
            "name": "DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/actions/variables/{name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "Variable name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove organization variable from a repository."
        },
        {
            "name": "PUT /orgs/{org}/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add repository to a codespace secret."
        },
        {
            "name": "DELETE /orgs/{org}/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove repository from a codespace secret."
        },
        {
            "name": "PUT /orgs/{org}/dependabot/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/dependabot/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add repository to Dependabot secret."
        },
        {
            "name": "DELETE /orgs/{org}/dependabot/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/orgs/{org}/dependabot/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                },
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove repository from Dependabot secret."
        },
        {
            "name": "GET /orgs/{org}/repos",
            "url": "/orgs/{org}/repos",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories in the organization."
                }
            ],
            "description": "List repositories for an organization."
        },
        {
            "name": "GET /repos/{owner}/{repo}",
            "url": "/repos/{owner}/{repo}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "repository",
                    "is_array": false,
                    "type": "object",
                    "description": "Repository details."
                }
            ],
            "description": "Get a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators",
            "url": "/repos/{owner}/{repo}/collaborators",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborators",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repository collaborators."
                }
            ],
            "description": "List repository collaborators."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators/{username}",
            "url": "/repos/{owner}/{repo}/collaborators/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator."
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborator",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the collaborator."
                }
            ],
            "description": "Check if a user is a collaborator on a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/collaborators/{username}/permission",
            "url": "/repos/{owner}/{repo}/collaborators/{username}/permission",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username of the collaborator."
                }
            ],
            "output_parameters": [
                {
                    "name": "permission",
                    "is_array": false,
                    "type": "string",
                    "description": "Permission level for the user."
                }
            ],
            "description": "Get a user's permission level for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments",
            "url": "/repos/{owner}/{repo}/comments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "comments",
                    "is_array": true,
                    "type": "object",
                    "description": "List of commit comments."
                }
            ],
            "description": "List commit comments for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments/{comment\\_id}",
            "url": "/repos/{owner}/{repo}/comments/{comment\\_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Comment ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "comment",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the commit comment."
                }
            ],
            "description": "Get a specific commit comment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/comments/{comment\\_id}/reactions",
            "url": "/repos/{owner}/{repo}/comments/{comment\\_id}/reactions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "comment\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Comment ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "reactions",
                    "is_array": true,
                    "type": "object",
                    "description": "List of reactions for a commit comment."
                }
            ],
            "description": "List reactions for a commit comment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/commits/{commit\\_sha}/comments",
            "url": "/repos/{owner}/{repo}/commits/{commit\\_sha}/comments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "commit\\_sha",
                    "required": true,
                    "type": "string",
                    "description": "Commit SHA."
                }
            ],
            "output_parameters": [
                {
                    "name": "comments",
                    "is_array": true,
                    "type": "object",
                    "description": "List of commit comments on a specific commit."
                }
            ],
            "description": "List comments on a commit."
        },
        {
            "name": "GET /repos/{owner}/{repo}/contributors",
            "url": "/repos/{owner}/{repo}/contributors",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "contributors",
                    "is_array": true,
                    "type": "object",
                    "description": "List of contributors."
                }
            ],
            "description": "List contributors to a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/events",
            "url": "/repos/{owner}/{repo}/events",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "events",
                    "is_array": true,
                    "type": "object",
                    "description": "Repository events."
                }
            ],
            "description": "List repository events."
        },
        {
            "name": "GET /repos/{owner}/{repo}/forks",
            "url": "/repos/{owner}/{repo}/forks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "forks",
                    "is_array": true,
                    "type": "object",
                    "description": "List of forks."
                }
            ],
            "description": "List forks of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/languages",
            "url": "/repos/{owner}/{repo}/languages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "languages",
                    "is_array": false,
                    "type": "object",
                    "description": "Languages used in the repository."
                }
            ],
            "description": "List languages used in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/license",
            "url": "/repos/{owner}/{repo}/license",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "license",
                    "is_array": false,
                    "type": "object",
                    "description": "License information for the repository."
                }
            ],
            "description": "Get license information for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/private-vulnerability-reporting",
            "url": "/repos/{owner}/{repo}/private-vulnerability-reporting",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "reporting_status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of private vulnerability reporting."
                }
            ],
            "description": "Check if private vulnerability reporting is enabled for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/properties/values",
            "url": "/repos/{owner}/{repo}/properties/values",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "property_values",
                    "is_array": true,
                    "type": "object",
                    "description": "All custom property values for the repository."
                }
            ],
            "description": "Get all custom property values for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rules/branches/{branch}",
            "url": "/repos/{owner}/{repo}/rules/branches/{branch}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "branch",
                    "required": true,
                    "type": "string",
                    "description": "Branch name."
                }
            ],
            "output_parameters": [
                {
                    "name": "branch_rules",
                    "is_array": true,
                    "type": "object",
                    "description": "Rules for the branch."
                }
            ],
            "description": "Get rules for a branch."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rulesets",
            "url": "/repos/{owner}/{repo}/rulesets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "rulesets",
                    "is_array": true,
                    "type": "object",
                    "description": "List of rulesets."
                }
            ],
            "description": "Get all rulesets for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/rulesets/{ruleset\\_id}",
            "url": "/repos/{owner}/{repo}/rulesets/{ruleset\\_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "ruleset\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Ruleset ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "ruleset",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the ruleset."
                }
            ],
            "description": "Get a specific ruleset for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stargazers",
            "url": "/repos/{owner}/{repo}/stargazers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "stargazers",
                    "is_array": true,
                    "type": "object",
                    "description": "List of stargazers."
                }
            ],
            "description": "List stargazers for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/code\\_frequency",
            "url": "/repos/{owner}/{repo}/stats/code\\_frequency",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "code_frequency_stats",
                    "is_array": true,
                    "type": "object",
                    "description": "Weekly code frequency statistics."
                }
            ],
            "description": "Get weekly code frequency statistics for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/commit\\_activity",
            "url": "/repos/{owner}/{repo}/stats/commit\\_activity",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "commit_activity",
                    "is_array": true,
                    "type": "object",
                    "description": "Commit activity data."
                }
            ],
            "description": "Get last year's commit activity for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/contributors",
            "url": "/repos/{owner}/{repo}/stats/contributors",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "contributors",
                    "is_array": true,
                    "type": "object",
                    "description": "List of contributors and their activity."
                }
            ],
            "description": "Get contributor commit activity for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/participation",
            "url": "/repos/{owner}/{repo}/stats/participation",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "participation",
                    "is_array": true,
                    "type": "object",
                    "description": "Weekly participation data."
                }
            ],
            "description": "Get weekly commit count for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/stats/punch\\_card",
            "url": "/repos/{owner}/{repo}/stats/punch\\_card",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "punch_card",
                    "is_array": true,
                    "type": "object",
                    "description": "Hourly commit counts for each day."
                }
            ],
            "description": "Get hourly commit count for each day in a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/subscribers",
            "url": "/repos/{owner}/{repo}/subscribers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "subscribers",
                    "is_array": true,
                    "type": "object",
                    "description": "List of watchers."
                }
            ],
            "description": "List watchers of a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/tags",
            "url": "/repos/{owner}/{repo}/tags",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "tags",
                    "is_array": true,
                    "type": "object",
                    "description": "List of tags."
                }
            ],
            "description": "List tags for a repository."
        },
        {
            "name": "GET /repos/{owner}/{repo}/topics",
            "url": "/repos/{owner}/{repo}/topics",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "topics",
                    "is_array": true,
                    "type": "string",
                    "description": "List of repository topics."
                }
            ],
            "description": "Get all topics of a repository."
        },
        {
            "name": "GET /repositories",
            "url": "/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of public repositories."
                }
            ],
            "description": "List public repositories."
        },
        {
            "name": "GET /search/labels",
            "url": "/search/labels",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "query",
                    "required": true,
                    "type": "string",
                    "description": "Search query for labels."
                }
            ],
            "output_parameters": [
                {
                    "name": "labels",
                    "is_array": true,
                    "type": "object",
                    "description": "List of labels matching the search."
                }
            ],
            "description": "Search for labels."
        },
        {
            "name": "PUT /user/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/user/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Add a repository to a user's codespace secrets."
        },
        {
            "name": "DELETE /user/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "url": "/user/codespaces/secrets/{secret\\_name}/repositories/{repository\\_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "secret\\_name",
                    "required": true,
                    "type": "string",
                    "description": "Secret name."
                },
                {
                    "name": "repository\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Repository ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the operation."
                }
            ],
            "description": "Remove a repository from a user's codespace secrets."
        },
        {
            "name": "GET /user/installations/{installation\\_id}/repositories",
            "url": "/user/installations/{installation\\_id}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "installation\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Installation ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories accessible to the installation."
                }
            ],
            "description": "List repositories accessible to an installation."
        },
        {
            "name": "GET /user/repos",
            "url": "/user/repos",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories for the authenticated user."
                }
            ],
            "description": "List repositories for the authenticated user."
        },
        {
            "name": "GET /user/starred/{owner}/{repo}",
            "url": "/user/starred/{owner}/{repo}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "starred",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the repository is starred by the user."
                }
            ],
            "description": "Check if a repository is starred by the authenticated user."
        },
        {
            "name": "PUT /user/starred/{owner}/{repo}",
            "url": "/user/starred/{owner}/{repo}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the star operation."
                }
            ],
            "description": "Star a repository for the authenticated user."
        },
        {
            "name": "DELETE /user/starred/{owner}/{repo}",
            "url": "/user/starred/{owner}/{repo}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the unstar operation."
                }
            ],
            "description": "Unstar a repository for the authenticated user."
        },
        {
            "name": "GET /users/{username}/repos",
            "url": "/users/{username}/repos",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "Username."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of user repositories."
                }
            ],
            "description": "List repositories for a user."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages",
            "url": "/repos/{owner}/{repo}/pages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "pages",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the GitHub Pages site."
                }
            ],
            "description": "Get information about a GitHub Pages site."
        },
        {
            "name": "PUT /repos/{owner}/{repo}/pages",
            "url": "/repos/{owner}/{repo}/pages",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "source",
                    "required": true,
                    "type": "object",
                    "description": "Source configuration for GitHub Pages."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the update."
                }
            ],
            "description": "Configure or update a GitHub Pages site."
        },
        {
            "name": "DELETE /repos/{owner}/{repo}/pages",
            "url": "/repos/{owner}/{repo}/pages",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status of the delete operation."
                }
            ],
            "description": "Delete a GitHub Pages site."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/builds",
            "url": "/repos/{owner}/{repo}/pages/builds",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "builds",
                    "is_array": true,
                    "type": "object",
                    "description": "List of build objects."
                }
            ],
            "description": "List GitHub Pages builds for a repository."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/deployments",
            "url": "/repos/{owner}/{repo}/pages/deployments",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "deployments",
                    "is_array": true,
                    "type": "object",
                    "description": "List of deployment objects."
                }
            ],
            "description": "Create a GitHub Pages deployment."
        },
        {
            "name": "POST /repos/{owner}/{repo}/pages/deployments/{pages\\_deployment\\_id}/cancel",
            "url": "/repos/{owner}/{repo}/pages/deployments/{pages\\_deployment\\_id}/cancel",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pages\\_deployment\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Deployment ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Cancellation status."
                }
            ],
            "description": "Cancel a GitHub Pages deployment."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/health",
            "url": "/repos/{owner}/{repo}/pages/health",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "health_status",
                    "is_array": false,
                    "type": "string",
                    "description": "DNS health check status."
                }
            ],
            "description": "Get DNS health check status for GitHub Pages."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages",
            "url": "/repos/{owner}/{repo}/pages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "pages",
                    "is_array": false,
                    "type": "object",
                    "description": "GitHub Pages site details."
                }
            ],
            "description": "Get GitHub Pages site details."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds",
            "url": "/repos/{owner}/{repo}/pages/builds",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "builds",
                    "is_array": true,
                    "type": "object",
                    "description": "List of build objects."
                }
            ],
            "description": "List GitHub Pages builds."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds/latest",
            "url": "/repos/{owner}/{repo}/pages/builds/latest",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                }
            ],
            "output_parameters": [
                {
                    "name": "latest_build",
                    "is_array": false,
                    "type": "object",
                    "description": "Latest build details."
                }
            ],
            "description": "Get latest GitHub Pages build."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/builds/{build\\_id}",
            "url": "/repos/{owner}/{repo}/pages/builds/{build\\_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "build\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Build ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "build",
                    "is_array": false,
                    "type": "object",
                    "description": "Build details."
                }
            ],
            "description": "Get details of a specific build."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/deployments/{pages\\_deployment\\_id}",
            "url": "/repos/{owner}/{repo}/pages/deployments/{pages\\_deployment\\_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "pages\\_deployment\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Deployment ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "deployment",
                    "is_array": false,
                    "type": "object",
                    "description": "Deployment details."
                }
            ],
            "description": "Get deployment status of a GitHub Pages deployment."
        },
        {
            "name": "PATCH /repos/{owner}/{repo}/pages/{page\\_id}",
            "url": "/repos/{owner}/{repo}/pages/{page\\_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "page\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Page ID."
                },
                {
                    "name": "configuration",
                    "required": true,
                    "type": "object",
                    "description": "Configuration for the GitHub Pages page."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Update status."
                }
            ],
            "description": "Update a GitHub Pages site."
        },
        {
            "name": "GET /repos/{owner}/{repo}/pages/{page\\_id}",
            "url": "/repos/{owner}/{repo}/pages/{page\\_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "page\\_id",
                    "required": true,
                    "type": "integer",
                    "description": "Page ID."
                }
            ],
            "output_parameters": [
                {
                    "name": "page",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the GitHub Pages page."
                }
            ],
            "description": "Get details of a GitHub Pages site."
        },
        {
            "name": "Block a user",
            "url": "/user/blocks/{username}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user to block."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to block a user by username."
        },
        {
            "name": "Unblock a user",
            "url": "/user/blocks/{username}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username of the user to unblock."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to unblock a user by username."
        },
        {
            "name": "List users blocked by the authenticated user",
            "url": "/user/blocks",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "users",
                    "is_array": true,
                    "type": "string",
                    "description": "A list of usernames blocked by the authenticated user."
                }
            ],
            "description": "Retrieve the list of users blocked by the authenticated user."
        },
        {
            "name": "Check if a user is blocked by the authenticated user",
            "url": "/user/blocks/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "username",
                    "required": true,
                    "type": "string",
                    "description": "The username to check for block status."
                }
            ],
            "output_parameters": [
                {
                    "name": "blocked",
                    "is_array": false,
                    "type": "boolean",
                    "description": "True if the user is blocked, otherwise false."
                }
            ],
            "description": "Check if a specific user is blocked by the authenticated user."
        },
        {
            "name": "Create or update a secret for the authenticated user",
            "url": "/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "secret_value",
                    "required": true,
                    "type": "string",
                    "description": "The value of the secret."
                }
            ],
            "output_parameters": [],
            "description": "Create or update a secret for the authenticated user."
        },
        {
            "name": "Delete a secret for the authenticated user",
            "url": "/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret to delete."
                }
            ],
            "output_parameters": [],
            "description": "Delete a secret for the authenticated user."
        },
        {
            "name": "Set selected repositories for a user secret",
            "url": "/user/codespaces/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "A list of repositories."
                }
            ],
            "output_parameters": [],
            "description": "Set repositories associated with a user secret."
        },
        {
            "name": "Add a selected repository to a user secret",
            "url": "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Add a repository to a user secret."
        },
        {
            "name": "Remove a selected repository from a user secret",
            "url": "/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "The name of the secret."
                },
                {
                    "name": "repository_id",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the repository."
                }
            ],
            "output_parameters": [],
            "description": "Remove a repository from a user secret."
        },
        {
            "name": "List secrets for the authenticated user",
            "url": "/user/codespaces/secrets",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "secrets",
                    "is_array": true,
                    "type": "string",
                    "description": "List of secrets."
                }
            ],
            "description": "Retrieve all secrets for the authenticated user."
        },
        {
            "name": "Get public key for the authenticated user",
            "url": "/user/codespaces/secrets/public-key",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "key",
                    "is_array": false,
                    "type": "string",
                    "description": "Public key."
                }
            ],
            "description": "Retrieve the public key for encrypting secrets."
        },
        {
            "name": "Get a secret for the authenticated user",
            "url": "/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "secret",
                    "is_array": false,
                    "type": "string",
                    "description": "The secret's value."
                }
            ],
            "description": "Retrieve a specific secret for the authenticated user."
        },
        {
            "name": "List selected repositories for a user secret",
            "url": "/user/codespaces/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "secret_name",
                    "required": true,
                    "type": "string",
                    "description": "Name of the secret."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "integer",
                    "description": "List of repository IDs."
                }
            ],
            "description": "List repositories associated with a user secret."
        },
        {
            "name": "Permissions required for fine-grained personal access tokens",
            "url": "https://docs.github.com/en/rest/authentication/permissions-required-for-fine-grained-personal-access-tokens-#0",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "API documentation detailing the permissions needed for various API endpoints when using fine-grained personal access tokens."
        },
        {
            "name": "Create an attestation",
            "url": "https://api.github.com/repos/{owner}/{repo}/attestations",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "Subject digest",
                    "required": true,
                    "type": "string",
                    "description": "Digest of the attestation subject."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "Status message of the operation."
                }
            ],
            "description": "Endpoint to create an attestation in a repository."
        },
        {
            "name": "Get attestation",
            "url": "https://api.github.com/repos/{owner}/{repo}/attestations/{subject_digest}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "owner",
                    "required": true,
                    "type": "string",
                    "description": "Repository owner username or organization name."
                },
                {
                    "name": "repo",
                    "required": true,
                    "type": "string",
                    "description": "Repository name."
                },
                {
                    "name": "subject_digest",
                    "required": true,
                    "type": "string",
                    "description": "Digest of the subject to retrieve the attestation for."
                }
            ],
            "output_parameters": [
                {
                    "name": "attestation",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the attestation."
                }
            ],
            "description": "Endpoint to retrieve an attestation for a given subject digest."
        },
        {
            "name": "List repository security advisories for an organization",
            "url": "https://api.github.com/orgs/{org}/security-advisories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a repository security advisory",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Privately report a security vulnerability",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories/reports",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a repository security advisory",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Request a CVE for a repository security advisory",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List repository security advisories",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a repository security advisory",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a temporary private fork of a security advisory",
            "url": "https://api.github.com/repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Update a secret scanning alert",
            "url": "https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List secret scanning alerts for an organization",
            "url": "https://api.github.com/orgs/{org}/secret-scanning/alerts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List secret scanning alerts for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a secret scanning alert",
            "url": "https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List locations for a secret scanning alert",
            "url": "https://api.github.com/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get secret scanning scan history for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/secret-scanning/scan-history",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create or update a repository secret",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a repository secret",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List organization secrets",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/organization-secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List repository secrets",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a repository public key",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a repository secret",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create or update a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List organization-level variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/organization-variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List repository variables",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a repository variable",
            "url": "https://api.github.com/repos/{owner}/{repo}/actions/variables/{name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a webhook configuration for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/config",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Redeliver a delivery for a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List repository webhooks",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a webhook configuration for a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/config",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List deliveries for a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/deliveries",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a delivery for a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Ping a repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/pings",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Test the push repository webhook",
            "url": "https://api.github.com/repos/{owner}/{repo}/hooks/{hook_id}/tests",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create or update a file content in a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/contents/{path}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Delete a file in a repository",
            "url": "https://api.github.com/repos/{owner}/{repo}/contents/{path}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Create a reference in git",
            "url": "https://api.github.com/repos/{owner}/{repo}/git/refs",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Update a reference in git",
            "url": "https://api.github.com/repos/{owner}/{repo}/git/refs/{ref}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Create a release",
            "url": "https://api.github.com/repos/{owner}/{repo}/releases",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Block a user",
            "url": "https://api.github.com/user/blocks/{username}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unblock a user",
            "url": "https://api.github.com/user/blocks/{username}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List users blocked by the authenticated user",
            "url": "https://api.github.com/user/blocks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Check if a user is blocked by the authenticated user",
            "url": "https://api.github.com/user/blocks/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create or update a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set repositories for a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add a repository to a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "Remove a repository from a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}/repositories/{repository_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Multiple permissions are required, or a different permission may be used. For more information, see the documentation."
        },
        {
            "name": "List secrets for the authenticated user",
            "url": "https://api.github.com/user/codespaces/secrets",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public key for the authenticated user",
            "url": "https://api.github.com/user/codespaces/secrets/public-key",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a secret for the authenticated user",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List selected repositories for a user secret",
            "url": "https://api.github.com/user/codespaces/secrets/{secret_name}/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update primary email visibility",
            "url": "https://api.github.com/user/email/visibility",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add an email address",
            "url": "https://api.github.com/user/emails",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete an email address",
            "url": "https://api.github.com/user/emails",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List email addresses for the authenticated user",
            "url": "https://api.github.com/user/emails",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public email addresses for the authenticated user",
            "url": "https://api.github.com/user/public_emails",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Follow a user",
            "url": "https://api.github.com/user/following/{username}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unfollow a user",
            "url": "https://api.github.com/user/following/{username}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List followers of the authenticated user",
            "url": "https://api.github.com/user/followers",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List who the authenticated user is following",
            "url": "https://api.github.com/user/following",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Check if a person is followed by the authenticated user",
            "url": "https://api.github.com/user/following/{username}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the authenticated user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the authenticated user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the authenticated user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the authenticated user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key for the authenticated user",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key for the authenticated user",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys for the authenticated user",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key for the authenticated user",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions for a user",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages for a user",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing for a user",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report for a user",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key for the user",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key for the user",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys for the user",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key for the user",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update authenticated user's profile",
            "url": "https://api.github.com/user",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Add social account for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete social accounts for authenticated user",
            "url": "https://api.github.com/user/social_accounts",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List GPG keys for the user",
            "url": "https://api.github.com/user/gpg_keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a GPG key for the user",
            "url": "https://api.github.com/user/gpg_keys/{gpg_key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist",
            "url": "https://api.github.com/gists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist",
            "url": "https://api.github.com/gists/{gist_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Update a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a gist comment",
            "url": "https://api.github.com/gists/{gist_id}/comments/{comment_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Fork a gist",
            "url": "https://api.github.com/gists/{gist_id}/forks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Star a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Unstar a gist",
            "url": "https://api.github.com/gists/{gist_id}/star",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Create a public SSH key",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Delete a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public SSH keys",
            "url": "https://api.github.com/user/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get a public SSH key",
            "url": "https://api.github.com/user/keys/{key_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "List public keys for a user",
            "url": "https://api.github.com/users/{username}/keys",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Set interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Remove interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get interaction limits",
            "url": "https://api.github.com/user/interaction-limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Actions",
            "url": "https://api.github.com/users/{username}/settings/billing/actions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing report for GitHub Packages",
            "url": "https://api.github.com/users/{username}/settings/billing/packages",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get shared storage billing",
            "url": "https://api.github.com/users/{username}/settings/billing/shared-storage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "Get billing usage report",
            "url": "https://api.github.com/users/{username}/settings/billing/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": ""
        },
        {
            "name": "GET /orgs/{org}/actions/cache/usage",
            "url": "/orgs/{org}/actions/cache/usage",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "total_usage_bytes",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total cache usage in bytes for the organization."
                },
                {
                    "name": "per_repository_usage_bytes",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with their cache usage."
                }
            ],
            "description": "Get the total and per-repository cache usage for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/cache/usage-by-repository",
            "url": "/orgs/{org}/actions/cache/usage-by-repository",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "List of repositories with cache usage details."
                }
            ],
            "description": "List repositories with their cache usage details for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners",
            "url": "/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "runners",
                    "is_array": true,
                    "type": "object",
                    "description": "List of hosted runners for the organization."
                }
            ],
            "description": "List GitHub-hosted runners available for an organization."
        },
        {
            "name": "POST /orgs/{org}/actions/hosted-runners",
            "url": "/orgs/{org}/actions/hosted-runners",
            "args_in_url": true,
            "method": "INSERT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "The organization name"
                },
                {
                    "name": "runner_name",
                    "required": true,
                    "type": "string",
                    "description": "Name for the new hosted runner"
                },
                {
                    "name": "runner_image",
                    "required": true,
                    "type": "string",
                    "description": "Image of the runner to use"
                }
            ],
            "output_parameters": [
                {
                    "name": "runner_id",
                    "is_array": false,
                    "type": "integer",
                    "description": "ID of the created runner."
                }
            ],
            "description": "Create a new GitHub-hosted runner for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/images/github-owned",
            "url": "/orgs/{org}/actions/hosted-runners/images/github-owned",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "string",
                    "description": "Available GitHub-owned images for hosted runners."
                }
            ],
            "description": "List GitHub-owned images for hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/images/partner",
            "url": "/orgs/{org}/actions/hosted-runners/images/partner",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "string",
                    "description": "Partner images available for hosted runners."
                }
            ],
            "description": "List partner images for hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/limits",
            "url": "/orgs/{org}/actions/hosted-runners/limits",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "limits",
                    "is_array": false,
                    "type": "object",
                    "description": "Limits for hosted runners in the organization."
                }
            ],
            "description": "Get limits on GitHub-hosted runners for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/machine-sizes",
            "url": "/orgs/{org}/actions/hosted-runners/machine-sizes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "machine_sizes",
                    "is_array": true,
                    "type": "string",
                    "description": "Available machine sizes for hosted runners."
                }
            ],
            "description": "List machine sizes for GitHub-hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/platforms",
            "url": "/orgs/{org}/actions/hosted-runners/platforms",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "platforms",
                    "is_array": true,
                    "type": "string",
                    "description": "Supported platforms for hosted runners."
                }
            ],
            "description": "List platforms for GitHub-hosted runners in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner"
                }
            ],
            "output_parameters": [
                {
                    "name": "runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Details of the specified hosted runner."
                }
            ],
            "description": "Get details of a specific GitHub-hosted runner in an organization."
        },
        {
            "name": "PATCH /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "UPDATE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner"
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "Updated name of the runner"
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_runner",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated details of the runner."
                }
            ],
            "description": "Update details of a specific GitHub-hosted runner in an organization."
        },
        {
            "name": "DELETE /orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "url": "/orgs/{org}/actions/hosted-runners/{hosted_runner_id}",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "hosted_runner_id",
                    "required": true,
                    "type": "integer",
                    "description": "ID of the runner to delete"
                }
            ],
            "output_parameters": [],
            "description": "Delete a specific GitHub-hosted runner from an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/oidc/customization/sub",
            "url": "/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "customization_template",
                    "is_array": false,
                    "type": "object",
                    "description": "The OIDC subject claim customization template."
                }
            ],
            "description": "Get the customization template for an OIDC subject claim in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/oidc/customization/sub",
            "url": "/orgs/{org}/actions/oidc/customization/sub",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "template",
                    "required": true,
                    "type": "object",
                    "description": "The customization template to set."
                }
            ],
            "output_parameters": [
                {
                    "name": "updated_template",
                    "is_array": false,
                    "type": "object",
                    "description": "Updated OIDC subject claim customization template."
                }
            ],
            "description": "Set the customization template for an OIDC subject claim in an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/permissions",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "permissions",
                    "is_array": true,
                    "type": "string",
                    "description": "List of permissions for the organization."
                }
            ],
            "description": "Get GitHub Actions permissions for an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions",
            "url": "/orgs/{org}/actions/permissions",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "permissions",
                    "required": true,
                    "type": "object",
                    "description": "Permissions settings."
                }
            ],
            "output_parameters": [
                {
                    "name": "permissions",
                    "is_array": true,
                    "type": "string",
                    "description": "Updated list of permissions."
                }
            ],
            "description": "Set GitHub Actions permissions for an organization."
        },
        {
            "name": "GET /orgs/{org}/actions/permissions/repositories",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Repositories with Actions enabled."
                }
            ],
            "description": "List repositories with GitHub Actions enabled in an organization."
        },
        {
            "name": "PUT /orgs/{org}/actions/permissions/repositories",
            "url": "/orgs/{org}/actions/permissions/repositories",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "org",
                    "required": true,
                    "type": "string",
                    "description": "Organization name"
                },
                {
                    "name": "repositories",
                    "required": true,
                    "type": "object",
                    "description": "Repositories to enable."
                }
            ],
            "output_parameters": [
                {
                    "name": "repositories",
                    "is_array": true,
                    "type": "object",
                    "description": "Repositories now with Actions enabled."
                }
            ],
            "description": "Enable Actions for repositories in an organization."
        }
    ],
    "general_info": [
        {
            "var_name": "owner",
            "type": "str",
            "default_val": "",
            "explanation": "Repository owner, used in API path or API requests, sometimes referring to an organization or user."
        },
        {
            "var_name": "repo",
            "type": "str",
            "default_val": "",
            "explanation": "Repository name, used in API path or requests."
        },
        {
            "var_name": "artifact_id",
            "type": "int",
            "default_val": "",
            "explanation": "Identifier for a specific artifact."
        },
        {
            "var_name": "run_id",
            "type": "int",
            "default_val": "",
            "explanation": "Workflow run ID for listing artifacts, or workflow run identifier in API calls."
        },
        {
            "var_name": "archive_format",
            "type": "str",
            "default_val": "",
            "explanation": "Format of archive to download, e.g., 'zip'."
        },
        {
            "var_name": "accept",
            "type": "str",
            "default_val": "application/vnd.github+json",
            "explanation": "HTTP header to specify media type or content negotiation, often defaulting to 'application/vnd.github+json'."
        },
        {
            "var_name": "org",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name associated with the repository or API request, sometimes optional or used for specific endpoints."
        },
        {
            "var_name": "name",
            "type": "str",
            "default_val": "",
            "explanation": "Variable or resource name, context-dependent, such as environment variable name or resource name."
        },
        {
            "var_name": "value",
            "type": "str",
            "default_val": "",
            "explanation": "Variable value, used in configurations or requests."
        },
        {
            "var_name": "visibility",
            "type": "str",
            "default_val": "",
            "explanation": "Visibility setting: all, private, or selected, for repositories or resources."
        },
        {
            "var_name": "selected_repository_ids",
            "type": "int",
            "default_val": "",
            "explanation": "Repository IDs for 'selected' visibility or filtering."
        },
        {
            "var_name": "environment_name",
            "type": "str",
            "default_val": "",
            "explanation": "Name of the environment, such as a deployment environment."
        },
        {
            "var_name": "secret_name",
            "type": "str",
            "default_val": "",
            "explanation": "Name of a secret stored or managed."
        },
        {
            "var_name": "repository_id",
            "type": "int",
            "default_val": "",
            "explanation": "Repository ID used in API calls for identification."
        },
        {
            "var_name": "secret",
            "type": "str",
            "default_val": "",
            "explanation": "Secret value, sensitive data."
        },
        {
            "var_name": "key_id",
            "type": "str",
            "default_val": "",
            "explanation": "Key ID used for encryption or identification of keys."
        },
        {
            "var_name": "default_workflow_permissions",
            "type": "str",
            "default_val": "",
            "explanation": "Permission level for default workflows: 'read' or 'write'."
        },
        {
            "var_name": "can_approve_pull_request_reviews",
            "type": "str",
            "default_val": "",
            "explanation": "Boolean string indicating if pull request reviews can be approved."
        },
        {
            "var_name": "ref",
            "type": "str",
            "default_val": "",
            "explanation": "Git reference, such as a branch or tag."
        },
        {
            "var_name": "sort",
            "type": "str",
            "default_val": "",
            "explanation": "Property to sort results by."
        },
        {
            "var_name": "direction",
            "type": "str",
            "default_val": "",
            "explanation": "Sort direction, either 'asc' or 'desc'."
        },
        {
            "var_name": "access_level",
            "type": "str",
            "default_val": "",
            "explanation": "Access level: 'none', 'user', or 'organization'."
        },
        {
            "var_name": "include_claim_keys",
            "type": "str",
            "default_val": "[]",
            "explanation": "Array of claim keys for template or set operations."
        },
        {
            "var_name": "use_default",
            "type": "str",
            "default_val": "false",
            "explanation": "Boolean indicator (as string) if default template or configuration should be used."
        },
        {
            "var_name": "job_id",
            "type": "int",
            "default_val": "",
            "explanation": "Unique identifier of a job in workflows."
        },
        {
            "var_name": "workflow_id",
            "type": "str",
            "default_val": "",
            "explanation": "ID or filename of a workflow."
        },
        {
            "var_name": "actor",
            "type": "str",
            "default_val": "None",
            "explanation": "Username who initiated or created the workflow run."
        },
        {
            "var_name": "branch",
            "type": "str",
            "default_val": "None",
            "explanation": "Branch name associated with the workflow run."
        },
        {
            "var_name": "event",
            "type": "str",
            "default_val": "None",
            "explanation": "Event that triggered the workflow, e.g., push, pull_request."
        },
        {
            "var_name": "status",
            "type": "str",
            "default_val": "None",
            "explanation": "Status of the workflow run, e.g., in_progress, completed."
        },
        {
            "var_name": "created",
            "type": "str",
            "default_val": "None",
            "explanation": "Creation date filter for listing resources."
        },
        {
            "var_name": "exclude_pull_requests",
            "type": "str",
            "default_val": "false",
            "explanation": "Flag to exclude pull request runs if true."
        },
        {
            "var_name": "check_suite_id",
            "type": "int",
            "default_val": "None",
            "explanation": "Filter by check suite ID."
        },
        {
            "var_name": "head_sha",
            "type": "str",
            "default_val": "None",
            "explanation": "Filter by associated commit SHA."
        },
        {
            "var_name": "hosted_runner_id",
            "type": "int",
            "default_val": "",
            "explanation": "Identifier for a specific hosted runner."
        },
        {
            "var_name": "name",
            "type": "str",
            "default_val": "",
            "explanation": "Name of resource, runner, or entity being created or managed."
        },
        {
            "var_name": "status",
            "type": "str",
            "default_val": "",
            "explanation": "Status of the resource, e.g., 'active', 'offline'."
        },
        {
            "var_name": "template",
            "type": "str",
            "default_val": "",
            "explanation": "OIDC customization template data."
        },
        {
            "var_name": "organization",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name, context-dependent."
        },
        {
            "var_name": "organization",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name, possibly for different contexts."
        },
        {
            "var_name": "organization",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name, for API requests."
        },
        {
            "var_name": "team_slug",
            "type": "str",
            "default_val": "",
            "explanation": "Slug identifier for a team."
        },
        {
            "var_name": "user_id",
            "type": "str",
            "default_val": "",
            "explanation": "User identifier for API or resource."
        },
        {
            "var_name": "configuration_id",
            "type": "str",
            "default_val": "",
            "explanation": "Identifier for a security or configuration setting."
        },
        {
            "var_name": "user_email_visibility",
            "type": "str",
            "default_val": "",
            "explanation": "Patch endpoint to set primary email visibility."
        },
        {
            "var_name": "user_emails",
            "type": "str",
            "default_val": "",
            "explanation": "Add email address for authenticated user."
        },
        {
            "var_name": "user_emails_delete",
            "type": "str",
            "default_val": "",
            "explanation": "Delete an email address of the authenticated user."
        },
        {
            "var_name": "user_emails_list",
            "type": "str",
            "default_val": "",
            "explanation": "List email addresses of the authenticated user."
        },
        {
            "var_name": "user_emails_public",
            "type": "str",
            "default_val": "",
            "explanation": "List public email addresses for user."
        },
        {
            "var_name": "user_follow",
            "type": "str",
            "default_val": "",
            "explanation": "Follow a user."
        },
        {
            "var_name": "user_unfollow",
            "type": "str",
            "default_val": "",
            "explanation": "Unfollow a user."
        },
        {
            "var_name": "user_followers",
            "type": "str",
            "default_val": "",
            "explanation": "List followers of the authenticated user."
        },
        {
            "var_name": "user_following",
            "type": "str",
            "default_val": "",
            "explanation": "List users the authenticated user follows."
        },
        {
            "var_name": "gpg_key_create",
            "type": "str",
            "default_val": "",
            "explanation": "Create a GPG key."
        },
        {
            "var_name": "gpg_key_delete",
            "type": "str",
            "default_val": "",
            "explanation": "Delete a GPG key."
        },
        {
            "var_name": "gpg_keys_list",
            "type": "str",
            "default_val": "",
            "explanation": "List GPG keys."
        },
        {
            "var_name": "gpg_key_get",
            "type": "str",
            "default_val": "",
            "explanation": "Get a specific GPG key."
        },
        {
            "var_name": "gist_create",
            "type": "str",
            "default_val": "",
            "explanation": "Create a gist."
        },
        {
            "var_name": "gist_update",
            "type": "str",
            "default_val": "",
            "explanation": "Update a gist."
        },
        {
            "var_name": "gist_delete",
            "type": "str",
            "default_val": "",
            "explanation": "Delete a gist."
        },
        {
            "var_name": "gist_comment_create",
            "type": "str",
            "default_val": "",
            "explanation": "Create a comment on a gist."
        },
        {
            "var_name": "gist_comment_update",
            "type": "str",
            "default_val": "",
            "explanation": "Update a gist comment."
        },
        {
            "var_name": "gist_comment_delete",
            "type": "str",
            "default_val": "",
            "explanation": "Delete a gist comment."
        },
        {
            "var_name": "gist_fork",
            "type": "str",
            "default_val": "",
            "explanation": "Fork a gist."
        },
        {
            "var_name": "gist_star",
            "type": "str",
            "default_val": "",
            "explanation": "Star a gist."
        },
        {
            "var_name": "gist_unstar",
            "type": "str",
            "default_val": "",
            "explanation": "Unstar a gist."
        },
        {
            "var_name": "ssh_signing_key_create",
            "type": "str",
            "default_val": "",
            "explanation": "Create an SSH signing key."
        },
        {
            "var_name": "ssh_signing_key_delete",
            "type": "str",
            "default_val": "",
            "explanation": "Delete an SSH signing key."
        },
        {
            "var_name": "ssh_signing_keys_list",
            "type": "str",
            "default_val": "",
            "explanation": "List SSH signing keys."
        },
        {
            "var_name": "ssh_signing_key_get",
            "type": "str",
            "default_val": "",
            "explanation": "Get an SSH signing key."
        },
        {
            "var_name": "repository_star",
            "type": "str",
            "default_val": "",
            "explanation": "Star a repository."
        },
        {
            "var_name": "repository_unstar",
            "type": "str",
            "default_val": "",
            "explanation": "Unstar a repository."
        },
        {
            "var_name": "repository_watch",
            "type": "str",
            "default_val": "",
            "explanation": "Watch a repository."
        },
        {
            "var_name": "repository_unwatch",
            "type": "str",
            "default_val": "",
            "explanation": "Unwatch a repository."
        },
        {
            "var_name": "api_version",
            "type": "str",
            "default_val": "2022-11-28",
            "explanation": "The API version being used, can be referenced in API calls or documentation."
        },
        {
            "var_name": "base_url",
            "type": "str",
            "default_val": "https://docs.github.com/en/rest",
            "explanation": "Base URL for the GitHub REST API documentation."
        },
        {
            "var_name": "subject_digest",
            "type": "str",
            "default_val": "",
            "explanation": "Digest identifier for the subject of the attestation."
        },
        {
            "var_name": "runner_id",
            "type": "int",
            "default_val": "",
            "explanation": "ID of the runner."
        },
        {
            "var_name": "hosted_runner_id",
            "type": "int",
            "default_val": "",
            "explanation": "ID of the hosted runner."
        },
        {
            "var_name": "organization",
            "type": "str",
            "default_val": "",
            "explanation": "Organization name."
        },
        {
            "var_name": "template",
            "type": "str",
            "default_val": "",
            "explanation": "Configuration template data."
        }
    ]
}