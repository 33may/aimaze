{
    "endpoints": [
        {
            "name": "Add Item to Playback Queue",
            "url": "https://api.spotify.com/v1/me/player/queue",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "uri",
                    "required": true,
                    "type": "string",
                    "description": "The URI of the item to add to the queue. Must be a track or an episode URI. Example: 'spotify:track:4iV5W9uYEdYUVa79Axb7Rh'"
                },
                {
                    "name": "device_id",
                    "required": false,
                    "type": "string",
                    "description": "The ID of the device to target. If not provided, the currently active device will be used. Example: '0d1841b0976bae2a3a310dd74c0f3df354899bc8'"
                }
            ],
            "output_parameters": [],
            "description": "Adds an item (track or episode) to the user's playback queue. Requires 'user-modify-playback-state' scope."
        },
        {
            "name": "Get Several Tracks",
            "url": "https://api.spotify.com/v1/tracks",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code to filter tracks available in that market. Example: 'ES'"
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for the tracks. Maximum: 50 IDs. Example: '7ouMYWpwJ422jRcDASZB7P,1301WleyT98MSxVHPZCA6M'"
                }
            ],
            "output_parameters": [
                {
                    "name": "tracks",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of track objects, each containing detailed information about a track."
                }
            ],
            "description": "Retrieves information for multiple tracks based on their Spotify IDs. Requires 'user-read-private' or 'user-read-email' scope."
        },
        {
            "name": "Check if User Follows Playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers/contains",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist. Example: '3cEYpjA9oz9GiPac4AsH4n'"
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list containing the Spotify Username of the current user. Maximum: 1 ID. Example: 'jmperezperez'"
                }
            ],
            "output_parameters": [
                {
                    "name": "follows",
                    "is_array": true,
                    "type": "boolean",
                    "description": "An array containing a single boolean indicating if the user follows the playlist."
                }
            ],
            "description": "Checks if the current user is following the specified playlist. Requires 'playlist-read-private' scope."
        },
        {
            "name": "Unfollow Artists or Users",
            "url": "https://api.spotify.com/v1/me/followingtype",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "type",
                    "required": true,
                    "type": "string",
                    "description": "The ID type: either `artist` or `user`. Allowed values: \"artist\", \"user\"."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the artist or user Spotify IDs. Example: `ids=74ASZWbe4lXaubB36ztrGX,08td7MxkoHQkXnWAYD8d6Q`. Max of 50 IDs."
                },
                {
                    "name": "body",
                    "required": false,
                    "type": "object",
                    "description": "Request body supporting a JSON array of IDs."
                }
            ],
            "output_parameters": [],
            "description": "Remove the current user as a follower of one or more artists or other Spotify users."
        },
        {
            "name": "Get Available Genre Seeds",
            "url": "https://api.spotify.com/documentation/web-api/reference/check-users-saved-shows",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "genres",
                    "is_array": true,
                    "type": "string",
                    "description": "An array of available genre seed parameter values for recommendations."
                }
            ],
            "description": "Retrieve a list of available genre seed parameter values for recommendations, deprecated."
        },
        {
            "name": "Search for Item",
            "url": "https://api.spotify.com/v1/search",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "q",
                    "required": true,
                    "type": "string",
                    "description": "Your search query. Use field filters to narrow down your search. Available filters include 'album', 'artist', 'track', 'year', 'upc', 'tag:hipster', 'tag:new', 'isrc', and 'genre'. The query supports URL encoding."
                },
                {
                    "name": "type",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of item types to search across. Allowed values: \"album\", \"artist\", \"playlist\", \"track\", \"show\", \"episode\", \"audiobook\"."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code to filter results by market. If not provided, default market or user\u2019s country setting is used."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of results to return per item type. Default is 20. Range: 0-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first result to return. Useful for paging. Default is 0. Range: 0-1000."
                },
                {
                    "name": "include_external",
                    "required": false,
                    "type": "string",
                    "description": "Set to 'audio' to include externally hosted audio content in the results. Allowed value: \"audio\"."
                }
            ],
            "output_parameters": [
                {
                    "name": "tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "The result object containing search hits for various item types."
                }
            ],
            "description": "Performs a search across Spotify catalogs, matching the provided query string with specified item types."
        },
        {
            "name": "Get Playlist Cover Image",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/images",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist. Example: '3cEYpjA9oz9GiPac4AsH4n'."
                }
            ],
            "output_parameters": [
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of image objects representing the playlist's cover images."
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "The source URL of the image. Example: 'https://i.scdn.co/image/ab67616d00001e02ff9ca10b55ce82ae553c8228'."
                },
                {
                    "name": "height",
                    "is_array": false,
                    "type": "integer",
                    "description": "The height of the image in pixels. Nullable. Example: 300."
                },
                {
                    "name": "width",
                    "is_array": false,
                    "type": "integer",
                    "description": "The width of the image in pixels. Nullable. Example: 300."
                }
            ],
            "description": "Retrieves the current images associated with a specific playlist, such as cover art."
        },
        {
            "name": "Get user's saved episodes",
            "url": "https://api.spotify.com/v1/me/episodes",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code, e.g., 'ES'. If specified, only content available in that market is returned. If omitted, defaults to user's country."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default is 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default is 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint returning the full result."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of results or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of saved episodes available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of saved episode objects."
                }
            ],
            "description": "Retrieves a list of episodes saved in the current user's library."
        },
        {
            "name": "Check if episodes are saved in user's library",
            "url": "https://api.spotify.com/v1/me/episodes/contains",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify episode IDs, maximum 50. Example: '77o6BIVlYM3msb4MMIL1jH,0Q86acNRm6V9GYx55SXKwf'."
                }
            ],
            "output_parameters": [
                {
                    "name": "",
                    "is_array": true,
                    "type": "boolean",
                    "description": "Array of booleans indicating if each episode ID is saved (true) or not (false)."
                }
            ],
            "description": "Checks if one or more episodes are saved in the current user's library."
        },
        {
            "name": "Set volume for user's current playback device",
            "url": "https://api.spotify.com/v1/me/player/volume",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "volume_percent",
                    "required": true,
                    "type": "integer",
                    "description": "Volume to set, range 0-100."
                },
                {
                    "name": "device_id",
                    "required": false,
                    "type": "string",
                    "description": "ID of the target device. If omitted, the currently active device is used."
                }
            ],
            "output_parameters": [],
            "description": "Sets the volume for the user's current playback device. Works only for Spotify Premium users."
        },
        {
            "name": "Check User's Saved Audiobooks (GET /me/audiobooks/contains)",
            "url": "https://api.spotify.com/v1/me/audiobooks/contains",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for audiobooks. Maximum: 50 IDs. Example: '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ'"
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Number of items to return (default 20, min 1, max 50)."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "boolean",
                    "description": "An array of booleans indicating if each audiobooks ID is saved in the user's library. Example: [false,true]"
                }
            ],
            "description": "Checks if one or more audiobooks are saved in the current user's library. Requires 'user-library-read' scope."
        },
        {
            "name": "Get User's Saved Shows (GET /me/shows)",
            "url": "https://api.spotify.com/v1/me/shows",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default 20, min 1, max 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint returning full result."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to next page of items, or null."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page, or null."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of saved shows."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of saved show objects."
                }
            ],
            "description": "Retrieves a list of shows saved in the current user's library. Requires 'user-library-read' scope."
        },
        {
            "name": "Remove User's Saved Shows (DELETE /me/shows)",
            "url": "https://api.spotify.com/v1/me/shows",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for shows to remove. Maximum: 50 IDs. Example: '5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ'"
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code to specify the market. If not provided, user country will be used."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "object",
                    "description": "Empty response body indicates successful removal."
                }
            ],
            "description": "Deletes one or more shows from the current user's library. Requires 'user-library-modify' scope."
        },
        {
            "name": "Get User's Saved Albums (GET /me/albums)",
            "url": "https://api.spotify.com/v1/me/albums",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default 20, min 1, max 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the full result."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to next page, or null."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The index of the first item in response."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page, or null."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of saved albums."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of saved album objects."
                }
            ],
            "description": "Retrieves a list of albums saved in the current user's library. Requires 'user-library-read' scope."
        },
        {
            "name": "Save Albums for Current User (PUT /me/albums)",
            "url": "https://api.spotify.com/v1/me/albums",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify album IDs to save. Maximum: 20."
                }
            ],
            "output_parameters": [],
            "description": "Saves one or more albums to the current user's library. Requires 'user-library-modify' scope."
        },
        {
            "name": "Remove User's Saved Audiobooks",
            "url": "https://api.spotify.com/v1/me/audiobooks",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for the audiobooks to remove from the user's library. Maximum: 50 IDs. Example: '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ'."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP response status code indicating the result of the operation."
                },
                {
                    "name": "response_message",
                    "is_array": false,
                    "type": "string",
                    "description": "Message indicating the outcome, e.g., 'Audiobooks have been removed from the library'."
                }
            ],
            "description": "Deletes one or more audiobooks from the Spotify user's library using their Spotify IDs. Requires 'user-library-modify' scope."
        },
        {
            "name": "Get New Releases",
            "url": "https://api.spotify.com/v1/browse/new-releases",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default is 20. Min 1, Max 50. Example: 10."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default is 0. Used for paging. Example: 5."
                }
            ],
            "output_parameters": [
                {
                    "name": "albums",
                    "is_array": false,
                    "type": "object",
                    "description": "A paged set of album objects, containing details about the new releases. The object includes fields like 'href', 'limit', 'next', 'offset', 'previous', 'total', and 'items'."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result set."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items returned in this response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The starting index of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of new album releases available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of album objects representing the new releases. Each album object includes fields like 'album_type', 'total_tracks', 'available_markets', 'external_urls', 'href', 'id', 'images', 'name', 'release_date', 'release_date_precision', 'restrictions', 'type', 'uri', and 'artists'."
                }
            ],
            "description": "Retrieves a list of new album releases featured in Spotify. Supports optional paging via 'limit' and 'offset' query parameters."
        },
        {
            "name": "Get Recommendations",
            "url": "https://api.spotify.com/v1/recommendations",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "The target size of the list of recommended tracks. Default: 20. Range: 1 - 100. Example: 10."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code to limit content to a specific market. Example: ES."
                },
                {
                    "name": "seed_artists",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs for seed artists (up to 5). Required if seed_genres and seed_tracks are not set. Example: 4NHQUGzhtTLFvgF5SZesLK."
                },
                {
                    "name": "seed_genres",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of genres (up to 5). Required if seed_artists and seed_tracks are not set. Example: classical,country."
                },
                {
                    "name": "seed_tracks",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs for seed tracks (up to 5). Required if seed_artists and seed_genres are not set. Example: 0c6xIDDpzE81m2q797ordA."
                },
                {
                    "name": "min_acousticness",
                    "required": false,
                    "type": "float",
                    "description": "Minimum acousticness (0.0 - 1.0). Example: 0.2."
                },
                {
                    "name": "max_acousticness",
                    "required": false,
                    "type": "float",
                    "description": "Maximum acousticness (0.0 - 1.0). Example: 0.8."
                },
                {
                    "name": "target_acousticness",
                    "required": false,
                    "type": "float",
                    "description": "Target acousticness (0.0 - 1.0). Example: 0.5."
                },
                {
                    "name": "min_danceability",
                    "required": false,
                    "type": "float",
                    "description": "Minimum danceability (0.0 - 1.0). Example: 0.3."
                },
                {
                    "name": "max_danceability",
                    "required": false,
                    "type": "float",
                    "description": "Maximum danceability (0.0 - 1.0). Example: 0.9."
                },
                {
                    "name": "target_danceability",
                    "required": false,
                    "type": "float",
                    "description": "Target danceability (0.0 - 1.0). Example: 0.6."
                },
                {
                    "name": "min_duration_ms",
                    "required": false,
                    "type": "integer",
                    "description": "Minimum duration in milliseconds. Example: 180000."
                },
                {
                    "name": "max_duration_ms",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum duration in milliseconds. Example: 300000."
                },
                {
                    "name": "target_duration_ms",
                    "required": false,
                    "type": "integer",
                    "description": "Target duration in milliseconds. Example: 240000."
                },
                {
                    "name": "min_energy",
                    "required": false,
                    "type": "float",
                    "description": "Minimum energy (0.0 - 1.0). Example: 0.4."
                },
                {
                    "name": "max_energy",
                    "required": false,
                    "type": "float",
                    "description": "Maximum energy (0.0 - 1.0). Example: 0.8."
                },
                {
                    "name": "target_energy",
                    "required": false,
                    "type": "float",
                    "description": "Target energy (0.0 - 1.0). Example: 0.6."
                },
                {
                    "name": "min_instrumentalness",
                    "required": false,
                    "type": "float",
                    "description": "Minimum instrumentalness (0.0 - 1.0). Example: 0.1."
                },
                {
                    "name": "max_instrumentalness",
                    "required": false,
                    "type": "float",
                    "description": "Maximum instrumentalness (0.0 - 1.0). Example: 0.9."
                },
                {
                    "name": "target_instrumentalness",
                    "required": false,
                    "type": "float",
                    "description": "Target instrumentalness (0.0 - 1.0). Example: 0.5."
                },
                {
                    "name": "min_key",
                    "required": false,
                    "type": "integer",
                    "description": "Minimum key (0 - 11). Example: 0."
                },
                {
                    "name": "max_key",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum key (0 - 11). Example: 5."
                },
                {
                    "name": "target_key",
                    "required": false,
                    "type": "integer",
                    "description": "Target key (0 - 11). Example: 2."
                },
                {
                    "name": "min_liveness",
                    "required": false,
                    "type": "float",
                    "description": "Minimum liveness (0.0 - 1.0). Example: 0.2."
                },
                {
                    "name": "max_liveness",
                    "required": false,
                    "type": "float",
                    "description": "Maximum liveness (0.0 - 1.0). Example: 0.8."
                },
                {
                    "name": "target_liveness",
                    "required": false,
                    "type": "float",
                    "description": "Target liveness (0.0 - 1.0). Example: 0.5."
                },
                {
                    "name": "min_loudness",
                    "required": false,
                    "type": "float",
                    "description": "Minimum loudness (0.0 - 1.0). Example: -0.6."
                },
                {
                    "name": "max_loudness",
                    "required": false,
                    "type": "float",
                    "description": "Maximum loudness (0.0 - 1.0). Example: -0.2."
                },
                {
                    "name": "target_loudness",
                    "required": false,
                    "type": "float",
                    "description": "Target loudness (0.0 - 1.0). Example: -0.4."
                },
                {
                    "name": "min_mode",
                    "required": false,
                    "type": "integer",
                    "description": "Minimum mode (0 or 1). Example: 1."
                },
                {
                    "name": "max_mode",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum mode (0 or 1). Example: 1."
                },
                {
                    "name": "target_mode",
                    "required": false,
                    "type": "integer",
                    "description": "Target mode (0 or 1). Example: 1."
                },
                {
                    "name": "min_popularity",
                    "required": false,
                    "type": "integer",
                    "description": "Minimum popularity (0 - 100). Example: 50."
                },
                {
                    "name": "max_popularity",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum popularity (0 - 100). Example: 80."
                },
                {
                    "name": "target_popularity",
                    "required": false,
                    "type": "integer",
                    "description": "Target popularity (0 - 100). Example: 60."
                },
                {
                    "name": "min_speechiness",
                    "required": false,
                    "type": "float",
                    "description": "Minimum speechiness (0.0 - 1.0). Example: 0.1."
                },
                {
                    "name": "max_speechiness",
                    "required": false,
                    "type": "float",
                    "description": "Maximum speechiness (0.0 - 1.0). Example: 0.9."
                },
                {
                    "name": "target_speechiness",
                    "required": false,
                    "type": "float",
                    "description": "Target speechiness (0.0 - 1.0). Example: 0.5."
                },
                {
                    "name": "min_tempo",
                    "required": false,
                    "type": "float",
                    "description": "Minimum tempo in BPM. Example: 100."
                },
                {
                    "name": "max_tempo",
                    "required": false,
                    "type": "float",
                    "description": "Maximum tempo in BPM. Example: 140."
                },
                {
                    "name": "target_tempo",
                    "required": false,
                    "type": "float",
                    "description": "Target tempo in BPM. Example: 120."
                },
                {
                    "name": "min_time_signature",
                    "required": false,
                    "type": "integer",
                    "description": "Minimum time signature (e.g., 3). Max: 11. Example: 4."
                },
                {
                    "name": "max_time_signature",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum time signature. Max: 11. Example: 4."
                },
                {
                    "name": "target_time_signature",
                    "required": false,
                    "type": "integer",
                    "description": "Target time signature. Example: 4."
                },
                {
                    "name": "min_valence",
                    "required": false,
                    "type": "float",
                    "description": "Minimum valence (0.0 - 1.0). Example: 0.2."
                },
                {
                    "name": "max_valence",
                    "required": false,
                    "type": "float",
                    "description": "Maximum valence (0.0 - 1.0). Example: 0.8."
                },
                {
                    "name": "target_valence",
                    "required": false,
                    "type": "float",
                    "description": "Target valence (0.0 - 1.0). Example: 0.5."
                }
            ],
            "output_parameters": [
                {
                    "name": "seeds",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of recommendation seed objects."
                },
                {
                    "name": "tracks",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of simplified track objects."
                }
            ],
            "description": "This endpoint generates track recommendations based on seed entities and optional tuning parameters."
        },
        {
            "name": "Display your Spotify profile data in a web app",
            "url": "https://developer.spotify.com/documentation/web-api/reference/get-current-users-profile",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "country",
                    "is_array": false,
                    "type": "string",
                    "description": "The country of the user."
                },
                {
                    "name": "display_name",
                    "is_array": false,
                    "type": "string",
                    "description": "The display name of the user."
                },
                {
                    "name": "email",
                    "is_array": false,
                    "type": "string",
                    "description": "The email of the user."
                },
                {
                    "name": "explicit_content",
                    "is_array": false,
                    "type": "object",
                    "description": "Object indicating whether explicit content is filtered."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Object with external URLs."
                },
                {
                    "name": "followers",
                    "is_array": false,
                    "type": "object",
                    "description": "Object containing follower information."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the Web API endpoint for this user."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the user."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of profile images."
                },
                {
                    "name": "product",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify product type."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI."
                }
            ],
            "description": "Retrieve the current user's profile data."
        },
        {
            "name": "Check User's Saved Albums",
            "url": "https://api.spotify.com/v1/me/albums/contains",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs for albums (max 20). Example: 382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo."
                }
            ],
            "output_parameters": [
                {
                    "name": "0",
                    "is_array": true,
                    "type": "boolean",
                    "description": "Boolean indicating whether each album is saved in the user's library."
                }
            ],
            "description": "Check if one or more albums are saved in the user's library."
        },
        {
            "name": "Get Multiple Shows",
            "url": "https://api.spotify.com/v1/shows",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. If specified, only content available in that market will be returned. If a user access token is provided, the user's country will take priority. If neither is provided, the content is considered unavailable. Example: 'ES'."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for the shows. Maximum: 50 IDs. Example: '5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ'."
                }
            ],
            "output_parameters": [
                {
                    "name": "shows",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of show objects, each with details about the show including available markets, copyrights, description, images, and more."
                }
            ],
            "description": "Retrieve information about multiple shows by their Spotify IDs."
        },
        {
            "name": "Get Artist's Top Tracks",
            "url": "https://api.spotify.com/v1/artists/{id}/top-tracks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the artist. Example: '0TnOYISbd1XYRBk9myaseg'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. If specified, only top tracks available in that market are returned. If a user access token is provided, the user's country takes priority. If neither is provided, content is considered unavailable. Example: 'ES'."
                }
            ],
            "output_parameters": [
                {
                    "name": "tracks",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of track objects representing the artist's top tracks in the specified market."
                }
            ],
            "description": "Get Spotify catalog information about an artist's top tracks by country."
        },
        {
            "name": "Change Playlist Details",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist. Example: '3cEYpjA9oz9GiPac4AsH4n'."
                },
                {
                    "name": "name",
                    "required": false,
                    "type": "string",
                    "description": "The new name for the playlist, e.g., 'My New Playlist Title'."
                },
                {
                    "name": "public",
                    "required": false,
                    "type": "boolean",
                    "description": "The playlist's public/private status: true=public, false=private, null=not relevant."
                },
                {
                    "name": "collaborative",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, the playlist will become collaborative, allowing others to modify it. Note: only set to true on non-public playlists."
                },
                {
                    "name": "description",
                    "required": false,
                    "type": "string",
                    "description": "The playlist description as displayed in Spotify clients and the Web API."
                }
            ],
            "output_parameters": [],
            "description": "Update a playlist's name, public/private status, collaborative status, or description."
        },
        {
            "name": "follow_playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "Spotify ID of the playlist to follow, e.g., '3cEYpjA9oz9GiPac4AsH4n'."
                },
                {
                    "name": "public",
                    "required": false,
                    "type": "boolean",
                    "description": "If true, the playlist will be included in the user's public playlists; defaults to true. If false, the playlist remains private."
                }
            ],
            "output_parameters": [],
            "description": "Add the current user as a follower of a playlist. Requires 'playlist-modify-public' or 'playlist-modify-private' scope."
        },
        {
            "name": "get_an_artists_albums",
            "url": "https://api.spotify.com/v1/artists/{id}/albums",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "Spotify Artist ID, e.g., '0TnOYISbd1XYRBk9myaseg'."
                },
                {
                    "name": "include_groups",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of album types to filter, e.g., 'album,single,appears_on,compilation'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code to filter results by market, e.g., 'ES'."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return (1-50), default 20."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return, default 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to full API result."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of items returned."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to next page of results or null."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Index of the first item returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page or null."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of albums available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "List of album objects, each with properties:"
                },
                {
                    "name": "album_type",
                    "is_array": false,
                    "type": "string",
                    "description": "Type of album. Allowed: 'album', 'single', 'compilation'."
                },
                {
                    "name": "total_tracks",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of tracks in the album."
                },
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "Markets where the album is available, e.g., ['CA','BR','IT']."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for this album."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the full album object."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID for the album."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Album cover images with properties:"
                },
                {
                    "name": "url",
                    "is_array": false,
                    "type": "string",
                    "description": "Image URL."
                },
                {
                    "name": "height",
                    "is_array": false,
                    "type": "integer",
                    "description": "Image height in pixels, nullable."
                },
                {
                    "name": "width",
                    "is_array": false,
                    "type": "integer",
                    "description": "Image width in pixels, nullable."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the album."
                },
                {
                    "name": "release_date",
                    "is_array": false,
                    "type": "string",
                    "description": "Release date of the album, e.g., '1981-12'."
                },
                {
                    "name": "release_date_precision",
                    "is_array": false,
                    "type": "string",
                    "description": "Precision of release date. Allowed: 'year', 'month', 'day'."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Content restrictions, if any, with property 'reason' which can be 'market', 'product', or 'explicit'."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, must be 'album'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the album."
                },
                {
                    "name": "artists",
                    "is_array": true,
                    "type": "object",
                    "description": "List of artist objects with properties:"
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs for the artist."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the artist object."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID for the artist."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Artist name."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, 'artist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the artist."
                },
                {
                    "name": "album_group",
                    "is_array": false,
                    "type": "string",
                    "description": "Relationship of the artist to the album, e.g., 'album', 'single', 'compilation', 'appears_on'."
                }
            ],
            "description": "Get Spotify catalog information about an artist's albums."
        },
        {
            "name": "remove_albums_user",
            "url": "https://api.spotify.com/v1/me/albums",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify album IDs to remove, e.g., '382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo'."
                }
            ],
            "output_parameters": [
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Snapshot ID of the user\u2019s 'Your Music' library after removal, e.g., 'abc'."
                }
            ],
            "description": "Remove one or more albums from the current user's 'Your Music' library. Requires 'user-library-modify' scope."
        },
        {
            "name": "migrate_from_implicit_auth_code",
            "url": "https://developer.spotify.com/documentation/web-api/tutorials/migration-implicit-auth-code",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Guide on migrating from Implicit Grant Flow to Authorization Code with PKCE for Spotify Web API."
        },
        {
            "name": "Check if current user follows Artists or Users",
            "url": "https://api.spotify.com/v1/me/following/contains",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "type",
                    "required": true,
                    "type": "string",
                    "description": "The ID type: either 'artist' or 'user'."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the Spotify IDs to check. Maximum of 50 IDs. Example: '2CIMQHirSU0MQqyYHq0eOx,57dN52uHvrHOxijzpIgu3E'."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": true,
                    "type": "boolean",
                    "description": "Array of booleans indicating whether the current user follows each ID in the 'ids' list. Example: [false, true]."
                }
            ],
            "description": "Checks if the current user follows one or more artists or Spotify users based on the specified IDs."
        },
        {
            "name": "Skip to previous track for user's playback",
            "url": "https://api.spotify.com/v1/me/player/previous",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "device_id",
                    "required": false,
                    "type": "string",
                    "description": "The ID of the device to control. If not provided, the current active device is used. Example: '0d1841b0976bae2a3a310dd74c0f3df354899bc8'."
                }
            ],
            "output_parameters": [
                {
                    "name": "response_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP status code indicating success (204) or error (401, 403, 429)."
                }
            ],
            "description": "Skips to the previous track in the user's playback. Only works for users with Spotify Premium."
        },
        {
            "name": "Transfer playback to a new device",
            "url": "https://api.spotify.com/v1/me/player",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "device_ids",
                    "required": true,
                    "type": "string",
                    "description": "A JSON array of device IDs to transfer playback to. Although an array is accepted, only a single device ID is supported currently. Example: '["
                }
            ],
            "output_parameters": [
                {
                    "name": "response_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "HTTP status code indicating success (204) or error (401, 403, 429)."
                }
            ],
            "description": "Transfers playback to the specified device(s). Only one device ID is supported at a time."
        },
        {
            "name": "Get a user's available devices",
            "url": "https://api.spotify.com/v1/me/player/devices",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "devices",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of DeviceObject representing the user's available Spotify Connect devices. Each device object includes the following fields:"
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The device ID, unique and persistent to some extent. Can be used to identify the device in subsequent requests."
                },
                {
                    "name": "is_active",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether this device is the currently active device."
                },
                {
                    "name": "is_private_session",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether this device is in a private session."
                },
                {
                    "name": "is_restricted",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether controlling this device is restricted; if true, no Web API commands will be accepted by this device."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "A human-readable name for the device, e.g., 'Kitchen speaker'."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Device type, such as 'computer', 'smartphone', or 'speaker'."
                },
                {
                    "name": "volume_percent",
                    "is_array": false,
                    "type": "integer",
                    "description": "The current volume of the device in percentage (0-100). Can be null if not available."
                },
                {
                    "name": "supports_volume",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether this device supports volume control."
                }
            ],
            "description": "Retrieves information about the user's available Spotify Connect devices."
        },
        {
            "name": "Get Artist's Related Artists",
            "url": "https://api.spotify.com/v1/artists/{id}/related-artists",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the artist. This is a required parameter and should be provided in the URL path. Example: '0TnOYISbd1XYRBk9myaseg'."
                }
            ],
            "output_parameters": [
                {
                    "name": "artists",
                    "is_array": true,
                    "type": "object",
                    "description": "A list of artist objects related to the specified artist."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for the artist, including 'spotify' URL."
                },
                {
                    "name": "followers",
                    "is_array": false,
                    "type": "object",
                    "description": "Information about the artist's followers, including total count."
                },
                {
                    "name": "genres",
                    "is_array": true,
                    "type": "string",
                    "description": "List of genres associated with the artist."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint providing full details of the artist."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the artist."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Images of the artist in various sizes."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the artist."
                },
                {
                    "name": "popularity",
                    "is_array": false,
                    "type": "integer",
                    "description": "Artist's popularity score, from 0 to 100."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'artist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the artist."
                }
            ],
            "description": "Fetches artists related to the specified artist ID, based on listening history."
        },
        {
            "name": "Get Several Tracks' Audio Features",
            "url": "https://api.spotify.com/v1/audio-features",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify track IDs. Up to 100 IDs can be provided. Example: '7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B'."
                }
            ],
            "output_parameters": [
                {
                    "name": "audio_features",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of AudioFeaturesObject, each containing audio analysis for a track."
                },
                {
                    "name": "acousticness",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence measure from 0.0 to 1.0 of whether the track is acoustic."
                },
                {
                    "name": "analysis_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to access the full audio analysis of the track."
                },
                {
                    "name": "danceability",
                    "is_array": false,
                    "type": "float",
                    "description": "How suitable the track is for dancing, 0.0 to 1.0."
                },
                {
                    "name": "duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Length of the track in milliseconds."
                },
                {
                    "name": "energy",
                    "is_array": false,
                    "type": "float",
                    "description": "Perceptual measure of intensity, 0.0 to 1.0."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the track."
                },
                {
                    "name": "instrumentalness",
                    "is_array": false,
                    "type": "float",
                    "description": "Likelihood the track contains no vocals, 0.0 to 1.0."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "integer",
                    "description": "Key the track is in, with -1 indicating no detection; 0-11 representing pitches."
                },
                {
                    "name": "liveness",
                    "is_array": false,
                    "type": "float",
                    "description": "Presence of an audience, 0.0 to 1.0."
                },
                {
                    "name": "loudness",
                    "is_array": false,
                    "type": "float",
                    "description": "Overall loudness in decibels."
                },
                {
                    "name": "mode",
                    "is_array": false,
                    "type": "integer",
                    "description": "Mode (major or minor), 1 or 0."
                },
                {
                    "name": "speechiness",
                    "is_array": false,
                    "type": "float",
                    "description": "Presence of spoken words, 0.0 to 1.0."
                },
                {
                    "name": "tempo",
                    "is_array": false,
                    "type": "float",
                    "description": "Estimated tempo in beats per minute."
                },
                {
                    "name": "time_signature",
                    "is_array": false,
                    "type": "integer",
                    "description": "Estimated time signature, 3 to 7."
                },
                {
                    "name": "track_href",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the full details of the track."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'audio_features'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the track."
                },
                {
                    "name": "valence",
                    "is_array": false,
                    "type": "float",
                    "description": "Musical positiveness, 0.0 to 1.0."
                }
            ],
            "description": "Retrieves audio features for multiple tracks based on their Spotify IDs."
        },
        {
            "name": "Create Playlist",
            "url": "https://api.spotify.com/v1/users/{user_id}/playlists",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify user ID of the user for whom the playlist is being created. Example: 'smedjan'."
                },
                {
                    "name": "name",
                    "required": true,
                    "type": "string",
                    "description": "The name for the new playlist, e.g., 'Your Coolest Playlist'."
                },
                {
                    "name": "public",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether the playlist is public. Defaults to true."
                },
                {
                    "name": "collaborative",
                    "required": false,
                    "type": "boolean",
                    "description": "Whether the playlist is collaborative. Defaults to false."
                },
                {
                    "name": "description",
                    "required": false,
                    "type": "string",
                    "description": "Description of the playlist, visible in Spotify clients."
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborative",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the playlist owner allows others to modify the playlist."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "The playlist description, might be null if not set."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs for the playlist, including Spotify URL."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint providing full details of the playlist."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the playlist."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of images associated with the playlist, ordered by size."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the playlist."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "The user who owns the playlist, with details including external URLs, href, id, images, name, and uri."
                },
                {
                    "name": "public",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the playlist is public."
                },
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "The version identifier of the playlist."
                },
                {
                    "name": "tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "Object containing reference to tracks, with fields like href, limit, next, offset, previous, total, and items."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'playlist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the playlist."
                }
            ],
            "description": "Creates a new playlist for a user with specified details."
        },
        {
            "name": "Save Albums for Current User",
            "url": "https://api.spotify.com/v1/me/albums",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify album IDs. Maximum: 20 IDs. Example: '382ObEPsp2rxGrnsizN5TX,1A2GTWGtFfWp7KSQTwWOyo,2noRn2Aes5aoNVsU6iWThc'."
                },
                {
                    "name": "ids_array",
                    "required": false,
                    "type": "string",
                    "description": "A JSON array of Spotify album IDs, e.g. ['4iV5W9uYEdYUVa79Axb7Rh', '1301WleyT98MSxVHPZCA6M']. A maximum of 50 items can be specified; this parameter is ignored if 'ids' in query string."
                }
            ],
            "output_parameters": [
                {
                    "name": "response",
                    "is_array": false,
                    "type": "string",
                    "description": "Empty response body indicates success. Possible response status codes: 200, 401, 403, 429."
                }
            ],
            "description": "Endpoint to save one or more albums to the current user's 'Your Music' library."
        },
        {
            "name": "Get an Artist",
            "url": "https://api.spotify.com/v1/artists/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the artist. Example: '0TnOYISbd1XYRBk9myaseg'."
                }
            ],
            "output_parameters": [
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for this artist, e.g., Spotify URL."
                },
                {
                    "name": "followers",
                    "is_array": false,
                    "type": "object",
                    "description": "Information about followers: 'href' (nullable string) always null, 'total' (integer) number of followers."
                },
                {
                    "name": "genres",
                    "is_array": true,
                    "type": "string",
                    "description": "List of genres associated with the artist. Example: ['Prog rock','Grunge']."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint providing full artist details."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID of the artist."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of images of various sizes for the artist."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the artist."
                },
                {
                    "name": "popularity",
                    "is_array": false,
                    "type": "integer",
                    "description": "Artist's popularity score between 0 and 100."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'artist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the artist."
                }
            ],
            "description": "Retrieve Spotify catalog information for a single artist by their unique Spotify ID."
        },
        {
            "name": "Get a Playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist."
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborative",
                    "is_array": false,
                    "type": "boolean",
                    "description": "If the playlist is collaborative."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "The playlist description."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs object, including Spotify link."
                },
                {
                    "name": "followers",
                    "is_array": false,
                    "type": "object",
                    "description": "Followers information."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint providing full playlist details."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID of the playlist."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of images representing the playlist."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the playlist."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "Object containing owner information."
                },
                {
                    "name": "public",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the playlist is public."
                },
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Snapshot ID for version control."
                },
                {
                    "name": "tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "Object containing playlist tracks."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'playlist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the playlist."
                }
            ],
            "description": "Retrieve the details of a specific playlist by its Spotify ID."
        },
        {
            "name": "Set Repeat Mode on User's Playback",
            "url": "https://api.spotify.com/v1/me/player/repeat",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "state",
                    "required": true,
                    "type": "string",
                    "description": "Required. The string indicating the repeat mode. Allowed values: 'track' to repeat the current track, 'context' to repeat the current context (playlist or album), or 'off' to turn off repeat."
                },
                {
                    "name": "device_id",
                    "required": false,
                    "type": "string",
                    "description": "Optional. The ID of the device this command is targeting. If not supplied, the currently active device is targeted."
                }
            ],
            "output_parameters": [],
            "description": "Set the repeat mode for the user's playback. Requires 'user-modify-playback-state' scope. Possible 'state' values: 'track', 'context', 'off'."
        },
        {
            "name": "Get the User's Playback Queue",
            "url": "https://api.spotify.com/v1/me/player/queue",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [],
            "description": "Retrieve the current queue of tracks and episodes for the user. Requires 'user-read-playback-state' scope. The response includes 'currently_playing' item and 'queue' array with upcoming items."
        },
        {
            "name": "Get Available Markets",
            "url": "https://api.spotify.com/v1/markets",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "markets",
                    "is_array": true,
                    "type": "string",
                    "description": "An array of country codes (ISO 3166-1 alpha-2) representing the markets where Spotify is available."
                }
            ],
            "description": "Retrieve the list of markets (countries) where Spotify is available. Authentication with OAuth 2.0 required."
        },
        {
            "name": "Track Relinking - Get a Track (with market)",
            "url": "https://api.spotify.com/v1/tracks/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the track."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "A country code (ISO 3166-1 alpha-2). If specified, the API attempts to return the track in the specified market, relinking if necessary."
                }
            ],
            "output_parameters": [
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "List of markets where the track is available. (Note: this property is replaced by 'is_playable' when 'market' is used)."
                },
                {
                    "name": "disc_number",
                    "is_array": false,
                    "type": "integer",
                    "description": "The disc number (usually 1 unless the album has multiple discs)."
                },
                {
                    "name": "duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "The length of the track in milliseconds."
                },
                {
                    "name": "explicit",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether the track has explicit lyrics."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint providing full details of the track."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the track."
                },
                {
                    "name": "is_playable",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the track can be played in the market."
                },
                {
                    "name": "linked_from",
                    "is_array": false,
                    "type": "object",
                    "description": "Contains information about the original track if relinked, including 'external_urls', 'href', 'id', 'type', and 'uri'."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the track."
                },
                {
                    "name": "preview_url",
                    "is_array": false,
                    "type": "string",
                    "description": "A URL to a 30 second preview of the track."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Restrictions if the track is not available, including 'reason' (e.g., 'market').},{"
                }
            ],
            "description": "Retrieves information about a specific track, attempting relinking based on the market if necessary."
        },
        {
            "name": "Get a Category",
            "url": "https://api.spotify.com/v1/browse/categories/{category_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "category_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify category ID, e.g., 'dinner'."
                },
                {
                    "name": "locale",
                    "required": false,
                    "type": "string",
                    "description": "Language and country code (ISO 639-1 and ISO 3166-1 alpha-2), e.g., 'es_MX'. If not provided, defaults to American English."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning full details of the category."
                },
                {
                    "name": "icons",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of image objects representing the category icon in various sizes."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify category ID."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the category."
                }
            ],
            "description": "Retrieves a single Spotify category used for tagging items."
        },
        {
            "name": "Get Show Episodes",
            "url": "https://api.spotify.com/v1/shows/{id}/episodes",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the show."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "A country code (ISO 3166-1 alpha-2). If provided, only episodes available in this market are returned. If not, the user's country is used."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "The maximum number of episodes to return. Default: 20. Min: 1. Max: 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first episode to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of episodes, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of episodes, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of episodes available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of episode objects, including details like 'audio_preview_url', 'description', 'html_description', 'duration_ms', 'explicit', 'external_urls', 'href', 'id', 'images', 'is_externally_hosted', 'is_playable', 'language(s)', 'name', 'release_date', 'release_date_precision', 'resume_point', 'type', 'uri', and 'restrictions'."
                }
            ],
            "description": "Retrieves a list of episodes for a specific show, with optional pagination and market filtering."
        },
        {
            "name": "Get the user's currently playing track",
            "url": "https://api.spotify.com/v1/me/player/currently-playing",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code to restrict the content to a specific market. If omitted, the user's country setting will take priority. Example: 'ES'."
                },
                {
                    "name": "additional_types",
                    "required": false,
                    "type": "string",
                    "description": "A comma-separated list of item types supported besides 'track'. Valid types are: 'track' and 'episode'. This parameter affects the returned item types."
                }
            ],
            "output_parameters": [
                {
                    "name": "device",
                    "is_array": false,
                    "type": "object",
                    "description": "Information about the device currently active for playback."
                },
                {
                    "name": "repeat_state",
                    "is_array": false,
                    "type": "string",
                    "description": "The current repeat mode. Possible values: 'off', 'track', 'context'."
                },
                {
                    "name": "shuffle_state",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether shuffle mode is enabled."
                },
                {
                    "name": "context",
                    "is_array": false,
                    "type": "object",
                    "description": "The context object for playback, such as playlist or album."
                },
                {
                    "name": "timestamp",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unix timestamp indicating when the playback state was last changed."
                },
                {
                    "name": "progress_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Progress into the current track or episode in milliseconds. Can be null."
                },
                {
                    "name": "is_playing",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if something is currently playing."
                },
                {
                    "name": "item",
                    "is_array": false,
                    "type": "object",
                    "description": "The currently playing track or episode, or null if nothing is playing."
                },
                {
                    "name": "currently_playing_type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type of the currently playing item. Possible values: 'track', 'episode', 'ad', 'unknown'."
                },
                {
                    "name": "actions",
                    "is_array": false,
                    "type": "object",
                    "description": "Available playback actions within the current context."
                }
            ],
            "description": "Retrieves information about the user's currently playing track or episode."
        },
        {
            "name": "Save audiobooks for the current user",
            "url": "https://api.spotify.com/v1/me/audiobooks",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for audiobooks to save. Maximum: 50 IDs. Example: '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ'"
                }
            ],
            "output_parameters": [
                {
                    "name": "",
                    "is_array": false,
                    "type": "string",
                    "description": "Empty response indicating success."
                }
            ],
            "description": "Saves one or more audiobooks to the current Spotify user's library."
        },
        {
            "name": "Check if user has saved specific tracks",
            "url": "https://api.spotify.com/v1/me/tracks/contains",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for tracks to check. Maximum: 50 IDs. Example: '7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ'"
                }
            ],
            "output_parameters": [
                {
                    "name": "",
                    "is_array": true,
                    "type": "boolean",
                    "description": "An array of booleans indicating whether each track is saved (true) or not (false)."
                }
            ],
            "description": "Checks if one or more tracks are already saved in the current user's 'Your Music' library."
        },
        {
            "name": "Save Tracks for Current User",
            "url": "https://api.spotify.com/v1/me/tracks",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the Spotify IDs of the tracks to save. Maximum: 50 IDs. Example: '7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B'."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "An array of track Spotify IDs. Maximum: 50 items. Example: ['4iV5W9uYEdYUVa79Axb7Rh','1301WleyT98MSxVHPZCA6M']. If 'ids' parameter is present in the query string, any IDs listed in the body will be ignored."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP status code indicating the result. Examples: '200' for success, '401' for Unauthorized, '403' for Forbidden, '429' for Too Many Requests."
                }
            ],
            "description": "Endpoint to save one or more tracks to the current user's 'Your Music' library. Supports either a comma-separated string of IDs or an array of IDs in the request body."
        },
        {
            "name": "Skip to Next Track",
            "url": "https://api.spotify.com/v1/me/player/next",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP status code indicating the result. Examples: '204' No Content on success, '401' Unauthorized, '403' Forbidden, '429' Too Many Requests."
                }
            ],
            "description": "API to skip to the next track in the user's queue. Works only for users with Spotify Premium."
        },
        {
            "name": "Get an Audiobook",
            "url": "https://api.spotify.com/v1/audiobooks/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID for the audiobook. Example: '7iHfbu1YPACw6oZPAFJtqe'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. If specified, only content available in that market will be returned. If the user has a valid access token, the country associated with the user account takes priority. Example: 'ES'."
                }
            ],
            "output_parameters": [
                {
                    "name": "authors",
                    "is_array": true,
                    "type": "object",
                    "description": "List of authors for the audiobook."
                },
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "List of country codes where the audiobook can be played."
                },
                {
                    "name": "copyrights",
                    "is_array": true,
                    "type": "object",
                    "description": "Copyright statements for the audiobook."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "Description of the audiobook with HTML tags stripped."
                },
                {
                    "name": "html_description",
                    "is_array": false,
                    "type": "string",
                    "description": "Description of the audiobook which may contain HTML tags."
                },
                {
                    "name": "edition",
                    "is_array": false,
                    "type": "string",
                    "description": "Edition of the audiobook, e.g., 'Unabridged'."
                },
                {
                    "name": "explicit",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the audiobook has explicit content."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs related to the audiobook."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint providing full details of the audiobook."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the audiobook."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Images of the audiobook's cover art."
                },
                {
                    "name": "languages",
                    "is_array": true,
                    "type": "string",
                    "description": "Languages used in the audiobook."
                },
                {
                    "name": "media_type",
                    "is_array": false,
                    "type": "string",
                    "description": "Media type of the audiobook."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the audiobook."
                },
                {
                    "name": "narrators",
                    "is_array": true,
                    "type": "object",
                    "description": "List of narrators for the audiobook."
                },
                {
                    "name": "publisher",
                    "is_array": false,
                    "type": "string",
                    "description": "Publisher of the audiobook."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g., 'audiobook'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI of the audiobook."
                },
                {
                    "name": "total_chapters",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of chapters in the audiobook."
                },
                {
                    "name": "chapters",
                    "is_array": false,
                    "type": "object",
                    "description": "Chapter information including pagination and items."
                },
                {
                    "name": "is_playable",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the chapter is playable in the current market."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Content restrictions applied to the audiobook."
                }
            ],
            "description": "API endpoint to retrieve detailed information for a specific audiobook by its Spotify ID, possibly filtered by market."
        },
        {
            "name": "Get a single track's audio analysis",
            "url": "https://api.spotify.com/v1/audio-analysis/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID for the track. Example: `11dFghVXANMlKmJXsNCbNl`."
                }
            ],
            "output_parameters": [
                {
                    "name": "meta",
                    "is_array": false,
                    "type": "object",
                    "description": "Metadata about the analysis, including analyzer version, platform, status codes, timestamp, analysis time, and input process."
                },
                {
                    "name": "meta.analyzer_version",
                    "is_array": false,
                    "type": "string",
                    "description": "The version of the analyzer used to analyze this track. Example: \"4.0.0\"."
                },
                {
                    "name": "meta.platform",
                    "is_array": false,
                    "type": "string",
                    "description": "The platform used to read the track's audio data. Example: \"Linux\"."
                },
                {
                    "name": "meta.detailed_status",
                    "is_array": false,
                    "type": "string",
                    "description": "A detailed status code. Example: \"OK\"."
                },
                {
                    "name": "meta.status_code",
                    "is_array": false,
                    "type": "integer",
                    "description": "Return code: 0 if successful."
                },
                {
                    "name": "meta.timestamp",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unix timestamp when the track was analyzed. Example: 1495193577."
                },
                {
                    "name": "meta.analysis_time",
                    "is_array": false,
                    "type": "float",
                    "description": "Time taken to analyze the track in seconds. Example: 6.93906."
                },
                {
                    "name": "meta.input_process",
                    "is_array": false,
                    "type": "string",
                    "description": "The method used to read the track's audio data. Example: \"libvorbisfile L+R 44100->22050\"."
                },
                {
                    "name": "track",
                    "is_array": false,
                    "type": "object",
                    "description": "Track information including number of samples, duration, sample MD5, offset, window size, sample rate, channels, fade timings, loudness, tempo, key, mode, and codestrings."
                },
                {
                    "name": "track.num_samples",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of samples analyzed from this track. Example: 4585515."
                },
                {
                    "name": "track.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Length of the track in seconds. Example: 207.95985."
                },
                {
                    "name": "track.sample_md5",
                    "is_array": false,
                    "type": "string",
                    "description": "Always contains an empty string."
                },
                {
                    "name": "track.offset_seconds",
                    "is_array": false,
                    "type": "integer",
                    "description": "Offset to the start of the analysis region. Usually 0."
                },
                {
                    "name": "track.window_seconds",
                    "is_array": false,
                    "type": "integer",
                    "description": "Length of the analyzed region of the track, usually 0."
                },
                {
                    "name": "track.analysis_sample_rate",
                    "is_array": false,
                    "type": "integer",
                    "description": "Sample rate used for decoding and analysis. Example: 22050."
                },
                {
                    "name": "track.analysis_channels",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of channels used for analysis. Example: 1."
                },
                {
                    "name": "track.end_of_fade_in",
                    "is_array": false,
                    "type": "float",
                    "description": "Seconds at which fade-in ends. Example: 0."
                },
                {
                    "name": "track.start_of_fade_out",
                    "is_array": false,
                    "type": "float",
                    "description": "Seconds at which fade-out starts. Example: 201.13705."
                },
                {
                    "name": "track.loudness",
                    "is_array": false,
                    "type": "float",
                    "description": "Overall loudness in decibels, range typically -60 to 0."
                },
                {
                    "name": "track.tempo",
                    "is_array": false,
                    "type": "float",
                    "description": "Estimated tempo in BPM. Example: 118.211."
                },
                {
                    "name": "track.tempo_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in tempo estimation, between 0.0 and 1.0. Example: 0.73."
                },
                {
                    "name": "track.time_signature",
                    "is_array": false,
                    "type": "integer",
                    "description": "Estimated time signature, between 3 and 7. Example: 4."
                },
                {
                    "name": "track.time_signature_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in time signature, between 0.0 and 1.0. Example: 0.994."
                },
                {
                    "name": "track.key",
                    "is_array": false,
                    "type": "integer",
                    "description": "The key of the track, -1 if not detected. Values map to pitch classes. Example: 9."
                },
                {
                    "name": "track.key_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in key detection, between 0.0 and 1.0. Example: 0.408."
                },
                {
                    "name": "track.mode",
                    "is_array": false,
                    "type": "integer",
                    "description": "Mode: 0 (minor) or 1 (major). Example: 0."
                },
                {
                    "name": "track.mode_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in mode detection, 0.0 to 1.0. Example: 0.485."
                },
                {
                    "name": "track.codestring",
                    "is_array": false,
                    "type": "string",
                    "description": "Echo Nest Musical Fingerprint codestring."
                },
                {
                    "name": "track.code_version",
                    "is_array": false,
                    "type": "float",
                    "description": "Version number of the codestring format. Example: 3.15."
                },
                {
                    "name": "track.echoprintstring",
                    "is_array": false,
                    "type": "string",
                    "description": "EchoPrint codestring."
                },
                {
                    "name": "track.echoprint_version",
                    "is_array": false,
                    "type": "float",
                    "description": "Version of the EchoPrint format, e.g., 4.15."
                },
                {
                    "name": "track.synchstring",
                    "is_array": false,
                    "type": "string",
                    "description": "Synchstring for the track."
                },
                {
                    "name": "track.synch_version",
                    "is_array": false,
                    "type": "integer",
                    "description": "Version of the Synchstring, usually 1."
                },
                {
                    "name": "track.rhythmstring",
                    "is_array": false,
                    "type": "string",
                    "description": "Rhythmstring for the track."
                },
                {
                    "name": "track.rhythm_version",
                    "is_array": false,
                    "type": "integer",
                    "description": "Version number for Rhythmstring, usually 1."
                },
                {
                    "name": "bars",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of bar objects, each with start, duration, and confidence."
                },
                {
                    "name": "bars.start",
                    "is_array": false,
                    "type": "float",
                    "description": "Start time in seconds. Example: 0.49567."
                },
                {
                    "name": "bars.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Duration in seconds. Example: 2.18749."
                },
                {
                    "name": "bars.confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence level, 0.0 to 1.0. Example: 0.925."
                },
                {
                    "name": "beats",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of beat objects, each with start, duration, and confidence."
                },
                {
                    "name": "beats.start",
                    "is_array": false,
                    "type": "float",
                    "description": "Start time in seconds. Example: 0.49567."
                },
                {
                    "name": "beats.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Duration in seconds. Example: 2.18749."
                },
                {
                    "name": "beats.confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence level, 0.0 to 1.0. Example: 0.925."
                },
                {
                    "name": "sections",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of section objects, each with start, duration, confidence, loudness, tempo, key, mode, and time signature."
                },
                {
                    "name": "sections.start",
                    "is_array": false,
                    "type": "float",
                    "description": "Section start time in seconds."
                },
                {
                    "name": "sections.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Duration of the section in seconds."
                },
                {
                    "name": "sections.confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence level, 0.0 to 1.0."
                },
                {
                    "name": "sections.loudness",
                    "is_array": false,
                    "type": "float",
                    "description": "Loudness in decibels."
                },
                {
                    "name": "sections.tempo",
                    "is_array": false,
                    "type": "float",
                    "description": "Tempo in BPM."
                },
                {
                    "name": "sections.tempo_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in tempo estimation."
                },
                {
                    "name": "sections.key",
                    "is_array": false,
                    "type": "integer",
                    "description": "Key of the section, -1 if undetected."
                },
                {
                    "name": "sections.key_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in key detection."
                },
                {
                    "name": "sections.mode",
                    "is_array": false,
                    "type": "integer",
                    "description": "Mode: 0 (minor), 1 (major), or -1 if no result."
                },
                {
                    "name": "sections.mode_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in mode detection."
                },
                {
                    "name": "sections.time_signature",
                    "is_array": false,
                    "type": "integer",
                    "description": "Time signature. Range 3-7."
                },
                {
                    "name": "sections.time_signature_confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in time signature detection."
                },
                {
                    "name": "segments",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of segment objects with detailed audio feature data."
                },
                {
                    "name": "segments.start",
                    "is_array": false,
                    "type": "float",
                    "description": "Segment start time in seconds."
                },
                {
                    "name": "segments.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Segment duration in seconds."
                },
                {
                    "name": "segments.confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence in segmentation."
                },
                {
                    "name": "segments.loudness_start",
                    "is_array": false,
                    "type": "float",
                    "description": "Loudness at segment start in decibels."
                },
                {
                    "name": "segments.loudness_max",
                    "is_array": false,
                    "type": "float",
                    "description": "Maximum loudness in decibels."
                },
                {
                    "name": "segments.loudness_max_time",
                    "is_array": false,
                    "type": "float",
                    "description": "Time to reach maximum loudness within the segment."
                },
                {
                    "name": "segments.loudness_end",
                    "is_array": false,
                    "type": "float",
                    "description": "Loudness at segment end in decibels."
                },
                {
                    "name": "segments.pitches",
                    "is_array": true,
                    "type": "float",
                    "description": "Array of 12 pitch content values, each between 0 and 1."
                },
                {
                    "name": "segments.timbre",
                    "is_array": true,
                    "type": "float",
                    "description": "Array of 12 timbre coefficients."
                },
                {
                    "name": "tatums",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of tatum objects with start, duration, and confidence."
                },
                {
                    "name": "tatums.start",
                    "is_array": false,
                    "type": "float",
                    "description": "Start time in seconds."
                },
                {
                    "name": "tatums.duration",
                    "is_array": false,
                    "type": "float",
                    "description": "Duration in seconds."
                },
                {
                    "name": "tatums.confidence",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence level, 0.0 to 1.0."
                }
            ],
            "description": "JSON schema for the response of retrieving a track's audio analysis, including metadata, track info, and detailed musical features."
        },
        {
            "name": "Get Recently Played Tracks",
            "url": "https://api.spotify.com/v1/me/player/recently-played",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
                },
                {
                    "name": "after",
                    "required": false,
                    "type": "integer",
                    "description": "A Unix timestamp in milliseconds. Returns all items after (but not including) this cursor position. If `after` is specified, `before` must not be specified."
                },
                {
                    "name": "before",
                    "required": false,
                    "type": "integer",
                    "description": "A Unix timestamp in milliseconds. Returns all items before (but not including) this cursor position. If `before` is specified, `after` must not be specified."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "The maximum number of items in the response (as set in the query or by default)."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items. ( `null` if none)"
                },
                {
                    "name": "cursors",
                    "is_array": false,
                    "type": "object",
                    "description": "The cursors used to find the next set of items."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "The total number of items available to return."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "A paged set of tracks containing Track and Played_at."
                }
            ],
            "description": ""
        },
        {
            "name": "Get a Show",
            "url": "https://api.spotify.com/v1/shows/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). If a country code is specified, only content that is available in that market will be returned. The country associated with the user account will take priority over this parameter if a valid user access token is provided. Example: `market=ES`."
                },
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The [Spotify ID] for the show. Example: `38bS44xjbVVZ3No3ByF1dJ`."
                }
            ],
            "output_parameters": [
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "A list of the countries in which the show can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code."
                },
                {
                    "name": "copyrights",
                    "is_array": true,
                    "type": "object",
                    "description": "The copyright statements of the show."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "A description of the show. HTML tags are stripped away."
                },
                {
                    "name": "html_description",
                    "is_array": false,
                    "type": "string",
                    "description": "A description of the show. This field may contain HTML tags."
                },
                {
                    "name": "explicit",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Whether or not the show has explicit content."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs for this show."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint providing full details of the show."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The [Spotify ID] for the show."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "The cover art for the show in various sizes."
                },
                {
                    "name": "is_externally_hosted",
                    "is_array": false,
                    "type": "boolean",
                    "description": "True if all episodes are hosted outside Spotify's CDN."
                },
                {
                    "name": "languages",
                    "is_array": true,
                    "type": "string",
                    "description": "A list of the languages used in the show, identified by their ISO 639 codes."
                },
                {
                    "name": "media_type",
                    "is_array": false,
                    "type": "string",
                    "description": "The media type of the show."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the show."
                },
                {
                    "name": "publisher",
                    "is_array": false,
                    "type": "string",
                    "description": "The publisher of the show."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "The object type: \"show\"."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "The [Spotify URI] for the show."
                },
                {
                    "name": "total_episodes",
                    "is_array": false,
                    "type": "integer",
                    "description": "The total number of episodes in the show."
                },
                {
                    "name": "episodes",
                    "is_array": false,
                    "type": "object",
                    "description": "The episodes of the show."
                },
                {
                    "name": "currently_playing_type",
                    "is_array": false,
                    "type": "string",
                    "description": "The object type of the currently playing item. Can be `track`, `episode`, `ad`, or `unknown`."
                },
                {
                    "name": "actions",
                    "is_array": false,
                    "type": "object",
                    "description": "Allows updating the user interface based on available playback actions."
                }
            ],
            "description": ""
        },
        {
            "name": "Get Playback State",
            "url": "https://api.spotify.com/v1/me/player",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). If specified, only content available in that market will be returned. The country associated with the user account will take priority if a valid user access token is provided."
                },
                {
                    "name": "additional_types",
                    "required": false,
                    "type": "string",
                    "description": "A comma-separated list of item types supported besides `track` (e.g., `episode`)."
                }
            ],
            "output_parameters": [
                {
                    "name": "device",
                    "is_array": false,
                    "type": "object",
                    "description": "The device currently active."
                },
                {
                    "name": "repeat_state",
                    "is_array": false,
                    "type": "string",
                    "description": "The repeat state: 'off', 'track', or 'context'."
                },
                {
                    "name": "shuffle_state",
                    "is_array": false,
                    "type": "boolean",
                    "description": "If shuffle is on or off."
                },
                {
                    "name": "context",
                    "is_array": false,
                    "type": "object",
                    "description": "The context the track was played from."
                },
                {
                    "name": "timestamp",
                    "is_array": false,
                    "type": "integer",
                    "description": "Unix Millisecond Timestamp when playback state was last changed."
                },
                {
                    "name": "progress_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Progress into the currently playing track or episode in milliseconds."
                },
                {
                    "name": "is_playing",
                    "is_array": false,
                    "type": "boolean",
                    "description": "If something is currently playing."
                },
                {
                    "name": "item",
                    "is_array": false,
                    "type": "object",
                    "description": "The currently playing track or episode, or null."
                },
                {
                    "name": "currently_playing_type",
                    "is_array": false,
                    "type": "string",
                    "description": "The object type of the currently playing item: 'track', 'episode', 'ad', 'unknown'."
                },
                {
                    "name": "actions",
                    "is_array": false,
                    "type": "object",
                    "description": "Actions that can be performed in the current context."
                }
            ],
            "description": ""
        },
        {
            "name": "Get a Category's Playlists",
            "url": "https://api.spotify.com/v1/browse/categories/{category_id}/playlists",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "category_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify category ID, e.g. 'dinner'. This is a path parameter."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default: 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "The localized message of a playlist. Example: 'Popular Playlists'."
                },
                {
                    "name": "playlists",
                    "is_array": false,
                    "type": "object",
                    "description": "A paged set of playlists."
                },
                {
                    "name": "playlists.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "playlists.limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "playlists.next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items. Null if none."
                },
                {
                    "name": "playlists.offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "playlists.previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items. Null if none."
                },
                {
                    "name": "playlists.total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of items available."
                },
                {
                    "name": "playlists.items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of playlist objects."
                },
                {
                    "name": "items.collaborative",
                    "is_array": false,
                    "type": "boolean",
                    "description": "True if the owner allows modification."
                },
                {
                    "name": "items.description",
                    "is_array": false,
                    "type": "string",
                    "description": "Playlist description. Null if not available."
                },
                {
                    "name": "items.external_urls.spotify",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URL for the playlist."
                },
                {
                    "name": "items.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint of the playlist."
                },
                {
                    "name": "items.id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the playlist."
                },
                {
                    "name": "items.images",
                    "is_array": true,
                    "type": "object",
                    "description": "Images for the playlist."
                },
                {
                    "name": "images.url",
                    "is_array": false,
                    "type": "string",
                    "description": "Source URL of the image."
                },
                {
                    "name": "images.height",
                    "is_array": false,
                    "type": "integer",
                    "description": "Height of the image in pixels."
                },
                {
                    "name": "images.width",
                    "is_array": false,
                    "type": "integer",
                    "description": "Width of the image in pixels."
                },
                {
                    "name": "items.name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the playlist."
                },
                {
                    "name": "items.owner",
                    "is_array": false,
                    "type": "object",
                    "description": "Owner of the playlist."
                },
                {
                    "name": "owner.external_urls.spotify",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URL for the owner."
                },
                {
                    "name": "owner.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the owner in Web API."
                },
                {
                    "name": "owner.id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the owner."
                },
                {
                    "name": "owner.type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g. 'user'."
                },
                {
                    "name": "owner.uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the owner."
                },
                {
                    "name": "owner.display_name",
                    "is_array": false,
                    "type": "string",
                    "description": "Display name of the owner."
                },
                {
                    "name": "items.public",
                    "is_array": false,
                    "type": "boolean",
                    "description": "The playlist's public/private status."
                },
                {
                    "name": "items.snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Current version identifier of the playlist."
                },
                {
                    "name": "items.tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "Contains link and total number of tracks."
                },
                {
                    "name": "tracks.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to fetch playlist tracks."
                },
                {
                    "name": "tracks.total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of tracks."
                },
                {
                    "name": "items.type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g. 'playlist'."
                },
                {
                    "name": "items.uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the playlist."
                }
            ],
            "description": "Fetches Spotify playlists for a specific category."
        },
        {
            "name": "Get Several Albums",
            "url": "https://api.spotify.com/v1/albums",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs. Maximum 20 IDs."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code; determines market availability."
                }
            ],
            "output_parameters": [
                {
                    "name": "albums",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of Album objects."
                },
                {
                    "name": "albums.album_type",
                    "is_array": false,
                    "type": "string",
                    "description": "Type of the album. Allowed: 'album', 'single', 'compilation'."
                },
                {
                    "name": "albums.total_tracks",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of tracks in the album."
                },
                {
                    "name": "albums.available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "Markets where the album is available, identified by ISO 3166-1 alpha-2 codes."
                },
                {
                    "name": "albums.external_urls.spotify",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URL of the album."
                },
                {
                    "name": "albums.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint of the album."
                },
                {
                    "name": "albums.id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the album."
                },
                {
                    "name": "albums.images",
                    "is_array": true,
                    "type": "object",
                    "description": "Album cover images."
                },
                {
                    "name": "images.url",
                    "is_array": false,
                    "type": "string",
                    "description": "Source URL of the image."
                },
                {
                    "name": "images.height",
                    "is_array": false,
                    "type": "integer",
                    "description": "Image height in pixels."
                },
                {
                    "name": "images.width",
                    "is_array": false,
                    "type": "integer",
                    "description": "Image width in pixels."
                },
                {
                    "name": "albums.name",
                    "is_array": false,
                    "type": "string",
                    "description": "Album name."
                },
                {
                    "name": "albums.release_date",
                    "is_array": false,
                    "type": "string",
                    "description": "Release date in ISO 8601 format, e.g. '1981-12'."
                },
                {
                    "name": "albums.release_date_precision",
                    "is_array": false,
                    "type": "string",
                    "description": "Precision of release date. Allowed: 'year', 'month', 'day'."
                },
                {
                    "name": "albums.restrictions.reason",
                    "is_array": false,
                    "type": "string",
                    "description": "Reason for restriction, e.g. 'market'."
                },
                {
                    "name": "albums.type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g. 'album'."
                },
                {
                    "name": "albums.uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI of the album."
                },
                {
                    "name": "albums.artists",
                    "is_array": true,
                    "type": "object",
                    "description": "Artists associated with the album."
                },
                {
                    "name": "artists.external_urls.spotify",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URL for the artist."
                },
                {
                    "name": "artists.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the artist in Web API."
                },
                {
                    "name": "artists.id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the artist."
                },
                {
                    "name": "artists.name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the artist."
                },
                {
                    "name": "artists.type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g. 'artist'."
                },
                {
                    "name": "artists.uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the artist."
                },
                {
                    "name": "albums.tracks",
                    "is_array": true,
                    "type": "object",
                    "description": "Tracks of the album."
                },
                {
                    "name": "tracks.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to fetch tracks."
                },
                {
                    "name": "tracks.limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of tracks in the response."
                },
                {
                    "name": "tracks.next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to fetch next set of tracks; null if none."
                },
                {
                    "name": "tracks.offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Offset for tracks."
                },
                {
                    "name": "tracks.previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous set of tracks; null if none."
                },
                {
                    "name": "tracks.total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of tracks in album."
                },
                {
                    "name": "tracks.items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of track objects."
                },
                {
                    "name": "items.artists",
                    "is_array": true,
                    "type": "object",
                    "description": "Artists of the track."
                },
                {
                    "name": "items.external_urls.spotify",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URL for the artist."
                },
                {
                    "name": "items.href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to track in Web API."
                },
                {
                    "name": "items.id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID of the track."
                },
                {
                    "name": "items.name",
                    "is_array": false,
                    "type": "string",
                    "description": "Track name."
                },
                {
                    "name": "items.type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, e.g. 'track'."
                },
                {
                    "name": "items.uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI of the track."
                }
            ],
            "description": "Fetches details for multiple albums using their Spotify IDs."
        },
        {
            "name": "Save Episodes for Current User",
            "url": "https://api.spotify.com/v1/me/episodes",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the Spotify IDs. Maximum 50 IDs. Example: '77o6BIVlYM3msb4MMIL1jH,0Q86acNRm6V9GYx55SXKwf'."
                },
                {
                    "name": "body",
                    "required": true,
                    "type": "object",
                    "description": "JSON object containing an array 'ids' of Spotify IDs, max 50 items."
                }
            ],
            "output_parameters": [
                {
                    "name": "status_code",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP status code indicating the result (e.g., '200', '401', etc.)."
                }
            ],
            "description": "Endpoint to save one or more episodes to the current user's library. Accepts either a comma-separated string in the 'ids' query parameter or a JSON array in the request body. The maximum number of IDs that can be sent in one request is 50."
        },
        {
            "name": "Get an Episode",
            "url": "https://api.spotify.com/v1/episodes/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID for the episode. Example: '5Xt5DXGzch68nYYamXrNxZ'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "Optional country code (ISO 3166-1 alpha-2). Determines content availability based on market."
                }
            ],
            "output_parameters": [
                {
                    "name": "audio_preview_url",
                    "is_array": false,
                    "type": "string",
                    "description": "A URL to a 30 second preview (MP3 format) of the episode. Nullable and deprecated. Example: 'https://p.scdn.co/mp3-preview/2f37da1d4221f40b9d1a98cd191f4d6f1646ad17'."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "A description of the episode with HTML tags stripped. Use 'html_description' if HTML content is needed."
                },
                {
                    "name": "html_description",
                    "is_array": false,
                    "type": "string",
                    "description": "A description of the episode, can contain HTML tags."
                },
                {
                    "name": "duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Length of the episode in milliseconds."
                },
                {
                    "name": "explicit",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates whether the episode has explicit content."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs related to the episode, e.g., Spotify URL."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the API endpoint providing full details of the episode."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID of the episode."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of images representing the episode cover art."
                },
                {
                    "name": "is_playable",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the episode is playable in the given market."
                },
                {
                    "name": "languages",
                    "is_array": true,
                    "type": "string",
                    "description": "List of ISO 639-1 codes representing the languages used in the episode."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the episode."
                },
                {
                    "name": "release_date",
                    "is_array": false,
                    "type": "string",
                    "description": "The release date of the episode in 'YYYY-MM-DD' format."
                },
                {
                    "name": "release_date_precision",
                    "is_array": false,
                    "type": "string",
                    "description": "Precision of the release date: 'year', 'month', or 'day'."
                },
                {
                    "name": "resume_point",
                    "is_array": false,
                    "type": "object",
                    "description": "User's most recent playback position in the episode, if available."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, always 'episode'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify URI for the episode."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Content restrictions if any, with reason."
                },
                {
                    "name": "show",
                    "is_array": false,
                    "type": "object",
                    "description": "Object representing the show the episode belongs to."
                }
            ],
            "description": "Retrieve detailed information about a specific episode by its Spotify ID, including metadata, images, and related show info."
        },
        {
            "name": "Get the current user's profile",
            "url": "https://api.spotify.com/v1/me",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "country",
                    "is_array": false,
                    "type": "string",
                    "description": "The country of the user, as set in the user's account profile. An ISO 3166-1 alpha-2 country code."
                },
                {
                    "name": "display_name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name displayed on the user's profile. null if not available."
                },
                {
                    "name": "email",
                    "is_array": false,
                    "type": "string",
                    "description": "The user's email address, as entered by the user when creating their account. Important! This email address is unverified."
                },
                {
                    "name": "explicit_content",
                    "is_array": false,
                    "type": "object",
                    "description": "The user's explicit content settings."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for this user."
                },
                {
                    "name": "followers",
                    "is_array": false,
                    "type": "object",
                    "description": "Information about the followers of the user."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint for this user."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify user ID for the user."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "The user's profile image."
                },
                {
                    "name": "product",
                    "is_array": false,
                    "type": "string",
                    "description": "The user's Spotify subscription level: \"premium\", \"free\" etc."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "The object type: 'user'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify URI for the user."
                }
            ],
            "description": ""
        },
        {
            "name": "Get a list of the albums saved in the current Spotify user\u2019s \u2018Your Music\u2019 library",
            "url": "https://api.spotify.com/v1/me/albums",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default: 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default: 0."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. If specified, only content available in that market is returned."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items. null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page of items. null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of items available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of saved album objects."
                }
            ],
            "description": ""
        },
        {
            "name": "Get Spotify's list of featured playlists",
            "url": "https://api.spotify.com/v1/browse/featured-playlists",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "locale",
                    "required": false,
                    "type": "string",
                    "description": "The desired language, ISO 639-1 code and ISO 3166-1 alpha-2 country code joined by an underscore, e.g., 'es_MX'. If not supplied, defaults to American English."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default: 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "message",
                    "is_array": false,
                    "type": "string",
                    "description": "The localized message of a playlist."
                },
                {
                    "name": "playlists",
                    "is_array": false,
                    "type": "object",
                    "description": "A paged set of playlists."
                }
            ],
            "description": ""
        },
        {
            "name": "Get Album",
            "url": "https://api.spotify.com/v1/albums/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the album. Example: '4aawyAB9vmqN3uQ7FjRGTy'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. Specifies the market in which to return content. Example: 'ES'. If not provided, defaults to user's country if access token is provided."
                }
            ],
            "output_parameters": [
                {
                    "name": "album_type",
                    "is_array": false,
                    "type": "string",
                    "description": "The type of the album. Allowed values: 'album', 'single', 'compilation'."
                },
                {
                    "name": "total_tracks",
                    "is_array": false,
                    "type": "integer",
                    "description": "The number of tracks in the album."
                },
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "Markets where the album is available, specified by ISO 3166-1 alpha-2 codes. Example: ['CA','BR','IT']."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for this album, contains 'spotify' string."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint providing full details of the album."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID of the album. Example: '2up3OPMp9Tb4dAKM2erWXQ'."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "The cover art in various sizes."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the album."
                },
                {
                    "name": "release_date",
                    "is_array": false,
                    "type": "string",
                    "description": "The release date of the album. Format varies by 'release_date_precision'."
                },
                {
                    "name": "release_date_precision",
                    "is_array": false,
                    "type": "string",
                    "description": "Precision of 'release_date'. Allowed values: 'year', 'month', 'day'."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Content restrictions, if any, includes 'reason' field."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type: 'album'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI of the album, e.g., 'spotify:album:...'."
                },
                {
                    "name": "artists",
                    "is_array": true,
                    "type": "object",
                    "description": "Artists of the album."
                },
                {
                    "name": "tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "Tracks in the album, with 'href', 'limit', 'next', 'offset', 'previous', 'total', 'items'."
                },
                {
                    "name": "copyrights",
                    "is_array": true,
                    "type": "object",
                    "description": "Copyright statements."
                },
                {
                    "name": "external_ids",
                    "is_array": false,
                    "type": "object",
                    "description": "External identifiers like ISRC, EAN, UPC."
                },
                {
                    "name": "genres",
                    "is_array": true,
                    "type": "string",
                    "description": "(Deprecated) always empty array."
                },
                {
                    "name": "label",
                    "is_array": false,
                    "type": "string",
                    "description": "Label associated with the album."
                },
                {
                    "name": "popularity",
                    "is_array": false,
                    "type": "integer",
                    "description": "Popularity score between 0 and 100."
                }
            ],
            "description": "Get detailed information about a specific album by Spotify ID."
        },
        {
            "name": "Reorder or replace playlist tracks",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist. Example: '3cEYpjA9oz9GiPac4AsH4n'."
                },
                {
                    "name": "uris",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of Spotify URIs to add (for replacing tracks). Example: 'spotify:track:...'. Max 100 items."
                },
                {
                    "name": "range_start",
                    "required": false,
                    "type": "integer",
                    "description": "Position of the first item to be reordered."
                },
                {
                    "name": "insert_before",
                    "required": false,
                    "type": "integer",
                    "description": "Position where the items should be inserted."
                },
                {
                    "name": "range_length",
                    "required": false,
                    "type": "integer",
                    "description": "Number of items to move starting from 'range_start'. Defaults to 1."
                },
                {
                    "name": "snapshot_id",
                    "required": false,
                    "type": "string",
                    "description": "The playlist's snapshot ID for concurrency control."
                }
            ],
            "output_parameters": [
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "A Snapshot ID for the playlist after the operation, e.g., 'abc'."
                }
            ],
            "description": "Reorder or replace tracks in a playlist. Use 'uris' to replace tracks, or 'range_start', 'insert_before', and 'range_length' to reorder."
        },
        {
            "name": "Spotify URIs and IDs",
            "url": "https://developer.spotify.com/documentation/web-api/concepts/spotify-uris-ids",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [],
            "output_parameters": [
                {
                    "name": "spotify_uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Resource identifier for entities like artist, album, or track. Example: 'spotify:track:6rqhFgbbKwnb9MLmUQDhG6'."
                },
                {
                    "name": "spotify_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Base62 identifier found at the end of the URI. Example: '6rqhFgbbKwnb9MLmUQDhG6'."
                },
                {
                    "name": "spotify_category_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Unique string for Spotify category. Example: 'party'."
                },
                {
                    "name": "spotify_user_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Unique string for Spotify user ID. Example: 'wizzler'."
                },
                {
                    "name": "spotify_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to open resource in Spotify client. Example: 'http://open.spotify.com/track/6rqhFgbbKwnb9MLmUQDhG6'."
                }
            ],
            "description": "Provides the standard Spotify URIs and IDs for resources like tracks, artists, albums, categories, and users."
        },
        {
            "name": "Get Playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist. Example: '3cEYpjA9oz9GiPac4AsH4n'."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An ISO 3166-1 alpha-2 country code. Content available in this market will be returned. If a user access token is provided, the user's country takes priority. No value or null indicates content is unavailable."
                },
                {
                    "name": "fields",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of fields to return, supports dot notation and parentheses for nested fields. Example: 'description,uri'."
                },
                {
                    "name": "additional_types",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of item types besides 'track', valid values are 'track' and 'episode'."
                }
            ],
            "output_parameters": [
                {
                    "name": "collaborative",
                    "is_array": false,
                    "type": "boolean",
                    "description": "True if the owner allows other users to modify the playlist."
                },
                {
                    "name": "description",
                    "is_array": false,
                    "type": "string",
                    "description": "The playlist description. Nullable; null if not available."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "Known external URLs for the playlist. Contains 'spotify' string."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint for full playlist details."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the playlist."
                },
                {
                    "name": "images",
                    "is_array": true,
                    "type": "object",
                    "description": "Images for the playlist, up to three, ordered by size. Each contains 'url', 'height', and 'width'."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "The name of the playlist."
                },
                {
                    "name": "owner",
                    "is_array": false,
                    "type": "object",
                    "description": "User who owns the playlist, contains 'external_urls', 'href', 'id', 'type', 'uri', 'display_name'."
                },
                {
                    "name": "public",
                    "is_array": false,
                    "type": "boolean",
                    "description": "The playlist's public/private status; true, false, or null."
                },
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "Playlist version identifier."
                },
                {
                    "name": "tracks",
                    "is_array": false,
                    "type": "object",
                    "description": "Details about the tracks, including 'href', 'limit', 'next', 'offset', 'previous', 'total', 'items'."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type: 'playlist'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify URI for the playlist."
                }
            ],
            "description": "Retrieve full details of a playlist owned by a Spotify user."
        },
        {
            "name": "Add Items to Playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks",
            "args_in_url": true,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the playlist."
                },
                {
                    "name": "position",
                    "required": false,
                    "type": "integer",
                    "description": "Zero-based index to insert items at. Defaults to appending if omitted."
                },
                {
                    "name": "uris",
                    "required": false,
                    "type": "string",
                    "description": "Comma-separated list of Spotify URIs to add, e.g., 'spotify:track:...' or 'spotify:episode:...'. Support up to 100 items; recommended to send as JSON array in body."
                }
            ],
            "output_parameters": [
                {
                    "name": "snapshot_id",
                    "is_array": false,
                    "type": "string",
                    "description": "A snapshot ID for the playlist after addition."
                }
            ],
            "description": "Add one or more items to a user's playlist, responding with a snapshot ID."
        },
        {
            "name": "Follow Artists or Users",
            "url": "https://api.spotify.com/v1/me/following?type={type}",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "type",
                    "required": true,
                    "type": "string",
                    "description": "The ID type. Allowed values: 'artist' or 'user'."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs (max 50). Alternatively, provide JSON array in body."
                }
            ],
            "output_parameters": [
                {
                    "name": "status",
                    "is_array": false,
                    "type": "string",
                    "description": "HTTP response status indicating success or failure."
                }
            ],
            "description": "Follow one or more artists or users, adding the current user as a follower, requiring 'user-follow-modify' scope."
        },
        {
            "name": "Remove user's saved tracks",
            "url": "https://api.spotify.com/v1/me/tracks",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for the tracks to remove. Maximum: 50 IDs. Example: '7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ'."
                },
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "An array of Spotify track IDs, up to 50 items. Example: ['7ouMYWpwJ422jRcDASZB7P', '4VqPOruhp5EdPBeR92t6lQ']"
                }
            ],
            "output_parameters": [],
            "description": "Deletes one or more tracks from the current user's 'Your Music' library using either the comma-separated string or array format for IDs."
        },
        {
            "name": "Get audio features for a track",
            "url": "https://api.spotify.com/v1/audio-features/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID for the track. Example: '11dFghVXANMlKmJXsNCbNl'."
                }
            ],
            "output_parameters": [
                {
                    "name": "acousticness",
                    "is_array": false,
                    "type": "float",
                    "description": "Confidence measure from 0.0 to 1.0 of whether the track is acoustic. E.g., 0.00242."
                },
                {
                    "name": "analysis_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to access the full audio analysis, requires an access token. Example: 'https://api.spotify.com/v1/audio-analysis/2takcwOaAZWiXQijPHIx7B'."
                },
                {
                    "name": "danceability",
                    "is_array": false,
                    "type": "float",
                    "description": "Describes how suitable the track is for dancing, from 0.0 (least danceable) to 1.0 (most danceable). Example: 0.585."
                },
                {
                    "name": "duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Length of the track in milliseconds. Example: 237040."
                },
                {
                    "name": "energy",
                    "is_array": false,
                    "type": "float",
                    "description": "Perceptual measure from 0.0 to 1.0 of intensity and activity. Example: 0.842."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "The Spotify ID for the track. Example: '2takcwOaAZWiXQijPHIx7B'."
                },
                {
                    "name": "instrumentalness",
                    "is_array": false,
                    "type": "float",
                    "description": "Predicts likelihood of no vocals, from 0.0 to 1.0. Example: 0.00686."
                },
                {
                    "name": "key",
                    "is_array": false,
                    "type": "integer",
                    "description": "The key the track is in, from -1 (no key detected) to 11, using Pitch Class notation. Example: 9."
                },
                {
                    "name": "liveness",
                    "is_array": false,
                    "type": "float",
                    "description": "Detects presence of audience, from 0.0 to 1.0. Example: 0.0866."
                },
                {
                    "name": "loudness",
                    "is_array": false,
                    "type": "float",
                    "description": "Overall loudness in decibels. Example: -5.883."
                },
                {
                    "name": "mode",
                    "is_array": false,
                    "type": "integer",
                    "description": "Modal scale, 1 for major, 0 for minor. Example: 0."
                },
                {
                    "name": "speechiness",
                    "is_array": false,
                    "type": "float",
                    "description": "Detects presence of spoken words, from 0.0 to 1.0. Example: 0.0556."
                },
                {
                    "name": "tempo",
                    "is_array": false,
                    "type": "float",
                    "description": "Estimated tempo in beats per minute. Example: 118.211."
                },
                {
                    "name": "time_signature",
                    "is_array": false,
                    "type": "integer",
                    "description": "Estimated time signature, from 3 to 7. Example: 4."
                },
                {
                    "name": "track_href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint for full track details. Example: 'https://api.spotify.com/v1/tracks/2takcwOaAZWiXQijPHIx7B'."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, fixed value: 'audio_features'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the track. Example: 'spotify:track:2takcwOaAZWiXQijPHIx7B'."
                },
                {
                    "name": "valence",
                    "is_array": false,
                    "type": "float",
                    "description": "Musical positiveness measure, from 0.0 (negative) to 1.0 (positive). Example: 0.428."
                }
            ],
            "description": "Retrieves audio features for a specific track identified by its Spotify ID, providing a detailed audio analysis."
        },
        {
            "name": "Get user's top artists or tracks",
            "url": "https://api.spotify.com/v1/me/top/{type}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "type",
                    "required": true,
                    "type": "string",
                    "description": "The type of entity to return: 'artists' or 'tracks'. Allowed values: 'artists', 'tracks'."
                },
                {
                    "name": "time_range",
                    "required": false,
                    "type": "string",
                    "description": "Time frame for the data: 'long_term', 'medium_term', 'short_term'. Defaults to 'medium_term'."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return, between 1 and 50. Default: 20."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the full result set. Example: 'https://api.spotify.com/v1/me/shows?offset=0&limit=20'."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Number of items in the response, as set in the query."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to next page, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Index of the first item in the returned page."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of items available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of artist or track objects."
                }
            ],
            "description": "Retrieves the current user's most played artists or tracks over a specified time period, limited to 50 items."
        },
        {
            "name": "Get Audiobook Chapters",
            "url": "https://api.spotify.com/v1/audiobooks/{id}/chapters",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify ID of the audiobook."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code. If specified, only content available in that market will be returned."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default is 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return. Default is 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint returning full results."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Offset of the first item returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of items available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of chapter objects."
                }
            ],
            "description": "Retrieve audiobook chapters with pagination support."
        },
        {
            "name": "Get Several Chapters",
            "url": "https://api.spotify.com/v1/chapters",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "Comma-separated list of Spotify IDs for chapters. Max 50 IDs."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code. Content availability depends on market."
                }
            ],
            "output_parameters": [
                {
                    "name": "chapters",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of chapter objects."
                }
            ],
            "description": "Retrieve multiple chapters by their Spotify IDs."
        },
        {
            "name": "Toggle Playback Shuffle",
            "url": "https://api.spotify.com/v1/me/player/shuffle",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "state",
                    "required": true,
                    "type": "boolean",
                    "description": "Required. true to shuffle user's playback; false to do not shuffle user's playback."
                },
                {
                    "name": "device_id",
                    "required": false,
                    "type": "string",
                    "description": "Optional. The id of the device this command is targeting. If not supplied, the currently active device is the target."
                }
            ],
            "output_parameters": [],
            "description": "Controls whether shuffle is enabled or disabled on the user's playback."
        },
        {
            "name": "Get Several Browse Categories",
            "url": "https://api.spotify.com/v1/browse/categories",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "locale",
                    "required": false,
                    "type": "string",
                    "description": "Optional. The desired language, consisting of an ISO 639-1 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore (e.g., 'es_MX'). This parameter specifies in which language the category strings should be returned."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Optional. The maximum number of items to return. Default is 20. Minimum is 1, maximum is 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Optional. The index of the first item to return. Default is 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "categories",
                    "is_array": false,
                    "type": "object",
                    "description": "A paged set of categories."
                }
            ],
            "description": "Retrieves a list of categories used to tag items in Spotify."
        },
        {
            "name": "Get Track",
            "url": "https://api.spotify.com/v1/tracks/{id}",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "id",
                    "required": true,
                    "type": "string",
                    "description": "Required. The Spotify ID of the track."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "Optional. An ISO 3166-1 alpha-2 country code. If specified, only content available in that market will be returned. If a user access token is provided, the country of the user account will take priority. If neither market nor user country is provided, content is considered unavailable."
                }
            ],
            "output_parameters": [
                {
                    "name": "album",
                    "is_array": false,
                    "type": "object",
                    "description": "The album on which the track appears. Contains details like album type, total tracks, available markets, external URLs, images, name, release date, restrictions, type, URI, and artists."
                },
                {
                    "name": "artists",
                    "is_array": true,
                    "type": "object",
                    "description": "The artists of the track, each including external URLs, href, id, name, type, and uri."
                },
                {
                    "name": "available_markets",
                    "is_array": true,
                    "type": "string",
                    "description": "List of countries where the track can be played, identified by ISO 3166-1 alpha-2 codes."
                },
                {
                    "name": "disc_number",
                    "is_array": false,
                    "type": "integer",
                    "description": "Disc number, usually 1 unless the album has multiple discs."
                },
                {
                    "name": "duration_ms",
                    "is_array": false,
                    "type": "integer",
                    "description": "Length of the track in milliseconds."
                },
                {
                    "name": "explicit",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the track has explicit lyrics."
                },
                {
                    "name": "external_ids",
                    "is_array": false,
                    "type": "object",
                    "description": "External IDs for the track, such as ISRC, EAN, UPC."
                },
                {
                    "name": "external_urls",
                    "is_array": false,
                    "type": "object",
                    "description": "External URLs for the track, including Spotify URL."
                },
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the Web API endpoint for full details of the track."
                },
                {
                    "name": "id",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify ID for the track."
                },
                {
                    "name": "is_playable",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Part of response when track relinking is applied; indicates if the track is playable in the given market."
                },
                {
                    "name": "linked_from",
                    "is_array": false,
                    "type": "object",
                    "description": "Contains information about the originally requested track if relinking has replaced it."
                },
                {
                    "name": "restrictions",
                    "is_array": false,
                    "type": "object",
                    "description": "Restrictions applied to the content, including reason."
                },
                {
                    "name": "name",
                    "is_array": false,
                    "type": "string",
                    "description": "Name of the track."
                },
                {
                    "name": "popularity",
                    "is_array": false,
                    "type": "integer",
                    "description": "Popularity of the track, between 0 and 100."
                },
                {
                    "name": "preview_url",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to a 30-second preview of the track, or null. Deprecated."
                },
                {
                    "name": "track_number",
                    "is_array": false,
                    "type": "integer",
                    "description": "Track number on the album."
                },
                {
                    "name": "type",
                    "is_array": false,
                    "type": "string",
                    "description": "Object type, which is 'track'."
                },
                {
                    "name": "uri",
                    "is_array": false,
                    "type": "string",
                    "description": "Spotify URI for the track."
                },
                {
                    "name": "is_local",
                    "is_array": false,
                    "type": "boolean",
                    "description": "Indicates if the track is from a local file."
                }
            ],
            "description": "Retrieves detailed information about a specific track by its Spotify ID."
        },
        {
            "name": "Get Playlist Items",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/tracks",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) of the playlist."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). If a country code is specified, only content available in that market will be returned. Defaults to the user's country if a user access token is provided."
                },
                {
                    "name": "fields",
                    "required": false,
                    "type": "string",
                    "description": "Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "The maximum number of items to return. Default: 20. Range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first item to return. Default: 0."
                },
                {
                    "name": "additional_types",
                    "required": false,
                    "type": "string",
                    "description": "A comma-separated list of item types supported besides 'track'. Valid types: 'track' and 'episode'."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "The maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "The total number of items available to return."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of PlaylistTrackObject. Each item includes details about added tracks or episodes."
                }
            ],
            "description": "Retrieves the tracks or episodes of a playlist, with support for pagination and filtering."
        },
        {
            "name": "Get Multiple Audiobooks",
            "url": "https://api.spotify.com/v1/audiobooks",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the [Spotify IDs](/documentation/web-api/concepts/spotify-uris-ids) of the audiobooks, max 50 IDs."
                },
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "An [ISO 3166-1 alpha-2 country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). If specified, only content available in that market will be returned."
                }
            ],
            "output_parameters": [
                {
                    "name": "audiobooks",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of AudiobookObject, each representing an audiobook or null if unavailable."
                }
            ],
            "description": "Fetches information for multiple audiobooks by their Spotify IDs, taking into account market restrictions."
        },
        {
            "name": "Save Shows for Current User",
            "url": "https://api.spotify.com/v1/me/shows",
            "args_in_url": false,
            "method": "PUT",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of the Spotify IDs for the shows to save. Maximum of 50 IDs. Example: '5CfCWKI5pZ28U0uOzXkDHe,5as3aKmN2k11yfDDDSrvaZ'."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to save one or multiple shows to the current Spotify user's library."
        },
        {
            "name": "Get a List of Current User's Playlists",
            "url": "https://api.spotify.com/v1/me/playlists",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50. Example: 10."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "The index of the first playlist to return. Default: 0. Example: 5."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "The maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of playlists."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of playlist objects."
                }
            ],
            "description": "Endpoint to retrieve a paginated list of playlists owned or followed by the current user."
        },
        {
            "name": "Unfollow Playlist",
            "url": "https://api.spotify.com/v1/playlists/{playlist_id}/followers",
            "args_in_url": true,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "playlist_id",
                    "required": true,
                    "type": "string",
                    "description": "Spotify ID of the playlist to unfollow. Example: '3cEYpjA9oz9GiPac4AsH4n'."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to remove the current user as a follower of a specific playlist."
        },
        {
            "name": "Remove User's Saved Episodes",
            "url": "https://api.spotify.com/v1/me/episodes",
            "args_in_url": false,
            "method": "DELETE",
            "input_parameters": [
                {
                    "name": "ids",
                    "required": true,
                    "type": "string",
                    "description": "A comma-separated list of Spotify IDs for the episodes to remove. Maximum of 50 IDs. Example: '7ouMYWpwJ422jRcDASZB7P,4VqPOruhp5EdPBeR92t6lQ,2takcwOaAZWiXQijPHIx7B'."
                }
            ],
            "output_parameters": [],
            "description": "Endpoint to remove episodes from the current user's library, accepting a list of episode IDs."
        },
        {
            "name": "Client Credentials Flow - Request Token",
            "url": "https://accounts.spotify.com/api/token",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "grant_type",
                    "required": true,
                    "type": "string",
                    "description": "Must be set to 'client_credentials' to obtain an access token."
                }
            ],
            "output_parameters": [
                {
                    "name": "access_token",
                    "is_array": false,
                    "type": "string",
                    "description": "An access token for making authenticated requests."
                },
                {
                    "name": "token_type",
                    "is_array": false,
                    "type": "string",
                    "description": "Always 'Bearer'."
                },
                {
                    "name": "expires_in",
                    "is_array": false,
                    "type": "integer",
                    "description": "Token validity duration in seconds."
                }
            ],
            "description": "Endpoint to obtain an access token using the client credentials flow for server-to-server authentication."
        },
        {
            "name": "Get User's Saved Audiobooks",
            "url": "https://api.spotify.com/v1/me/audiobooks",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default: 20. Range: 1 - 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of items available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of saved audiobooks."
                }
            ],
            "description": "Retrieve a list of audiobooks saved in the current user's library."
        },
        {
            "name": "Get User's Saved Tracks",
            "url": "https://api.spotify.com/v1/me/tracks",
            "args_in_url": false,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "market",
                    "required": false,
                    "type": "string",
                    "description": "ISO 3166-1 alpha-2 country code. If specified, only content available in that market is returned. Example: 'ES'."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of items to return. Default: 20. Range: 1 - 50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first item to return. Default: 0."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "Link to the endpoint returning the full result."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "Offset of the items."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of saved tracks."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "Array of saved track objects."
                }
            ],
            "description": "Retrieve a list of tracks saved in the current user's library."
        },
        {
            "name": "Get User's Playlists",
            "url": "https://api.spotify.com/v1/users/{user_id}/playlists",
            "args_in_url": true,
            "method": "GET",
            "input_parameters": [
                {
                    "name": "user_id",
                    "required": true,
                    "type": "string",
                    "description": "The Spotify user ID. Examples: 'smedjan'. This is a path parameter, part of the URL."
                },
                {
                    "name": "limit",
                    "required": false,
                    "type": "integer",
                    "description": "Maximum number of playlists to return. Default is 20. Allowed range: 1-50."
                },
                {
                    "name": "offset",
                    "required": false,
                    "type": "integer",
                    "description": "Index of the first playlist to return. Default is 0. Allowed range: 0-100000."
                }
            ],
            "output_parameters": [
                {
                    "name": "href",
                    "is_array": false,
                    "type": "string",
                    "description": "A link to the Web API endpoint returning the full result of the request."
                },
                {
                    "name": "limit",
                    "is_array": false,
                    "type": "integer",
                    "description": "Maximum number of items in the response."
                },
                {
                    "name": "next",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the next page of items, or null if none."
                },
                {
                    "name": "offset",
                    "is_array": false,
                    "type": "integer",
                    "description": "The offset of the items returned."
                },
                {
                    "name": "previous",
                    "is_array": false,
                    "type": "string",
                    "description": "URL to the previous page of items, or null if none."
                },
                {
                    "name": "total",
                    "is_array": false,
                    "type": "integer",
                    "description": "Total number of playlists available."
                },
                {
                    "name": "items",
                    "is_array": true,
                    "type": "object",
                    "description": "An array of playlist objects."
                }
            ],
            "description": "Retrieve a list of the playlists owned or followed by a Spotify user. Requires 'playlist-read-private' scope."
        }
    ],
    "general_info": [
        {
            "var_name": "type",
            "type": "str",
            "default_val": "",
            "explanation": "Must be either `artist`, `user`, or `'user'` depending on context; specify object type."
        },
        {
            "var_name": "ids",
            "type": "str",
            "default_val": "",
            "explanation": "Comma-separated list of Spotify IDs used for various endpoints, with a maximum count of 50, to identify artists, tracks, shows, or users."
        },
        {
            "var_name": "limit",
            "type": "int",
            "default_val": "20",
            "explanation": "Number of items to return per request, with typical range from 1 to 100 or 50 depending on endpoint."
        },
        {
            "var_name": "market",
            "type": "str",
            "default_val": "None",
            "explanation": "ISO 3166-1 alpha-2 country code to filter content or specify market, defaulting to user's country if not provided."
        },
        {
            "var_name": "seed_artists",
            "type": "str",
            "default_val": "None",
            "explanation": "Comma-separated list of Spotify artist IDs to seed recommendations."
        },
        {
            "var_name": "seed_genres",
            "type": "str",
            "default_val": "None",
            "explanation": "Comma-separated list of genres to seed recommendations."
        },
        {
            "var_name": "seed_tracks",
            "type": "str",
            "default_val": "None",
            "explanation": "Comma-separated list of Spotify track IDs to seed recommendations."
        },
        {
            "var_name": "device_id",
            "type": "str",
            "default_val": "None",
            "explanation": "ID of the device to target for playback operations; optional."
        },
        {
            "var_name": "locale",
            "type": "str",
            "default_val": "None",
            "explanation": "Locale string in ISO 639-1 and ISO 3166-1 alpha-2 for language-specific responses."
        },
        {
            "var_name": "id",
            "type": "str",
            "default_val": "None",
            "explanation": "The Spotify ID of a specific resource such as track, album, show, or category."
        },
        {
            "var_name": "offset",
            "type": "int",
            "default_val": "0",
            "explanation": "Index of the first item to return, used for pagination."
        },
        {
            "var_name": "position_ms",
            "type": "int",
            "default_val": "None",
            "explanation": "Position in milliseconds to seek to within the current track."
        },
        {
            "var_name": "category_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier for specific category; used in category-related endpoints."
        },
        {
            "var_name": "country",
            "type": "str",
            "default_val": "",
            "explanation": "ISO 3166-1 alpha-2 country code indicating user's country, used for regional content filtering."
        },
        {
            "var_name": "display_name",
            "type": "str",
            "default_val": "None",
            "explanation": "User's display name; null if not available."
        },
        {
            "var_name": "email",
            "type": "str",
            "default_val": "None",
            "explanation": "User's email address; available only if scope is granted."
        },
        {
            "var_name": "explicit_content",
            "type": "int",
            "default_val": "None",
            "explanation": "Explicit content settings object or flag."
        },
        {
            "var_name": "external_urls",
            "type": "str",
            "default_val": "",
            "explanation": "External URLs associated with the user."
        },
        {
            "var_name": "followers_total",
            "type": "int",
            "default_val": "0",
            "explanation": "Number of followers the user has."
        },
        {
            "var_name": "href",
            "type": "str",
            "default_val": "",
            "explanation": "API link to the user's profile."
        },
        {
            "var_name": "images_url",
            "type": "str",
            "default_val": "",
            "explanation": "URL of the user's profile image."
        },
        {
            "var_name": "product",
            "type": "str",
            "default_val": "",
            "explanation": "Subscription level: e.g., premium, free."
        },
        {
            "var_name": "uri",
            "type": "str",
            "default_val": "",
            "explanation": "Spotify URI for the user or resource."
        },
        {
            "var_name": "state",
            "type": "int",
            "default_val": "None",
            "explanation": "Boolean as integer indicating shuffle state; true (1) to shuffle, false (0) to not."
        },
        {
            "var_name": "playlist_id",
            "type": "str",
            "default_val": "",
            "explanation": "Spotify ID of the playlist to fetch items from."
        },
        {
            "var_name": "fields",
            "type": "str",
            "default_val": "None",
            "explanation": "Specific data fields to include in the response."
        },
        {
            "var_name": "additional_types",
            "type": "str",
            "default_val": "None",
            "explanation": "Additional content types supported besides 'track', such as 'episode'."
        },
        {
            "var_name": "category_id",
            "type": "str",
            "default_val": "None",
            "explanation": "Identifier for a category, used to fetch related playlists or items."
        },
        {
            "var_name": "body",
            "type": "str",
            "default_val": "None",
            "explanation": "JSON payload, such as list of IDs for batch operations."
        }
    ]
}